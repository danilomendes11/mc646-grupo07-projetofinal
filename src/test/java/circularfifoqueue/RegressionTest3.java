package circularfifoqueue;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        int int54 = charSequenceQueue48.maxSize();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = charSequenceList57.contains(obj59);
        java.lang.String str61 = charSequenceList57.toString();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        boolean boolean69 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean73 = charSequenceQueue71.offer((java.lang.CharSequence) "");
        boolean boolean75 = charSequenceQueue71.add((java.lang.CharSequence) "hi!");
        int int76 = charSequenceQueue71.maxSize();
        boolean boolean77 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean81 = charSequenceQueue79.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence82 = charSequenceQueue79.peek();
        boolean boolean84 = charSequenceQueue79.add((java.lang.CharSequence) "");
        boolean boolean85 = charSequenceList57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean86 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        boolean boolean87 = charSequenceQueue48.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream88 = charSequenceQueue48.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!]" + "'", str61, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "" + "'", charSequence82, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceStream88);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.lang.String str43 = charSequenceQueue38.toString();
        boolean boolean44 = charSequenceQueue38.isAtFullCapacity();
        charSequenceQueue38.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        int int12 = charSequenceQueue7.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        boolean boolean29 = charSequenceQueue26.isEmpty();
        int int30 = charSequenceQueue26.maxSize();
        boolean boolean31 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean32 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean33 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceQueue35.isEmpty();
        boolean boolean45 = charSequenceQueue35.remove((java.lang.Object) 10.0d);
        charSequenceQueue35.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int49 = charSequenceQueue48.maxSize();
        boolean boolean50 = charSequenceQueue35.remove((java.lang.Object) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue51.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.stream();
        java.lang.Comparable[][][][] comparableArray57 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray58 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray57;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray59 = charSequenceQueue54.toArray(strComparableArray58);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray60 = charSequenceQueue51.toArray(strComparableArray58);
        java.lang.Object[][] objArray61 = charSequenceQueue35.toArray((java.lang.Object[][]) strComparableArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String>[][][][] strComparableArray62 = charSequenceQueue7.toArray(strComparableArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 100 + "'", int49 == 100);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertNotNull(comparableArray57);
        org.junit.Assert.assertNotNull(strComparableArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertNotNull(strComparableArray60);
        org.junit.Assert.assertNotNull(objArray61);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean63 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71, charSequenceArray70);
        boolean boolean73 = charSequenceQueue71.isAtFullCapacity();
        boolean boolean74 = charSequenceQueue65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceQueue76.spliterator();
        boolean boolean80 = charSequenceQueue76.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence81 = charSequenceQueue76.poll();
        boolean boolean82 = charSequenceQueue71.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.lang.CharSequence charSequence83 = charSequenceQueue71.remove();
        boolean boolean84 = charSequenceQueue71.isFull();
        java.lang.String str85 = charSequenceQueue71.toString();
        int int86 = charSequenceQueue71.maxSize();
        java.lang.CharSequence charSequence88 = charSequenceQueue71.get((int) (byte) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue89 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        java.lang.CharSequence charSequence90 = charSequenceQueue89.remove();
        boolean boolean91 = charSequenceQueue52.remove((java.lang.Object) charSequence90);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "" + "'", charSequence83, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[]" + "'", str85, "[]");
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 32 + "'", int86 == 32);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "" + "'", charSequence88, "");
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        charSequenceQueue8.clear();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue8.add((java.lang.CharSequence) "[]");
        boolean boolean17 = charSequenceQueue8.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean18 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue8.spliterator();
        java.lang.Class<?> wildcardClass20 = charSequenceQueue8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean11 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) boolean11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceItor14);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue12.stream();
        boolean boolean21 = charSequenceQueue12.isEmpty();
        boolean boolean23 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue12.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        int int11 = charSequenceQueue1.maxSize();
        java.lang.Object obj12 = null;
        boolean boolean13 = charSequenceQueue1.contains(obj12);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        int int6 = charSequenceQueue1.size();
        java.lang.Object[] objArray7 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        boolean boolean25 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence26 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence charSequence28 = charSequenceQueue1.remove();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection29 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean30 = charSequenceQueue1.retainAll(charSequenceCollection29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.stream();
        java.lang.String str31 = charSequenceQueue29.toString();
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue40.iterator();
        boolean boolean49 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        java.lang.CharSequence charSequence72 = charSequenceQueue57.get((int) (short) 0);
        boolean boolean73 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean76 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean77 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue78.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor80 = charSequenceQueue78.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertNotNull(charSequenceItor80);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue19.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue19.spliterator();
        boolean boolean27 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean29 = charSequenceQueue19.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue31.spliterator();
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue31.poll();
        boolean boolean38 = charSequenceQueue31.add((java.lang.CharSequence) "");
        charSequenceQueue31.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue31.stream();
        charSequenceQueue31.clear();
        boolean boolean42 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue49.element();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList60 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65, charSequenceArray64);
        boolean boolean67 = charSequenceQueue65.isAtFullCapacity();
        boolean boolean68 = charSequenceList60.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        boolean boolean69 = charSequenceList55.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean70 = charSequenceQueue49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean71 = charSequenceQueue44.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean75 = charSequenceQueue73.offer((java.lang.CharSequence) "");
        charSequenceQueue73.clear();
        boolean boolean78 = charSequenceQueue73.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList82 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82, charSequenceArray81);
        boolean boolean84 = charSequenceQueue73.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        boolean boolean85 = charSequenceQueue44.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList82);
        boolean boolean86 = charSequenceQueue44.isAtFullCapacity();
        boolean boolean87 = charSequenceQueue19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        boolean boolean88 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence89 = charSequenceQueue44.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        boolean boolean47 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean48 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean49 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean50 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean51 = charSequenceList16.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean52 = charSequenceQueue1.remove((java.lang.Object) boolean51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str55 = charSequenceQueue54.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList62 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.lang.Object obj64 = null;
        boolean boolean65 = charSequenceList62.contains(obj64);
        java.lang.String str66 = charSequenceList62.toString();
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList69 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = charSequenceList69.contains(obj71);
        java.lang.String str73 = charSequenceList69.toString();
        boolean boolean74 = charSequenceList62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean75 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList78 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = charSequenceList78.contains(obj80);
        java.lang.String str82 = charSequenceList78.toString();
        boolean boolean83 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean84 = charSequenceQueue54.contains((java.lang.Object) charSequenceList78);
        int int85 = charSequenceQueue54.maxSize();
        boolean boolean86 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.Object[] objArray87 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray88 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[]" + "'", str55, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!]" + "'", str66, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!]" + "'", str73, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[hi!]" + "'", str82, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertNotNull(objArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray88), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray88), "[]");
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue8.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence25 = charSequenceQueue21.poll();
        boolean boolean26 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue21.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue26.parallelStream();
        boolean boolean29 = charSequenceQueue26.contains((java.lang.Object) 1.0d);
        boolean boolean30 = charSequenceQueue26.isFull();
        boolean boolean31 = charSequenceQueue26.isFull();
        int int32 = charSequenceQueue26.maxSize();
        int int33 = charSequenceQueue26.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41, charSequenceArray40);
        boolean boolean43 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean44 = charSequenceQueue35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue35.stream();
        boolean boolean46 = charSequenceQueue26.contains((java.lang.Object) charSequenceStream45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue26.spliterator();
        boolean boolean48 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence49 = charSequenceQueue26.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue22.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue27.spliterator();
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "");
        java.lang.String str32 = charSequenceQueue27.toString();
        java.lang.CharSequence charSequence33 = charSequenceQueue27.element();
        boolean boolean34 = charSequenceQueue22.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean35 = charSequenceQueue27.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue27.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceStream36);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue12.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue12.iterator();
        boolean boolean16 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence17 = charSequenceQueue1.remove();
        boolean boolean19 = charSequenceQueue1.add((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue1.spliterator();
        int int22 = charSequenceQueue1.size();
        boolean boolean24 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 3 + "'", int22 == 3);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.String str41 = charSequenceList37.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue52.parallelStream();
        boolean boolean55 = charSequenceQueue52.contains((java.lang.Object) 1.0d);
        boolean boolean56 = charSequenceQueue52.isFull();
        boolean boolean57 = charSequenceQueue52.isFull();
        int int58 = charSequenceQueue52.maxSize();
        int int59 = charSequenceQueue52.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67, charSequenceArray66);
        boolean boolean69 = charSequenceQueue67.isAtFullCapacity();
        boolean boolean70 = charSequenceQueue61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceQueue61.stream();
        boolean boolean72 = charSequenceQueue52.contains((java.lang.Object) charSequenceStream71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue52.spliterator();
        int int74 = charSequenceQueue52.maxSize();
        boolean boolean75 = charSequenceQueue47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        int int76 = charSequenceQueue47.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue78.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceQueue78.spliterator();
        boolean boolean82 = charSequenceQueue78.add((java.lang.CharSequence) "");
        boolean boolean83 = charSequenceQueue78.isAtFullCapacity();
        java.lang.CharSequence charSequence84 = charSequenceQueue78.element();
        int int85 = charSequenceQueue78.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue78.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceQueue78.spliterator();
        boolean boolean88 = charSequenceQueue47.remove((java.lang.Object) charSequenceQueue78);
        boolean boolean89 = charSequenceQueue47.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray8 = charSequenceQueue5.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue5.iterator();
        boolean boolean10 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue5);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceQueue1.get(0);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (0) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        charSequenceQueue2.clear();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.peek();
        boolean boolean35 = charSequenceQueue30.add((java.lang.CharSequence) "");
        boolean boolean36 = charSequenceList8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.parallelStream();
        boolean boolean41 = charSequenceQueue38.contains((java.lang.Object) 1.0d);
        boolean boolean42 = charSequenceQueue38.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue44.parallelStream();
        boolean boolean47 = charSequenceQueue44.contains((java.lang.Object) 1.0d);
        boolean boolean48 = charSequenceQueue44.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue44.stream();
        boolean boolean50 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        boolean boolean51 = charSequenceQueue38.isEmpty();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        boolean boolean66 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue67.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue67.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceQueue71.spliterator();
        java.lang.CharSequence charSequence73 = charSequenceQueue71.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean77 = charSequenceQueue75.offer((java.lang.CharSequence) "");
        boolean boolean78 = charSequenceQueue71.contains((java.lang.Object) charSequenceQueue75);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor79 = charSequenceQueue71.iterator();
        boolean boolean80 = charSequenceQueue67.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        boolean boolean81 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream82 = charSequenceQueue38.stream();
        boolean boolean83 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean84 = charSequenceQueue2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence85 = charSequenceQueue2.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertNull(charSequence73);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceItor79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceList19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean28 = charSequenceQueue24.isAtFullCapacity();
        int int29 = charSequenceQueue24.maxSize();
        boolean boolean30 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean32 = charSequenceQueue11.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceQueue11.remove();
        boolean boolean34 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue1.spliterator();
        boolean boolean36 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean29 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue42.spliterator();
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue42.poll();
        boolean boolean48 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean61 = charSequenceQueue57.isAtFullCapacity();
        int int62 = charSequenceQueue57.maxSize();
        boolean boolean63 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean64 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean66 = charSequenceQueue8.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence67 = charSequenceQueue8.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue80.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceQueue80.spliterator();
        boolean boolean84 = charSequenceQueue80.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence85 = charSequenceQueue80.poll();
        boolean boolean86 = charSequenceQueue75.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        java.lang.Object[] objArray87 = charSequenceQueue80.toArray();
        boolean boolean88 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean90 = charSequenceQueue80.offer((java.lang.CharSequence) "hi!");
        boolean boolean91 = charSequenceQueue1.contains((java.lang.Object) boolean90);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence93 = charSequenceQueue1.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (10) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceList7.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        boolean boolean60 = charSequenceQueue1.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence62 = charSequenceQueue1.peek();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertNull(charSequence62);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        java.lang.CharSequence charSequence44 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence charSequence57 = charSequenceQueue53.poll();
        boolean boolean58 = charSequenceQueue53.isAtFullCapacity();
        java.lang.CharSequence charSequence59 = charSequenceQueue53.element();
        charSequenceQueue53.clear();
        boolean boolean61 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue53);
        int int62 = charSequenceQueue38.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue38.iterator();
        boolean boolean65 = charSequenceQueue38.offer((java.lang.CharSequence) "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        charSequenceQueue8.clear();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue8.add((java.lang.CharSequence) "[]");
        boolean boolean17 = charSequenceQueue8.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean18 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.Class<?> wildcardClass19 = charSequenceQueue8.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.poll();
        charSequenceQueue43.clear();
        java.lang.CharSequence charSequence48 = charSequenceQueue43.peek();
        boolean boolean49 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence50 = charSequenceQueue43.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        boolean boolean48 = charSequenceQueue45.contains((java.lang.Object) 1.0d);
        boolean boolean49 = charSequenceQueue45.isFull();
        boolean boolean50 = charSequenceQueue45.isFull();
        int int51 = charSequenceQueue45.maxSize();
        int int52 = charSequenceQueue45.maxSize();
        java.lang.CharSequence charSequence53 = charSequenceQueue45.peek();
        boolean boolean54 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.String str59 = charSequenceQueue56.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceQueue56.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean65 = charSequenceQueue63.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence66 = charSequenceQueue63.peek();
        boolean boolean67 = charSequenceQueue56.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean68 = charSequenceQueue38.contains((java.lang.Object) boolean67);
        int int69 = charSequenceQueue38.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(charSequence9);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue7.iterator();
        int int15 = charSequenceQueue7.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceQueue7.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (97) is outside the available range [0, 3)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 3 + "'", int15 == 3);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.CharSequence charSequence20 = charSequenceQueue16.poll();
        java.lang.CharSequence charSequence21 = charSequenceQueue16.poll();
        boolean boolean22 = charSequenceQueue16.isAtFullCapacity();
        int int23 = charSequenceQueue16.maxSize();
        boolean boolean24 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean25 = charSequenceQueue16.isEmpty();
        boolean boolean27 = charSequenceQueue16.add((java.lang.CharSequence) "");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence29 = charSequenceQueue16.get((-1));
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        int int15 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.offer((java.lang.CharSequence) "[, [hi!]]");
        charSequenceQueue8.clear();
        boolean boolean20 = charSequenceQueue8.add((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue7.clear();
        java.lang.CharSequence charSequence15 = charSequenceQueue7.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence15);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue22.isAtFullCapacity();
        java.lang.CharSequence charSequence28 = charSequenceQueue22.element();
        int int29 = charSequenceQueue22.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue22.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue22.spliterator();
        boolean boolean32 = charSequenceQueue22.isFull();
        boolean boolean34 = charSequenceQueue22.contains((java.lang.Object) ' ');
        boolean boolean35 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        int int68 = charSequenceQueue63.maxSize();
        boolean boolean69 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean70 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.Object obj71 = null;
        boolean boolean72 = charSequenceQueue63.remove(obj71);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue25.poll();
        boolean boolean31 = charSequenceQueue20.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence32 = charSequenceQueue20.remove();
        boolean boolean33 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue35.parallelStream();
        boolean boolean37 = charSequenceQueue20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        int int38 = charSequenceQueue20.maxSize();
        java.lang.CharSequence charSequence39 = charSequenceQueue20.poll();
        int int40 = charSequenceQueue20.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue20.stream();
        boolean boolean42 = charSequenceQueue3.contains((java.lang.Object) charSequenceQueue20);
        int int43 = charSequenceQueue3.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue40.spliterator();
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue40.poll();
        boolean boolean46 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.CharSequence charSequence47 = charSequenceQueue35.remove();
        boolean boolean48 = charSequenceQueue35.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue50.parallelStream();
        boolean boolean52 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean53 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        boolean boolean59 = charSequenceQueue55.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue55.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        charSequenceQueue55.clear();
        boolean boolean64 = charSequenceQueue50.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean66 = charSequenceQueue50.add((java.lang.CharSequence) "[, ]");
        charSequenceQueue50.clear();
        boolean boolean69 = charSequenceQueue50.offer((java.lang.CharSequence) "[, , [, ]]");
        java.lang.CharSequence charSequence70 = charSequenceQueue50.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "[, , [, ]]" + "'", charSequence70, "[, , [, ]]");
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        int int5 = charSequenceQueue1.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue16.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean33 = charSequenceQueue16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        int int34 = charSequenceQueue16.maxSize();
        java.lang.CharSequence charSequence35 = charSequenceQueue16.poll();
        boolean boolean36 = charSequenceQueue16.isFull();
        boolean boolean37 = charSequenceQueue16.isFull();
        java.lang.CharSequence charSequence38 = charSequenceQueue16.poll();
        boolean boolean39 = charSequenceQueue1.remove((java.lang.Object) charSequence38);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Spliterator<java.lang.CharSequence>> charSequenceSpliteratorQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Spliterator<java.lang.CharSequence>>(1);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        boolean boolean23 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean24 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        boolean boolean39 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceQueue41.add((java.lang.CharSequence) "hi!");
        int int46 = charSequenceQueue41.maxSize();
        boolean boolean47 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean48 = charSequenceList11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean50 = charSequenceQueue41.remove((java.lang.Object) 100);
        boolean boolean51 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue53.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue53.spliterator();
        boolean boolean57 = charSequenceQueue53.add((java.lang.CharSequence) "");
        java.lang.String str58 = charSequenceQueue53.toString();
        java.lang.CharSequence charSequence59 = charSequenceQueue53.element();
        java.lang.CharSequence charSequence60 = charSequenceQueue53.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue62.stream();
        java.lang.Comparable[][][][] comparableArray65 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray66 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray65;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray67 = charSequenceQueue62.toArray(strComparableArray66);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray68 = charSequenceQueue53.toArray(strComparableArray67);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray69 = charSequenceQueue1.toArray(strComparableArray67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence70 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertNotNull(comparableArray65);
        org.junit.Assert.assertNotNull(strComparableArray66);
        org.junit.Assert.assertNotNull(strComparableArray67);
        org.junit.Assert.assertNotNull(strComparableArray68);
        org.junit.Assert.assertNotNull(strComparableArray69);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean19 = charSequenceQueue12.add((java.lang.CharSequence) "");
        charSequenceQueue12.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        boolean boolean41 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean42 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean43 = charSequenceQueue22.remove((java.lang.Object) charSequenceQueue24);
        boolean boolean44 = charSequenceQueue12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean45 = charSequenceQueue1.contains((java.lang.Object) boolean44);
        boolean boolean47 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        boolean boolean14 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue8.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceQueue8.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue17.stream();
        boolean boolean19 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceQueue21.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.Object[] objArray14 = charSequenceQueue8.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceQueue8.get(2);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (2) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.poll();
        java.lang.Object[] objArray6 = charSequenceQueue1.toArray();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        charSequenceQueue8.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue21.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceQueue21.iterator();
        boolean boolean30 = charSequenceQueue15.remove((java.lang.Object) charSequenceQueue21);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38, charSequenceArray37);
        boolean boolean40 = charSequenceQueue38.isAtFullCapacity();
        boolean boolean41 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue43.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue43.spliterator();
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue43.poll();
        boolean boolean49 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean50 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence51 = charSequenceQueue38.poll();
        java.lang.CharSequence charSequence53 = charSequenceQueue38.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceQueue55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean66 = charSequenceQueue61.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int67 = charSequenceQueue61.size();
        boolean boolean68 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue61);
        int int69 = charSequenceQueue38.maxSize();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78, charSequenceArray77);
        boolean boolean80 = charSequenceQueue78.isAtFullCapacity();
        boolean boolean81 = charSequenceList73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        java.lang.CharSequence charSequence82 = charSequenceQueue78.poll();
        boolean boolean83 = charSequenceQueue78.isAtFullCapacity();
        java.lang.CharSequence charSequence84 = charSequenceQueue78.element();
        charSequenceQueue78.clear();
        boolean boolean86 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue78);
        boolean boolean87 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 3 + "'", int67 == 3);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 32 + "'", int69 == 32);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "" + "'", charSequence82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.String str13 = charSequenceQueue3.toString();
        boolean boolean14 = charSequenceQueue3.isFull();
        java.lang.Class<?> wildcardClass15 = charSequenceQueue3.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence charSequence12 = charSequenceQueue11.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue22.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue27.spliterator();
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "");
        java.lang.String str32 = charSequenceQueue27.toString();
        java.lang.CharSequence charSequence33 = charSequenceQueue27.element();
        boolean boolean34 = charSequenceQueue22.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean35 = charSequenceQueue27.isEmpty();
        boolean boolean36 = charSequenceQueue27.isAtFullCapacity();
        java.lang.CharSequence charSequence37 = charSequenceQueue27.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isFull();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        boolean boolean43 = charSequenceQueue38.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue38.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        charSequenceQueue46.clear();
        boolean boolean51 = charSequenceQueue46.remove((java.lang.Object) (-1.0d));
        int int52 = charSequenceQueue46.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence57 = charSequenceQueue54.peek();
        boolean boolean58 = charSequenceQueue46.remove((java.lang.Object) charSequenceQueue54);
        boolean boolean59 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray65 = charSequenceQueue62.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceQueue62.iterator();
        boolean boolean68 = charSequenceQueue62.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj69 = null;
        boolean boolean70 = charSequenceQueue62.remove(obj69);
        boolean boolean71 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.Object[] objArray72 = charSequenceQueue38.toArray();
        java.lang.Class<?> wildcardClass73 = charSequenceQueue38.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(objArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray65), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray65), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.String str11 = charSequenceQueue8.toString();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) str11);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.peek();
        boolean boolean14 = charSequenceQueue1.isFull();
        boolean boolean16 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean14 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue30.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue30.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.lang.CharSequence charSequence36 = charSequenceQueue34.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue34.contains((java.lang.Object) charSequenceQueue38);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue34.iterator();
        boolean boolean43 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean66 = charSequenceList52.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        boolean boolean67 = charSequenceQueue46.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = charSequenceList70.contains(obj72);
        java.lang.String str74 = charSequenceList70.toString();
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList77 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList77.contains(obj79);
        java.lang.String str81 = charSequenceList77.toString();
        boolean boolean82 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceQueue83.stream();
        boolean boolean85 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.String str86 = charSequenceQueue83.toString();
        int int87 = charSequenceQueue83.maxSize();
        boolean boolean88 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue90 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator91 = charSequenceQueue90.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator92 = charSequenceQueue90.spliterator();
        boolean boolean94 = charSequenceQueue90.add((java.lang.CharSequence) "");
        boolean boolean95 = charSequenceQueue90.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor96 = charSequenceQueue90.iterator();
        boolean boolean97 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        java.lang.CharSequence charSequence98 = charSequenceQueue90.remove();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!]" + "'", str74, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[hi!]" + "'", str81, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[hi!]" + "'", str86, "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator91);
        org.junit.Assert.assertNotNull(charSequenceSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charSequenceItor96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertEquals("'" + charSequence98 + "' != '" + "" + "'", charSequence98, "");
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        int int20 = charSequenceQueue10.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor21 = charSequenceQueue10.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor21);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceQueue15.iterator();
        boolean boolean18 = charSequenceQueue15.isFull();
        java.lang.CharSequence charSequence19 = charSequenceQueue15.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue15.spliterator();
        boolean boolean21 = charSequenceQueue15.isEmpty();
        boolean boolean22 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence23 = charSequenceQueue15.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(charSequence23);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        int int16 = charSequenceQueue8.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue8.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream17);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceQueue15.iterator();
        boolean boolean18 = charSequenceQueue15.isFull();
        java.lang.CharSequence charSequence19 = charSequenceQueue15.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue15.spliterator();
        boolean boolean21 = charSequenceQueue15.isEmpty();
        boolean boolean22 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        int int23 = charSequenceQueue15.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        java.lang.String str12 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        boolean boolean19 = charSequenceQueue14.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue14.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue14.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue14.parallelStream();
        boolean boolean23 = charSequenceQueue14.isFull();
        boolean boolean24 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue14);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[]" + "'", str12, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray24 = charSequenceList15.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.lang.Comparable<java.lang.String>[] strComparableArray25 = charSequenceQueue3.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.lang.CharSequence charSequence26 = charSequenceQueue3.peek();
        boolean boolean28 = charSequenceQueue3.add((java.lang.CharSequence) "[, ]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue3.stream();
        java.lang.String str30 = charSequenceQueue3.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strComparableArray24);
        org.junit.Assert.assertNotNull(strComparableArray25);
        org.junit.Assert.assertNull(charSequence26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[[, ]]" + "'", str30, "[[, ]]");
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        charSequenceQueue7.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceQueue7.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        int int8 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue10.parallelStream();
        boolean boolean13 = charSequenceQueue10.contains((java.lang.Object) 1.0d);
        boolean boolean14 = charSequenceQueue10.isFull();
        boolean boolean15 = charSequenceQueue10.isFull();
        int int16 = charSequenceQueue10.maxSize();
        int int17 = charSequenceQueue10.maxSize();
        boolean boolean19 = charSequenceQueue10.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean20 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        int int21 = charSequenceQueue10.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        boolean boolean48 = charSequenceQueue45.contains((java.lang.Object) 1.0d);
        boolean boolean49 = charSequenceQueue45.isFull();
        boolean boolean50 = charSequenceQueue45.isFull();
        int int51 = charSequenceQueue45.maxSize();
        int int52 = charSequenceQueue45.maxSize();
        java.lang.CharSequence charSequence53 = charSequenceQueue45.peek();
        boolean boolean54 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue45.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceStream55);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.element();
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue22.isEmpty();
        boolean boolean29 = charSequenceQueue14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceQueue14.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        boolean boolean48 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue36.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        boolean boolean55 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.String str56 = charSequenceQueue51.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue51.parallelStream();
        boolean boolean58 = charSequenceQueue51.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean60 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean61 = charSequenceQueue36.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[, ]" + "'", str56, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue1.spliterator();
        java.lang.Class<?> wildcardClass13 = charSequenceSpliterator12.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue19.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.lang.CharSequence charSequence27 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue29);
        java.lang.CharSequence charSequence33 = charSequenceQueue25.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue35.isAtFullCapacity();
        int int41 = charSequenceQueue35.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue35.spliterator();
        boolean boolean43 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue47.parallelStream();
        boolean boolean51 = charSequenceQueue47.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.stream();
        java.lang.CharSequence charSequence53 = charSequenceQueue47.peek();
        boolean boolean54 = charSequenceQueue35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue56.parallelStream();
        boolean boolean62 = charSequenceQueue56.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue56.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue56.element();
        boolean boolean65 = charSequenceQueue56.isEmpty();
        boolean boolean66 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean67 = charSequenceQueue19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence68 = charSequenceQueue19.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        int int16 = charSequenceQueue13.maxSize();
        int int17 = charSequenceQueue13.maxSize();
        java.lang.Class<?> wildcardClass18 = charSequenceQueue13.getClass();
        boolean boolean19 = charSequenceQueue1.remove((java.lang.Object) wildcardClass18);
        int int20 = charSequenceQueue1.maxSize();
        java.lang.Class<?> wildcardClass21 = charSequenceQueue1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.element();
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue22.isEmpty();
        boolean boolean29 = charSequenceQueue14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.lang.Class<?> wildcardClass30 = charSequenceQueue22.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue10.spliterator();
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue10.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.lang.CharSequence charSequence19 = charSequenceQueue17.peek();
        boolean boolean20 = charSequenceQueue10.contains((java.lang.Object) charSequence19);
        boolean boolean21 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        int int22 = charSequenceQueue1.size();
        java.lang.CharSequence charSequence23 = charSequenceQueue1.poll();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.poll();
        charSequenceQueue43.clear();
        java.lang.CharSequence charSequence48 = charSequenceQueue43.peek();
        boolean boolean49 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.Class<?> wildcardClass50 = charSequenceQueue43.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue22.isAtFullCapacity();
        java.lang.CharSequence charSequence28 = charSequenceQueue22.element();
        int int29 = charSequenceQueue22.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue22.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue22.spliterator();
        boolean boolean32 = charSequenceQueue22.isFull();
        boolean boolean34 = charSequenceQueue22.contains((java.lang.Object) ' ');
        boolean boolean35 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        int int68 = charSequenceQueue63.maxSize();
        boolean boolean69 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean70 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence71 = charSequenceQueue10.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        java.lang.CharSequence charSequence40 = charSequenceQueue24.remove();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.util.Collection<java.lang.CharSequence> charSequenceCollection23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = charSequenceQueue1.removeAll(charSequenceCollection23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29, charSequenceArray28);
        boolean boolean31 = charSequenceQueue29.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue34.poll();
        boolean boolean40 = charSequenceQueue29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.Object[] objArray41 = charSequenceQueue34.toArray();
        boolean boolean42 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        int int43 = charSequenceQueue34.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue45.spliterator();
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue45.isAtFullCapacity();
        int int51 = charSequenceQueue45.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue45.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        boolean boolean59 = charSequenceQueue54.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue54.iterator();
        java.lang.Object[] objArray61 = charSequenceQueue54.toArray();
        boolean boolean62 = charSequenceQueue45.remove((java.lang.Object) objArray61);
        java.lang.CharSequence charSequence63 = charSequenceQueue45.remove();
        java.lang.String str64 = charSequenceQueue45.toString();
        boolean boolean65 = charSequenceQueue34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue67.parallelStream();
        boolean boolean70 = charSequenceQueue67.contains((java.lang.Object) 1.0d);
        boolean boolean71 = charSequenceQueue67.isFull();
        boolean boolean72 = charSequenceQueue67.isFull();
        boolean boolean73 = charSequenceQueue67.isFull();
        boolean boolean74 = charSequenceQueue34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        boolean boolean75 = charSequenceQueue34.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[]" + "'", str64, "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence29 = charSequenceQueue15.poll();
        int int30 = charSequenceQueue15.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue32.parallelStream();
        boolean boolean35 = charSequenceQueue32.contains((java.lang.Object) 1.0d);
        boolean boolean37 = charSequenceQueue32.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence38 = charSequenceQueue32.element();
        boolean boolean40 = charSequenceQueue32.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean41 = charSequenceQueue32.isEmpty();
        java.lang.Class<?> wildcardClass42 = charSequenceQueue32.getClass();
        boolean boolean43 = charSequenceQueue15.remove((java.lang.Object) charSequenceQueue32);
        boolean boolean44 = charSequenceQueue32.isFull();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "[hi!]" + "'", charSequence38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        boolean boolean20 = charSequenceQueue12.isEmpty();
        boolean boolean21 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean23 = charSequenceQueue1.offer((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        boolean boolean24 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean41 = charSequenceList34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean42 = charSequenceList28.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean45 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList48.contains(obj50);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean61 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean62 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean65 = charSequenceList48.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        boolean boolean66 = charSequenceQueue44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        boolean boolean67 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue44);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue44.spliterator();
        java.lang.Object[] objArray69 = charSequenceQueue44.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream72 = charSequenceQueue71.parallelStream();
        boolean boolean74 = charSequenceQueue71.contains((java.lang.Object) 1.0d);
        boolean boolean75 = charSequenceQueue71.isFull();
        boolean boolean76 = charSequenceQueue71.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        java.lang.String str81 = charSequenceQueue78.toString();
        boolean boolean82 = charSequenceQueue71.remove((java.lang.Object) str81);
        java.lang.Object[] objArray83 = charSequenceQueue71.toArray();
        java.lang.Object[] objArray84 = charSequenceQueue71.toArray();
        boolean boolean85 = charSequenceQueue44.remove((java.lang.Object) charSequenceQueue71);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[]" + "'", str81, "[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[]");
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        boolean boolean23 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean24 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        boolean boolean39 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceQueue41.add((java.lang.CharSequence) "hi!");
        int int46 = charSequenceQueue41.maxSize();
        boolean boolean47 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean48 = charSequenceList11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean50 = charSequenceQueue41.remove((java.lang.Object) 100);
        boolean boolean51 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence53 = charSequenceQueue41.poll();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(4);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence2 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean34 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isFull();
        charSequenceQueue37.clear();
        boolean boolean44 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.String str45 = charSequenceQueue37.toString();
        java.lang.CharSequence charSequence46 = charSequenceQueue37.peek();
        boolean boolean47 = charSequenceQueue37.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.CharSequence charSequence8 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue16.iterator();
        charSequenceQueue16.clear();
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        charSequenceQueue16.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '#');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean11 = charSequenceQueue3.isEmpty();
        java.lang.CharSequence charSequence12 = charSequenceQueue3.peek();
        java.lang.CharSequence charSequence14 = charSequenceQueue3.get((int) (byte) 1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue16.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue16.spliterator();
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence21 = charSequenceQueue16.poll();
        boolean boolean22 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean23 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue16);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "hi!" + "'", charSequence14, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean23 = charSequenceQueue16.isAtFullCapacity();
        charSequenceQueue16.clear();
        java.lang.Object[] objArray25 = charSequenceQueue16.toArray();
        java.lang.Object[] objArray26 = charSequenceQueue16.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue28.add((java.lang.CharSequence) "hi!");
        int int33 = charSequenceQueue28.maxSize();
        boolean boolean34 = charSequenceQueue28.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue36.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue36.spliterator();
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue36.isAtFullCapacity();
        int int42 = charSequenceQueue36.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue36.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue45.spliterator();
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue45.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue45.iterator();
        java.lang.Object[] objArray52 = charSequenceQueue45.toArray();
        boolean boolean53 = charSequenceQueue36.remove((java.lang.Object) objArray52);
        boolean boolean54 = charSequenceQueue28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.lang.CharSequence charSequence55 = charSequenceQueue36.peek();
        java.lang.CharSequence charSequence56 = charSequenceQueue36.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean60 = charSequenceQueue58.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray61 = charSequenceQueue58.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor62 = charSequenceQueue58.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue58.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        boolean boolean71 = charSequenceQueue67.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean74 = charSequenceQueue67.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        charSequenceQueue67.clear();
        boolean boolean76 = charSequenceQueue65.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        boolean boolean77 = charSequenceQueue58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        java.lang.Class<?> wildcardClass78 = charSequenceQueue58.getClass();
        boolean boolean79 = charSequenceQueue36.remove((java.lang.Object) wildcardClass78);
        boolean boolean80 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceQueue16.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 52 + "'", int33 == 52);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor62);
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceStream81);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]> strArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]>((int) (byte) 1);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        charSequenceQueue1.clear();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean30 = charSequenceQueue1.isEmpty();
        boolean boolean31 = charSequenceQueue1.isAtFullCapacity();
        int int32 = charSequenceQueue1.maxSize();
        boolean boolean33 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.poll();
        boolean boolean21 = charSequenceQueue10.isFull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence13 = charSequenceQueue1.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue1.spliterator();
        java.lang.Class<?> wildcardClass15 = charSequenceSpliterator14.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        boolean boolean24 = charSequenceQueue16.isEmpty();
        java.lang.CharSequence charSequence25 = charSequenceQueue16.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.AutoCloseable> autoCloseableQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.AutoCloseable>((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        boolean boolean29 = charSequenceQueue24.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence31 = charSequenceQueue24.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue24.iterator();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41, charSequenceArray40);
        boolean boolean43 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean44 = charSequenceList36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.CharSequence charSequence45 = charSequenceQueue41.poll();
        boolean boolean46 = charSequenceQueue41.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList49.contains(obj51);
        java.lang.String str53 = charSequenceList49.toString();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = charSequenceList56.contains(obj58);
        java.lang.String str60 = charSequenceList56.toString();
        boolean boolean61 = charSequenceList49.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70, charSequenceArray69);
        boolean boolean72 = charSequenceQueue70.isAtFullCapacity();
        boolean boolean73 = charSequenceList65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean74 = charSequenceQueue70.isAtFullCapacity();
        boolean boolean75 = charSequenceQueue70.isAtFullCapacity();
        boolean boolean76 = charSequenceList56.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean77 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.Object[] objArray78 = charSequenceQueue41.toArray();
        charSequenceQueue41.clear();
        boolean boolean80 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean81 = charSequenceQueue24.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[hi!]" + "'", str53, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[hi!]" + "'", str60, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.lang.String str43 = charSequenceQueue38.toString();
        java.lang.CharSequence charSequence44 = charSequenceQueue38.poll();
        boolean boolean45 = charSequenceQueue38.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        int int19 = charSequenceQueue17.maxSize();
        boolean boolean20 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        java.lang.CharSequence charSequence21 = charSequenceQueue8.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceList35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean44 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue41.iterator();
        java.lang.Object[] objArray46 = charSequenceQueue41.toArray();
        boolean boolean47 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean48 = charSequenceQueue8.contains((java.lang.Object) boolean47);
        java.lang.Class<?> wildcardClass49 = charSequenceQueue8.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        charSequenceQueue8.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue34);
        int int38 = charSequenceQueue34.size();
        boolean boolean39 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence charSequence40 = charSequenceQueue8.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence41 = charSequenceQueue8.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.stream();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean12 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue14.offer((java.lang.CharSequence) "[hi!]");
        java.lang.String str20 = charSequenceQueue14.toString();
        charSequenceQueue14.clear();
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray22 = new java.lang.reflect.GenericDeclaration[][] {};
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray23 = charSequenceQueue14.toArray(genericDeclarationArray22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[][] annotatedElementArray24 = charSequenceQueue1.toArray((java.lang.reflect.AnnotatedElement[][]) genericDeclarationArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[[hi!]]" + "'", str20, "[[hi!]]");
        org.junit.Assert.assertNotNull(genericDeclarationArray22);
        org.junit.Assert.assertNotNull(genericDeclarationArray23);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        int int10 = charSequenceQueue1.maxSize();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        charSequenceQueue19.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue19.stream();
        boolean boolean23 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        java.lang.String str27 = charSequenceQueue25.toString();
        boolean boolean29 = charSequenceQueue25.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        charSequenceQueue33.clear();
        boolean boolean42 = charSequenceQueue31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray54 = charSequenceList45.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.Comparable<java.lang.String>[] strComparableArray55 = charSequenceQueue33.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        boolean boolean56 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean57 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean59 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strComparableArray54);
        org.junit.Assert.assertNotNull(strComparableArray55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.String[] strArray11 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[] strArray16 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[] strArray21 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[] strArray26 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[] strArray31 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[] strArray36 = new java.lang.String[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[, [hi!]]", "[[, , , hi!]]" };
        java.lang.String[][] strArray37 = new java.lang.String[][] { strArray11, strArray16, strArray21, strArray26, strArray31, strArray36 };
        java.lang.String[][][] strArray38 = new java.lang.String[][][] { strArray37 };
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][][] strArray39 = charSequenceList2.toArray(strArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue24.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        charSequenceQueue40.clear();
        boolean boolean45 = charSequenceQueue40.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        boolean boolean51 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence56 = charSequenceQueue53.element();
        boolean boolean57 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean58 = charSequenceQueue40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        int int59 = charSequenceQueue53.size();
        charSequenceQueue53.clear();
        boolean boolean61 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean63 = charSequenceQueue53.add((java.lang.CharSequence) "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.element();
        boolean boolean62 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceItor63);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence51 = charSequenceQueue46.element();
        java.lang.CharSequence charSequence52 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceList56.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence65 = charSequenceQueue61.poll();
        java.lang.CharSequence charSequence66 = charSequenceQueue61.poll();
        boolean boolean67 = charSequenceQueue61.isAtFullCapacity();
        int int68 = charSequenceQueue61.maxSize();
        boolean boolean69 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean70 = charSequenceQueue61.isEmpty();
        boolean boolean72 = charSequenceQueue61.add((java.lang.CharSequence) "");
        boolean boolean73 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean77 = charSequenceQueue75.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray80 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81, charSequenceArray80);
        boolean boolean83 = charSequenceQueue81.isAtFullCapacity();
        boolean boolean84 = charSequenceQueue75.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor85 = charSequenceQueue81.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue81.spliterator();
        boolean boolean87 = charSequenceQueue61.remove((java.lang.Object) charSequenceQueue81);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue88 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charSequenceItor85);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence36 = charSequenceQueue24.remove();
        boolean boolean37 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray49 = charSequenceList40.toArray((java.lang.Comparable<java.lang.String>[]) strArray48);
        java.lang.String[] strArray50 = charSequenceQueue16.toArray(strArray48);
        java.lang.String[] strArray51 = charSequenceQueue12.toArray(strArray50);
        java.lang.Comparable<java.lang.String>[] strComparableArray52 = charSequenceQueue7.toArray((java.lang.Comparable<java.lang.String>[]) strArray50);
        java.lang.CharSequence charSequence53 = charSequenceQueue7.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strComparableArray49);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strComparableArray52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.remove();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertNull(charSequence42);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        int int22 = charSequenceQueue17.maxSize();
        boolean boolean23 = charSequenceQueue17.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceQueue25.isAtFullCapacity();
        int int31 = charSequenceQueue25.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue25.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue34.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue34.iterator();
        java.lang.Object[] objArray41 = charSequenceQueue34.toArray();
        boolean boolean42 = charSequenceQueue25.remove((java.lang.Object) objArray41);
        boolean boolean43 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence44 = charSequenceQueue25.peek();
        java.lang.CharSequence charSequence45 = charSequenceQueue25.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray50 = charSequenceQueue47.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue47.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        boolean boolean60 = charSequenceQueue56.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        charSequenceQueue56.clear();
        boolean boolean65 = charSequenceQueue54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean66 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.Class<?> wildcardClass67 = charSequenceQueue47.getClass();
        boolean boolean68 = charSequenceQueue25.remove((java.lang.Object) wildcardClass67);
        boolean boolean69 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.Object[] objArray70 = charSequenceQueue25.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        charSequenceQueue1.clear();
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[][] strArray19 = new java.lang.String[][] { strArray11, strArray18 };
        java.lang.String[][] strArray20 = charSequenceQueue1.toArray(strArray19);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        int int23 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>> charSequenceQueueQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>>((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue32.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue32.spliterator();
        boolean boolean36 = charSequenceQueue32.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue32.poll();
        boolean boolean38 = charSequenceQueue27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean51 = charSequenceQueue47.isAtFullCapacity();
        int int52 = charSequenceQueue47.maxSize();
        boolean boolean53 = charSequenceQueue27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence56 = charSequenceQueue55.peek();
        boolean boolean57 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean58 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence charSequence59 = charSequenceQueue27.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue61.parallelStream();
        boolean boolean64 = charSequenceQueue61.contains((java.lang.Object) 1.0d);
        boolean boolean65 = charSequenceQueue61.isFull();
        boolean boolean66 = charSequenceQueue61.isFull();
        int int67 = charSequenceQueue61.maxSize();
        int int68 = charSequenceQueue61.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray75 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76, charSequenceArray75);
        boolean boolean78 = charSequenceQueue76.isAtFullCapacity();
        boolean boolean79 = charSequenceQueue70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceQueue70.stream();
        boolean boolean81 = charSequenceQueue61.contains((java.lang.Object) charSequenceStream80);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceQueue83.parallelStream();
        int int85 = charSequenceQueue83.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean89 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray90 = charSequenceQueue87.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor91 = charSequenceQueue87.iterator();
        boolean boolean92 = charSequenceQueue83.remove((java.lang.Object) charSequenceQueue87);
        boolean boolean93 = charSequenceQueue61.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.CharSequence charSequence94 = charSequenceQueue61.peek();
        boolean boolean95 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.String str96 = charSequenceQueue61.toString();
        int int97 = charSequenceQueue61.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 32 + "'", int52 == 32);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(charSequence56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(charSequence59);
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(charSequence94);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "[]" + "'", str96, "[]");
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean24 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.parallelStream();
        java.lang.Class<?> wildcardClass26 = charSequenceStream25.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue1.clear();
        boolean boolean10 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.isEmpty();
        charSequenceQueue1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceQueue1.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.String str41 = charSequenceList37.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue52.spliterator();
        java.lang.CharSequence charSequence54 = charSequenceQueue52.peek();
        boolean boolean55 = charSequenceQueue52.isFull();
        java.lang.Object[] objArray56 = charSequenceQueue52.toArray();
        boolean boolean57 = charSequenceQueue1.contains((java.lang.Object) objArray56);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNull(charSequence54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean40 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.poll();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.lang.CharSequence charSequence43 = charSequenceQueue38.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNull(charSequence43);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int30 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence32 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNull(charSequence32);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        int int9 = charSequenceQueue1.size();
        int int10 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        java.lang.CharSequence charSequence32 = charSequenceQueue24.element();
        boolean boolean33 = charSequenceList2.remove((java.lang.Object) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue24.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        int int46 = charSequenceQueue42.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue42.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue42.element();
        boolean boolean50 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.String str51 = charSequenceQueue42.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[, ]" + "'", str51, "[, ]");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean14 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue30.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue30.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.lang.CharSequence charSequence36 = charSequenceQueue34.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue34.contains((java.lang.Object) charSequenceQueue38);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue34.iterator();
        boolean boolean43 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean66 = charSequenceList52.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        boolean boolean67 = charSequenceQueue46.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = charSequenceList70.contains(obj72);
        java.lang.String str74 = charSequenceList70.toString();
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList77 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList77.contains(obj79);
        java.lang.String str81 = charSequenceList77.toString();
        boolean boolean82 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceQueue83.stream();
        boolean boolean85 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.String str86 = charSequenceQueue83.toString();
        int int87 = charSequenceQueue83.maxSize();
        boolean boolean88 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue90 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator91 = charSequenceQueue90.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator92 = charSequenceQueue90.spliterator();
        boolean boolean94 = charSequenceQueue90.add((java.lang.CharSequence) "");
        boolean boolean95 = charSequenceQueue90.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor96 = charSequenceQueue90.iterator();
        boolean boolean97 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        int int98 = charSequenceQueue34.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream99 = charSequenceQueue34.stream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!]" + "'", str74, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[hi!]" + "'", str81, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[hi!]" + "'", str86, "[hi!]");
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator91);
        org.junit.Assert.assertNotNull(charSequenceSpliterator92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charSequenceItor96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 10 + "'", int98 == 10);
        org.junit.Assert.assertNotNull(charSequenceStream99);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence14 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue1.stream();
        boolean boolean17 = charSequenceQueue1.offer((java.lang.CharSequence) "[[, ]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceQueue6.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue6.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean14 = charSequenceQueue6.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceQueue6.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue17.isEmpty();
        boolean boolean26 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean28 = charSequenceQueue6.add((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue6);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        boolean boolean50 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean51 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        boolean boolean52 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60, charSequenceArray59);
        boolean boolean62 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean63 = charSequenceQueue54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue65.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue65.spliterator();
        boolean boolean69 = charSequenceQueue65.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence70 = charSequenceQueue65.poll();
        boolean boolean71 = charSequenceQueue60.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList75 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80, charSequenceArray79);
        boolean boolean82 = charSequenceQueue80.isAtFullCapacity();
        boolean boolean83 = charSequenceList75.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean84 = charSequenceQueue80.isAtFullCapacity();
        int int85 = charSequenceQueue80.maxSize();
        boolean boolean86 = charSequenceQueue60.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean87 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        charSequenceQueue31.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor89 = charSequenceQueue31.iterator();
        boolean boolean90 = charSequenceQueue31.isFull();
        boolean boolean91 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 32 + "'", int85 == 32);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32, charSequenceArray31);
        boolean boolean34 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean35 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean37 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean38 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.Object[] objArray39 = charSequenceQueue11.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        boolean boolean46 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.String str47 = charSequenceQueue11.toString();
        boolean boolean48 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        int int49 = charSequenceQueue1.size();
        boolean boolean51 = charSequenceQueue1.add((java.lang.CharSequence) "[[hi!], [, hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2 + "'", int49 == 2);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue19.iterator();
        charSequenceQueue19.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue19.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertNotNull(charSequenceStream25);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.lang.String str9 = charSequenceQueue1.toString();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.Object[] objArray53 = charSequenceQueue38.toArray();
        boolean boolean54 = charSequenceQueue38.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int7 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        boolean boolean43 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "hi!");
        int int50 = charSequenceQueue45.maxSize();
        boolean boolean51 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean52 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean54 = charSequenceQueue45.remove((java.lang.Object) 100);
        int int55 = charSequenceQueue45.maxSize();
        boolean boolean57 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue45.element();
        java.lang.CharSequence charSequence59 = charSequenceQueue45.remove();
        boolean boolean60 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean17 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.Object[] objArray18 = charSequenceQueue1.toArray();
        java.lang.Class<?> wildcardClass19 = charSequenceQueue1.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, [hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, [hi!]]");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean1 = charSequenceQueue0.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceQueue3.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue3.spliterator();
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence8 = charSequenceQueue3.poll();
        boolean boolean10 = charSequenceQueue3.add((java.lang.CharSequence) "");
        charSequenceQueue3.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue3.stream();
        charSequenceQueue3.clear();
        boolean boolean14 = charSequenceQueue0.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        boolean boolean15 = charSequenceQueue0.isAtFullCapacity();
        boolean boolean17 = charSequenceQueue0.offer((java.lang.CharSequence) "[[hi!], [, hi!]]");
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceQueue0.contains(obj18);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        int int54 = charSequenceQueue48.maxSize();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = charSequenceList57.contains(obj59);
        java.lang.String str61 = charSequenceList57.toString();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        boolean boolean69 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean73 = charSequenceQueue71.offer((java.lang.CharSequence) "");
        boolean boolean75 = charSequenceQueue71.add((java.lang.CharSequence) "hi!");
        int int76 = charSequenceQueue71.maxSize();
        boolean boolean77 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean81 = charSequenceQueue79.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence82 = charSequenceQueue79.peek();
        boolean boolean84 = charSequenceQueue79.add((java.lang.CharSequence) "");
        boolean boolean85 = charSequenceList57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean86 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.lang.Class<?> wildcardClass87 = charSequenceList57.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!]" + "'", str61, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "" + "'", charSequence82, "");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList60 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70, charSequenceArray69);
        boolean boolean72 = charSequenceQueue70.isAtFullCapacity();
        boolean boolean73 = charSequenceList65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean74 = charSequenceList60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList78 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.lang.CharSequence[] charSequenceArray82 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83, charSequenceArray82);
        boolean boolean85 = charSequenceQueue83.isAtFullCapacity();
        boolean boolean86 = charSequenceList78.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        boolean boolean87 = charSequenceQueue83.isAtFullCapacity();
        int int88 = charSequenceQueue83.maxSize();
        boolean boolean89 = charSequenceList65.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor90 = charSequenceQueue83.iterator();
        java.lang.Object[] objArray91 = charSequenceQueue83.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceQueue83.stream();
        java.lang.CharSequence charSequence93 = charSequenceQueue83.poll();
        boolean boolean94 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        boolean boolean95 = charSequenceQueue83.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 32 + "'", int88 == 32);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(charSequenceItor90);
        org.junit.Assert.assertNotNull(objArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray91), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray91), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream92);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue1.parallelStream();
        java.lang.String str31 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue33.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue33.parallelStream();
        boolean boolean39 = charSequenceQueue33.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue33.spliterator();
        java.lang.CharSequence charSequence41 = charSequenceQueue33.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue43.stream();
        int int49 = charSequenceQueue43.size();
        boolean boolean50 = charSequenceQueue33.remove((java.lang.Object) charSequenceQueue43);
        boolean boolean51 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue33);
        java.lang.CharSequence charSequence52 = charSequenceQueue33.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[]" + "'", str31, "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 1 + "'", int49 == 1);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        java.lang.Object[] objArray2 = charSequenceQueue1.toArray();
        boolean boolean3 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11, charSequenceArray10);
        boolean boolean13 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean15 = charSequenceQueue11.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue17.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue17.parallelStream();
        boolean boolean23 = charSequenceQueue17.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue17.spliterator();
        boolean boolean25 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean26 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        java.lang.CharSequence charSequence27 = charSequenceQueue11.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40, charSequenceArray39);
        boolean boolean42 = charSequenceQueue40.isAtFullCapacity();
        boolean boolean43 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean57 = charSequenceQueue53.isAtFullCapacity();
        int int58 = charSequenceQueue53.maxSize();
        boolean boolean59 = charSequenceList35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean60 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean61 = charSequenceQueue1.remove((java.lang.Object) charSequenceList35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertNotNull(objArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray2), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray2), "[]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue10.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue11.parallelStream();
        boolean boolean14 = charSequenceQueue11.contains((java.lang.Object) 1.0d);
        boolean boolean16 = charSequenceQueue11.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence17 = charSequenceQueue11.element();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean20 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        java.lang.CharSequence charSequence21 = charSequenceQueue1.element();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!]" + "'", charSequence17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        charSequenceQueue7.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence18 = charSequenceQueue7.peek();
        java.lang.CharSequence charSequence19 = charSequenceQueue7.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertNull(charSequence19);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue10.spliterator();
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue10.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue10.iterator();
        java.lang.Object[] objArray17 = charSequenceQueue10.toArray();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) objArray17);
        java.lang.Class<?> wildcardClass19 = objArray17.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.io.Serializable[]> serializableArrayQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.io.Serializable[]>();
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceList25.toArray((java.lang.Comparable<java.lang.String>[]) strArray33);
        java.lang.String[] strArray35 = charSequenceQueue1.toArray(strArray33);
        java.lang.CharSequence charSequence36 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.parallelStream();
        boolean boolean41 = charSequenceQueue38.contains((java.lang.Object) 1.0d);
        boolean boolean42 = charSequenceQueue38.isFull();
        boolean boolean43 = charSequenceQueue38.isFull();
        boolean boolean44 = charSequenceQueue38.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue46.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue46.spliterator();
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "");
        boolean boolean51 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean61 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        charSequenceQueue60.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue60.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray68 = charSequenceQueue65.toArray();
        boolean boolean69 = charSequenceQueue60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean73 = charSequenceQueue71.offer((java.lang.CharSequence) "");
        java.lang.String str74 = charSequenceQueue71.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceQueue71.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream76 = charSequenceQueue71.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence81 = charSequenceQueue78.peek();
        boolean boolean82 = charSequenceQueue71.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean83 = charSequenceQueue60.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean84 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean85 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence86 = charSequenceQueue38.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[]" + "'", str74, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor75);
        org.junit.Assert.assertNotNull(charSequenceStream76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean22 = charSequenceQueue10.isFull();
        charSequenceQueue10.clear();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean35 = charSequenceQueue31.isAtFullCapacity();
        java.lang.Object[] objArray36 = charSequenceQueue31.toArray();
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) false);
        boolean boolean39 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceList43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence52 = charSequenceQueue48.poll();
        boolean boolean53 = charSequenceQueue48.isAtFullCapacity();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.element();
        charSequenceQueue48.clear();
        boolean boolean56 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue24.stream();
        boolean boolean40 = charSequenceQueue24.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence41 = charSequenceQueue24.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue43.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue43.spliterator();
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "");
        boolean boolean48 = charSequenceQueue43.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor49 = charSequenceQueue43.iterator();
        java.lang.Object[] objArray50 = charSequenceQueue43.toArray();
        boolean boolean51 = charSequenceQueue43.isAtFullCapacity();
        java.lang.CharSequence charSequence52 = charSequenceQueue43.poll();
        int int53 = charSequenceQueue43.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceQueue54.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.stream();
        java.lang.Comparable[][][][] comparableArray60 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray61 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray60;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray62 = charSequenceQueue57.toArray(strComparableArray61);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray63 = charSequenceQueue54.toArray(strComparableArray61);
        java.lang.Cloneable[] cloneableArray64 = charSequenceQueue43.toArray((java.lang.Cloneable[]) strComparableArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray65 = charSequenceQueue24.toArray((java.lang.Object[]) strComparableArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceItor49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(comparableArray60);
        org.junit.Assert.assertNotNull(strComparableArray61);
        org.junit.Assert.assertNotNull(strComparableArray62);
        org.junit.Assert.assertNotNull(strComparableArray63);
        org.junit.Assert.assertNotNull(cloneableArray64);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.Object[] objArray16 = charSequenceList9.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean26 = charSequenceQueue18.isEmpty();
        boolean boolean28 = charSequenceQueue18.remove((java.lang.Object) 10.0d);
        charSequenceQueue18.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int32 = charSequenceQueue31.maxSize();
        boolean boolean33 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue31);
        boolean boolean34 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        int int35 = charSequenceQueue18.size();
        java.lang.CharSequence charSequence36 = charSequenceQueue18.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(charSequence36);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(charSequence9);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue22.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        int int22 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence24 = charSequenceQueue7.get((int) (byte) 0);
        int int25 = charSequenceQueue7.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue24.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue24.spliterator();
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence29 = charSequenceQueue24.poll();
        boolean boolean31 = charSequenceQueue24.add((java.lang.CharSequence) "");
        charSequenceQueue24.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue24.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue35.parallelStream();
        boolean boolean41 = charSequenceQueue35.contains((java.lang.Object) (short) 100);
        boolean boolean42 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean43 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.String str44 = charSequenceQueue24.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue24.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[]" + "'", str44, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        boolean boolean2 = charSequenceQueue1.isEmpty();
        java.lang.Class<?> wildcardClass3 = charSequenceQueue1.getClass();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue7.isEmpty();
        boolean boolean39 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>> strComparableQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>>(5);
        boolean boolean42 = charSequenceQueue7.remove((java.lang.Object) 5);
        boolean boolean43 = charSequenceQueue7.isFull();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue9.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue9.iterator();
        boolean boolean16 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.String str17 = charSequenceQueue1.toString();
        int int18 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue41.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.lang.CharSequence charSequence47 = charSequenceQueue45.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue45.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue45.iterator();
        boolean boolean57 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.lang.CharSequence charSequence59 = charSequenceQueue25.get((int) (short) 0);
        boolean boolean60 = charSequenceQueue25.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        int int11 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.poll();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean24 = charSequenceQueue1.isFull();
        java.lang.String str25 = charSequenceQueue1.toString();
        java.lang.CharSequence charSequence27 = charSequenceQueue1.get(0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[hi!]" + "'", str25, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "hi!" + "'", charSequence27, "hi!");
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.String str49 = charSequenceQueue46.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue46.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue46.spliterator();
        boolean boolean52 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean53 = charSequenceQueue46.isEmpty();
        charSequenceQueue46.clear();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.String str17 = charSequenceQueue14.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor18 = charSequenceQueue14.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue21.peek();
        boolean boolean25 = charSequenceQueue14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence26 = charSequenceQueue21.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue28.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue28.spliterator();
        boolean boolean32 = charSequenceQueue28.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue28.poll();
        boolean boolean35 = charSequenceQueue28.add((java.lang.CharSequence) "");
        charSequenceQueue28.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue38.parallelStream();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51, charSequenceArray50);
        boolean boolean53 = charSequenceQueue51.isAtFullCapacity();
        boolean boolean54 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean55 = charSequenceQueue51.isAtFullCapacity();
        int int56 = charSequenceQueue51.maxSize();
        boolean boolean57 = charSequenceQueue38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean59 = charSequenceQueue38.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue38.remove();
        boolean boolean61 = charSequenceQueue28.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue28.spliterator();
        boolean boolean63 = charSequenceQueue28.isEmpty();
        boolean boolean64 = charSequenceQueue21.remove((java.lang.Object) charSequenceQueue28);
        boolean boolean65 = charSequenceQueue7.remove((java.lang.Object) charSequenceQueue21);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue21.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue21.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[]" + "'", str17, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor18);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertNotNull(charSequenceItor67);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.String str43 = charSequenceQueue38.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue38.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.remove();
        charSequenceQueue15.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceList35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean44 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue41);
        int int45 = charSequenceQueue41.size();
        boolean boolean46 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "[[hi!], [hi!]]" + "'", charSequence20, "[[hi!], [hi!]]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        int int22 = charSequenceQueue17.maxSize();
        boolean boolean23 = charSequenceQueue17.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceQueue25.isAtFullCapacity();
        int int31 = charSequenceQueue25.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue25.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue34.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue34.iterator();
        java.lang.Object[] objArray41 = charSequenceQueue34.toArray();
        boolean boolean42 = charSequenceQueue25.remove((java.lang.Object) objArray41);
        boolean boolean43 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence44 = charSequenceQueue25.peek();
        java.lang.CharSequence charSequence45 = charSequenceQueue25.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray50 = charSequenceQueue47.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue47.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        boolean boolean60 = charSequenceQueue56.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        charSequenceQueue56.clear();
        boolean boolean65 = charSequenceQueue54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean66 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.Class<?> wildcardClass67 = charSequenceQueue47.getClass();
        boolean boolean68 = charSequenceQueue25.remove((java.lang.Object) wildcardClass67);
        boolean boolean69 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        int int70 = charSequenceQueue25.maxSize();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceQueue9.get((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (100) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        int int2 = charSequenceQueue1.maxSize();
        java.lang.String str3 = charSequenceQueue1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence4 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        int int19 = charSequenceQueue15.maxSize();
        boolean boolean20 = charSequenceQueue15.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue15.stream();
        boolean boolean22 = charSequenceQueue15.isAtFullCapacity();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean28 = charSequenceQueue25.contains((java.lang.Object) 1.0d);
        boolean boolean29 = charSequenceQueue25.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) charSequenceQueue35);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor39 = charSequenceQueue31.iterator();
        boolean boolean40 = charSequenceQueue25.remove((java.lang.Object) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue53.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue53.spliterator();
        boolean boolean57 = charSequenceQueue53.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue53.poll();
        boolean boolean59 = charSequenceQueue48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean60 = charSequenceQueue31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence61 = charSequenceQueue48.poll();
        java.lang.CharSequence charSequence63 = charSequenceQueue48.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71, charSequenceArray70);
        boolean boolean73 = charSequenceQueue71.isAtFullCapacity();
        boolean boolean74 = charSequenceQueue65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        boolean boolean76 = charSequenceQueue71.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int77 = charSequenceQueue71.size();
        boolean boolean78 = charSequenceQueue48.contains((java.lang.Object) charSequenceQueue71);
        int int79 = charSequenceQueue48.maxSize();
        java.lang.CharSequence[] charSequenceArray82 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList83 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList83, charSequenceArray82);
        java.lang.CharSequence[] charSequenceArray87 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue88 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue88, charSequenceArray87);
        boolean boolean90 = charSequenceQueue88.isAtFullCapacity();
        boolean boolean91 = charSequenceList83.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue88);
        java.lang.CharSequence charSequence92 = charSequenceQueue88.poll();
        boolean boolean93 = charSequenceQueue88.isAtFullCapacity();
        java.lang.CharSequence charSequence94 = charSequenceQueue88.element();
        charSequenceQueue88.clear();
        boolean boolean96 = charSequenceQueue48.contains((java.lang.Object) charSequenceQueue88);
        boolean boolean97 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue88);
        boolean boolean99 = charSequenceQueue15.offer((java.lang.CharSequence) "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "hi!" + "'", charSequence23, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceItor39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 3 + "'", int77 == 3);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertNotNull(charSequenceArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + charSequence94 + "' != '" + "" + "'", charSequence94, "");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][]> charSequenceQueueArrayQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][]>();
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        int int25 = charSequenceQueue23.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray30 = charSequenceQueue27.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue27.iterator();
        boolean boolean32 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceQueue23.remove(obj34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue43.iterator();
        boolean boolean48 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue50.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue50.spliterator();
        boolean boolean54 = charSequenceQueue50.add((java.lang.CharSequence) "");
        java.lang.String str55 = charSequenceQueue50.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue50.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue50.spliterator();
        boolean boolean59 = charSequenceQueue50.offer((java.lang.CharSequence) "[hi!, hi!]");
        boolean boolean60 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean61 = charSequenceQueue50.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue50.spliterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[]" + "'", str55, "[]");
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue24.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue24.spliterator();
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence29 = charSequenceQueue24.poll();
        boolean boolean31 = charSequenceQueue24.add((java.lang.CharSequence) "");
        charSequenceQueue24.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue24.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue35.parallelStream();
        boolean boolean41 = charSequenceQueue35.contains((java.lang.Object) (short) 100);
        boolean boolean42 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean43 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.String str44 = charSequenceQueue24.toString();
        java.lang.CharSequence charSequence45 = charSequenceQueue24.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[]" + "'", str44, "[]");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        charSequenceQueue15.clear();
        boolean boolean24 = charSequenceQueue13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue13.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue13.parallelStream();
        boolean boolean27 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList43.contains(obj45);
        java.lang.String str47 = charSequenceList43.toString();
        boolean boolean48 = charSequenceList36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean49 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean50 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue31);
        boolean boolean51 = charSequenceQueue31.isEmpty();
        boolean boolean52 = charSequenceQueue31.isFull();
        boolean boolean54 = charSequenceQueue31.offer((java.lang.CharSequence) "[, , [, ]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue61.element();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList67 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77, charSequenceArray76);
        boolean boolean79 = charSequenceQueue77.isAtFullCapacity();
        boolean boolean80 = charSequenceList72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean81 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean82 = charSequenceQueue61.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.lang.Object[] objArray84 = charSequenceQueue56.toArray();
        java.lang.Object[] objArray85 = charSequenceQueue56.toArray();
        java.lang.CharSequence charSequence86 = charSequenceQueue56.element();
        charSequenceQueue56.clear();
        boolean boolean88 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.Object[] objArray89 = charSequenceQueue56.toArray();
        boolean boolean90 = charSequenceQueue1.remove((java.lang.Object) objArray89);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!]" + "'", str47, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceList9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceQueue15.iterator();
        boolean boolean18 = charSequenceQueue15.isFull();
        java.lang.CharSequence charSequence19 = charSequenceQueue15.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue15.spliterator();
        boolean boolean21 = charSequenceQueue15.isEmpty();
        boolean boolean22 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue24.parallelStream();
        boolean boolean27 = charSequenceQueue24.contains((java.lang.Object) 1.0d);
        boolean boolean29 = charSequenceQueue24.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence30 = charSequenceQueue24.element();
        boolean boolean32 = charSequenceQueue24.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean33 = charSequenceQueue24.isEmpty();
        java.lang.Object[] objArray34 = charSequenceQueue24.toArray();
        java.lang.Object[] objArray35 = charSequenceQueue15.toArray(objArray34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "[hi!]" + "'", charSequence30, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[null, [, hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[null, [, hi!]]");
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[null, [, hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[null, [, hi!]]");
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue10.parallelStream();
        boolean boolean22 = charSequenceQueue10.isFull();
        boolean boolean24 = charSequenceQueue10.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean26 = charSequenceQueue10.add((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        int int37 = charSequenceQueue24.maxSize();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.String str49 = charSequenceQueue46.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue46.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue46.spliterator();
        boolean boolean52 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.stream();
        java.lang.Comparable[][][][] comparableArray57 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray58 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray57;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray59 = charSequenceQueue54.toArray(strComparableArray58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue54.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue62.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        boolean boolean69 = charSequenceQueue62.contains((java.lang.Object) charSequenceQueue66);
        java.lang.CharSequence charSequence70 = charSequenceQueue62.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue72.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue72.spliterator();
        boolean boolean76 = charSequenceQueue72.add((java.lang.CharSequence) "");
        boolean boolean77 = charSequenceQueue72.isAtFullCapacity();
        int int78 = charSequenceQueue72.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue72.spliterator();
        boolean boolean80 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        int int81 = charSequenceQueue62.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor82 = charSequenceQueue62.iterator();
        boolean boolean83 = charSequenceQueue54.contains((java.lang.Object) charSequenceQueue62);
        boolean boolean84 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        charSequenceQueue46.clear();
        boolean boolean87 = charSequenceQueue46.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertNotNull(comparableArray57);
        org.junit.Assert.assertNotNull(strComparableArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(charSequenceItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.element();
        boolean boolean11 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.Object[] objArray19 = charSequenceQueue12.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.String str24 = charSequenceQueue21.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue21.iterator();
        boolean boolean26 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[]" + "'", str24, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32, charSequenceArray31);
        boolean boolean34 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean35 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean37 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean38 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.Object[] objArray39 = charSequenceQueue11.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        boolean boolean46 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.String str47 = charSequenceQueue11.toString();
        boolean boolean48 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceQueue50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        boolean boolean62 = charSequenceQueue56.add((java.lang.CharSequence) "");
        boolean boolean63 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        int int64 = charSequenceQueue11.size();
        charSequenceQueue11.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 3 + "'", int64 == 3);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[]> strComparableArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[]>(2);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        charSequenceQueue10.clear();
        java.lang.CharSequence charSequence14 = charSequenceQueue10.peek();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean39 = charSequenceList17.remove((java.lang.Object) 0);
        boolean boolean40 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceQueue10.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue10.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.peek();
        boolean boolean50 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue46.isFull();
        charSequenceQueue46.clear();
        boolean boolean53 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue46.stream();
        boolean boolean56 = charSequenceQueue46.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean57 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence charSequence58 = charSequenceQueue46.element();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "[, hi!]" + "'", charSequence58, "[, hi!]");
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean11 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        int int56 = charSequenceQueue24.size();
        java.lang.CharSequence charSequence57 = charSequenceQueue24.peek();
        boolean boolean58 = charSequenceQueue24.isEmpty();
        boolean boolean59 = charSequenceQueue24.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue44.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue44.spliterator();
        boolean boolean48 = charSequenceQueue44.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue44.poll();
        boolean boolean51 = charSequenceQueue44.add((java.lang.CharSequence) "");
        charSequenceQueue44.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue44.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue55.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue55.parallelStream();
        boolean boolean61 = charSequenceQueue55.contains((java.lang.Object) (short) 100);
        boolean boolean62 = charSequenceQueue44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean63 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        int int64 = charSequenceQueue44.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue44.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue73.isAtFullCapacity();
        boolean boolean76 = charSequenceQueue67.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean78 = charSequenceQueue73.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int79 = charSequenceQueue73.maxSize();
        java.lang.CharSequence charSequence80 = charSequenceQueue73.element();
        java.lang.CharSequence charSequence81 = charSequenceQueue73.poll();
        boolean boolean82 = charSequenceQueue44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        int int83 = charSequenceQueue73.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 32 + "'", int79 == 32);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "" + "'", charSequence80, "");
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.Object[] objArray7 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.stream();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean25 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean38 = charSequenceQueue34.isAtFullCapacity();
        int int39 = charSequenceQueue34.maxSize();
        boolean boolean40 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor41 = charSequenceQueue34.iterator();
        java.lang.Object[] objArray42 = charSequenceQueue34.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue34.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue45.spliterator();
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue45.poll();
        boolean boolean52 = charSequenceQueue45.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean55 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean56 = charSequenceQueue45.remove((java.lang.Object) boolean55);
        java.lang.CharSequence charSequence57 = charSequenceQueue45.poll();
        boolean boolean58 = charSequenceQueue34.contains((java.lang.Object) charSequence57);
        boolean boolean59 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 32 + "'", int39 == 32);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceItor41);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        java.lang.String str3 = charSequenceQueue1.toString();
        boolean boolean5 = charSequenceQueue1.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean15 = charSequenceQueue1.add((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26, charSequenceArray25);
        boolean boolean28 = charSequenceQueue26.isAtFullCapacity();
        boolean boolean29 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue31.spliterator();
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue31.poll();
        boolean boolean37 = charSequenceQueue26.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence38 = charSequenceQueue26.remove();
        boolean boolean39 = charSequenceQueue26.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.parallelStream();
        boolean boolean43 = charSequenceQueue26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor44 = charSequenceQueue41.iterator();
        boolean boolean45 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean46 = charSequenceQueue17.isEmpty();
        boolean boolean47 = charSequenceQueue17.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue17.spliterator();
        boolean boolean49 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        boolean boolean15 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[, ]" + "'", charSequence12, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence charSequence34 = charSequenceQueue1.poll();
        boolean boolean36 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.Class<?> wildcardClass37 = charSequenceQueue1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isFull();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        int int25 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence26 = charSequenceQueue7.poll();
        int int27 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue7.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue7.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        int int25 = charSequenceQueue23.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray30 = charSequenceQueue27.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue27.iterator();
        boolean boolean32 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean34 = charSequenceQueue23.isAtFullCapacity();
        charSequenceQueue23.clear();
        java.lang.Class<?> wildcardClass36 = charSequenceQueue23.getClass();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        charSequenceQueue1.clear();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue20.spliterator();
        boolean boolean24 = charSequenceQueue20.add((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue20.isAtFullCapacity();
        java.lang.CharSequence charSequence26 = charSequenceQueue20.element();
        int int27 = charSequenceQueue20.size();
        boolean boolean28 = charSequenceList11.remove((java.lang.Object) charSequenceQueue20);
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        charSequenceQueue21.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue21.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray29 = charSequenceQueue26.toArray();
        boolean boolean30 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.String str35 = charSequenceQueue32.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue32.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue32.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        boolean boolean43 = charSequenceQueue32.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean44 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean45 = charSequenceList10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue39.stream();
        boolean boolean47 = charSequenceQueue39.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue1.remove();
        boolean boolean13 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[, ]" + "'", charSequence12, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean6 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        int int9 = charSequenceQueue1.size();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        int int36 = charSequenceQueue31.size();
        boolean boolean37 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence charSequence50 = charSequenceQueue46.poll();
        boolean boolean51 = charSequenceQueue46.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        boolean boolean66 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean80 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean81 = charSequenceList61.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean82 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor83 = charSequenceQueue46.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor84 = charSequenceQueue46.iterator();
        boolean boolean85 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean89 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        boolean boolean93 = charSequenceQueue87.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.CharSequence charSequence94 = charSequenceQueue87.poll();
        boolean boolean95 = charSequenceQueue31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue87);
        boolean boolean96 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean97 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator98 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertNotNull(charSequenceItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + charSequence94 + "' != '" + "" + "'", charSequence94, "");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator98);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        int int25 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence26 = charSequenceQueue7.poll();
        int int27 = charSequenceQueue7.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        int int32 = charSequenceQueue29.maxSize();
        int int33 = charSequenceQueue29.maxSize();
        boolean boolean34 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence54 = charSequenceQueue42.remove();
        boolean boolean55 = charSequenceQueue42.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean59 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue57.iterator();
        boolean boolean61 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue57.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        int int16 = charSequenceQueue15.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence36 = charSequenceQueue24.remove();
        boolean boolean37 = charSequenceQueue24.isFull();
        int int38 = charSequenceQueue24.size();
        boolean boolean39 = charSequenceQueue15.remove((java.lang.Object) charSequenceQueue24);
        java.lang.CharSequence charSequence40 = charSequenceQueue24.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence21 = charSequenceQueue12.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.String str26 = charSequenceQueue23.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue23.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue12.parallelStream();
        java.lang.Object[] objArray31 = charSequenceQueue12.toArray();
        java.lang.CharSequence charSequence32 = charSequenceQueue12.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[]");
        org.junit.Assert.assertNull(charSequence32);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        int int23 = charSequenceQueue19.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.lang.CharSequence charSequence27 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue34.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue34.parallelStream();
        boolean boolean40 = charSequenceQueue34.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue34.spliterator();
        boolean boolean42 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence charSequence43 = charSequenceQueue34.poll();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        int int48 = charSequenceQueue46.maxSize();
        boolean boolean49 = charSequenceQueue46.isFull();
        java.lang.String str50 = charSequenceQueue46.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceQueue63.spliterator();
        boolean boolean67 = charSequenceQueue63.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence68 = charSequenceQueue63.poll();
        boolean boolean69 = charSequenceQueue58.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.util.Queue[] queueArray71 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray72 = (java.util.Queue<java.lang.CharSequence>[]) queueArray71;
        charSequenceQueueArray72[0] = charSequenceQueue46;
        charSequenceQueueArray72[1] = charSequenceQueue63;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray77 = charSequenceQueue34.toArray(charSequenceQueueArray72);
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray78 = charSequenceQueue19.toArray(charSequenceQueueArray72);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue80.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceQueue80.spliterator();
        boolean boolean84 = charSequenceQueue80.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence85 = charSequenceQueue80.poll();
        boolean boolean87 = charSequenceQueue80.add((java.lang.CharSequence) "");
        boolean boolean88 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        charSequenceQueue80.clear();
        boolean boolean91 = charSequenceQueue80.add((java.lang.CharSequence) "[]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceQueue80.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[]" + "'", str50, "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(queueArray71);
        org.junit.Assert.assertNotNull(charSequenceQueueArray72);
        org.junit.Assert.assertNotNull(charSequenceQueueArray77);
        org.junit.Assert.assertNotNull(charSequenceQueueArray78);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(charSequenceStream92);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence29 = charSequenceQueue15.poll();
        int int30 = charSequenceQueue15.maxSize();
        boolean boolean32 = charSequenceQueue15.add((java.lang.CharSequence) "[, hi!]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue15.spliterator();
        int int34 = charSequenceQueue15.maxSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence36 = charSequenceQueue15.get(2);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (2) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11, charSequenceArray10);
        boolean boolean13 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean15 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object> objQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence21 = charSequenceQueue18.peek();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean38 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean39 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue36);
        boolean boolean41 = charSequenceQueue18.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        boolean boolean57 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue58.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue58.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue62.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        boolean boolean69 = charSequenceQueue62.contains((java.lang.Object) charSequenceQueue66);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor70 = charSequenceQueue62.iterator();
        boolean boolean71 = charSequenceQueue58.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        int int72 = charSequenceQueue62.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor73 = charSequenceQueue62.iterator();
        boolean boolean74 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue62.stream();
        boolean boolean76 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        int int77 = charSequenceQueue62.maxSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence79 = charSequenceQueue62.get(100);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (100) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 10 + "'", int77 == 10);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess> randomAccessQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess>();
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean32 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        charSequenceQueue35.clear();
        boolean boolean40 = charSequenceQueue35.remove((java.lang.Object) (-1.0d));
        int int41 = charSequenceQueue35.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        boolean boolean47 = charSequenceQueue35.remove((java.lang.Object) charSequenceQueue43);
        boolean boolean48 = charSequenceQueue35.isAtFullCapacity();
        java.lang.Object[] objArray49 = charSequenceQueue35.toArray();
        boolean boolean50 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean51 = charSequenceQueue35.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][]> strComparableArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][]>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue13.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceQueue13.peek();
        boolean boolean16 = charSequenceQueue13.isEmpty();
        int int17 = charSequenceQueue13.maxSize();
        boolean boolean18 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.String str19 = charSequenceQueue13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue21.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence29 = charSequenceQueue26.element();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceList37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean46 = charSequenceList32.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean47 = charSequenceQueue26.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean48 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.Object[] objArray49 = charSequenceQueue21.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue21.parallelStream();
        java.lang.String str51 = charSequenceQueue21.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue21.spliterator();
        java.lang.Object[] objArray53 = charSequenceQueue21.toArray();
        boolean boolean54 = charSequenceQueue21.isFull();
        boolean boolean55 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(objArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray49), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray49), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[]" + "'", str51, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceQueue13.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue13.parallelStream();
        boolean boolean19 = charSequenceQueue13.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue13.spliterator();
        boolean boolean21 = charSequenceQueue13.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        int int23 = charSequenceQueue13.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        charSequenceQueue25.clear();
        boolean boolean30 = charSequenceQueue25.remove((java.lang.Object) (-1.0d));
        int int31 = charSequenceQueue25.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue33.peek();
        boolean boolean37 = charSequenceQueue25.remove((java.lang.Object) charSequenceQueue33);
        boolean boolean38 = charSequenceQueue25.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue25.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "[, ]");
        charSequenceQueue41.clear();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[][] strArray59 = new java.lang.String[][] { strArray51, strArray58 };
        java.lang.String[][] strArray60 = charSequenceQueue41.toArray(strArray59);
        java.lang.CharSequence[][] charSequenceArray61 = charSequenceQueue25.toArray((java.lang.CharSequence[][]) strArray60);
        boolean boolean63 = charSequenceQueue25.offer((java.lang.CharSequence) "[[hi!]]");
        boolean boolean64 = charSequenceQueue13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        int int14 = charSequenceQueue8.size();
        boolean boolean16 = charSequenceQueue8.offer((java.lang.CharSequence) "[, ]");
        java.lang.String str17 = charSequenceQueue8.toString();
        int int18 = charSequenceQueue8.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue8.parallelStream();
        boolean boolean21 = charSequenceQueue8.offer((java.lang.CharSequence) "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[, , [, ]]" + "'", str17, "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isFull();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceStream12);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue40.spliterator();
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue40.poll();
        boolean boolean46 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.CharSequence charSequence47 = charSequenceQueue35.remove();
        boolean boolean48 = charSequenceQueue35.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue50.parallelStream();
        boolean boolean52 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean53 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.String str54 = charSequenceQueue50.toString();
        boolean boolean55 = charSequenceQueue50.isEmpty();
        boolean boolean56 = charSequenceQueue50.isFull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence57 = charSequenceQueue50.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11, charSequenceArray10);
        boolean boolean13 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean15 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue17.element();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList48.contains(obj50);
        java.lang.String str52 = charSequenceList48.toString();
        boolean boolean53 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.stream();
        boolean boolean56 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean57 = charSequenceQueue5.remove((java.lang.Object) charSequenceQueue54);
        boolean boolean58 = charSequenceQueue54.isFull();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!]" + "'", str52, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractCollection<java.lang.CharSequence>[]> charSequenceCollectionArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractCollection<java.lang.CharSequence>[]>(5);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence57 = charSequenceQueue54.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence62 = charSequenceQueue59.element();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceList65.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        boolean boolean80 = charSequenceQueue59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        boolean boolean81 = charSequenceQueue54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean85 = charSequenceQueue83.offer((java.lang.CharSequence) "");
        charSequenceQueue83.clear();
        boolean boolean88 = charSequenceQueue83.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray91 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList92 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList92, charSequenceArray91);
        boolean boolean94 = charSequenceQueue83.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList92);
        boolean boolean95 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList92);
        boolean boolean96 = charSequenceQueue54.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue97 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean98 = charSequenceQueue48.contains((java.lang.Object) charSequenceQueue54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "" + "'", charSequence62, "");
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charSequenceArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue61.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceQueue61.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        boolean boolean68 = charSequenceQueue61.contains((java.lang.Object) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence73 = charSequenceQueue70.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue70.parallelStream();
        boolean boolean76 = charSequenceQueue70.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue70.spliterator();
        boolean boolean78 = charSequenceQueue61.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean79 = charSequenceQueue70.isFull();
        boolean boolean80 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence81 = charSequenceQueue70.peek();
        boolean boolean82 = charSequenceQueue70.isFull();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertNotNull(charSequenceItor60);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue49.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue49.parallelStream();
        boolean boolean55 = charSequenceQueue49.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue49.spliterator();
        boolean boolean57 = charSequenceQueue40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        java.lang.CharSequence charSequence58 = charSequenceQueue49.poll();
        int int59 = charSequenceQueue49.size();
        charSequenceQueue49.clear();
        java.lang.Object[] objArray61 = charSequenceQueue49.toArray();
        boolean boolean62 = charSequenceQueue7.remove((java.lang.Object) objArray61);
        charSequenceQueue7.clear();
        boolean boolean65 = charSequenceQueue7.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.CharSequence charSequence66 = charSequenceQueue7.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "[[hi!], [hi!]]" + "'", charSequence66, "[[hi!], [hi!]]");
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue24.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue24.stream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream38);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        int int11 = charSequenceQueue1.maxSize();
        boolean boolean13 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceQueue21.iterator();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "hi!");
        int int44 = charSequenceQueue39.maxSize();
        boolean boolean45 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue39.spliterator();
        boolean boolean47 = charSequenceQueue39.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue39.stream();
        boolean boolean49 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        boolean boolean55 = charSequenceQueue51.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue51.stream();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList66 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = charSequenceList66.contains(obj68);
        java.lang.String str70 = charSequenceList66.toString();
        boolean boolean71 = charSequenceList59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean75 = charSequenceQueue73.offer((java.lang.CharSequence) "");
        boolean boolean77 = charSequenceQueue73.add((java.lang.CharSequence) "hi!");
        int int78 = charSequenceQueue73.maxSize();
        boolean boolean79 = charSequenceList59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean83 = charSequenceQueue81.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue81.peek();
        boolean boolean86 = charSequenceQueue81.add((java.lang.CharSequence) "");
        boolean boolean87 = charSequenceList59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        boolean boolean88 = charSequenceQueue51.contains((java.lang.Object) charSequenceQueue81);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream89 = charSequenceQueue81.stream();
        boolean boolean90 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[hi!]" + "'", str70, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 52 + "'", int78 == 52);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charSequenceStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence21 = charSequenceQueue18.peek();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean38 = charSequenceList24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean39 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue36);
        int int40 = charSequenceQueue36.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence44 = charSequenceQueue42.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean49 = charSequenceQueue42.contains((java.lang.Object) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence54 = charSequenceQueue51.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue51.parallelStream();
        boolean boolean57 = charSequenceQueue51.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue51.spliterator();
        boolean boolean59 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        java.lang.CharSequence charSequence60 = charSequenceQueue51.poll();
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        int int65 = charSequenceQueue63.maxSize();
        boolean boolean66 = charSequenceQueue63.isFull();
        java.lang.String str67 = charSequenceQueue63.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue80.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceQueue80.spliterator();
        boolean boolean84 = charSequenceQueue80.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence85 = charSequenceQueue80.poll();
        boolean boolean86 = charSequenceQueue75.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        java.util.Queue[] queueArray88 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray89 = (java.util.Queue<java.lang.CharSequence>[]) queueArray88;
        charSequenceQueueArray89[0] = charSequenceQueue63;
        charSequenceQueueArray89[1] = charSequenceQueue80;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray94 = charSequenceQueue51.toArray(charSequenceQueueArray89);
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray95 = charSequenceQueue36.toArray(charSequenceQueueArray89);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream96 = charSequenceQueue36.parallelStream();
        boolean boolean97 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor98 = charSequenceQueue36.iterator();
        java.lang.Class<?> wildcardClass99 = charSequenceItor98.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(queueArray88);
        org.junit.Assert.assertNotNull(charSequenceQueueArray89);
        org.junit.Assert.assertNotNull(charSequenceQueueArray94);
        org.junit.Assert.assertNotNull(charSequenceQueueArray95);
        org.junit.Assert.assertNotNull(charSequenceStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertNotNull(charSequenceItor98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue27.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue27.parallelStream();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40, charSequenceArray39);
        boolean boolean42 = charSequenceQueue40.isAtFullCapacity();
        boolean boolean43 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean44 = charSequenceQueue40.isAtFullCapacity();
        int int45 = charSequenceQueue40.maxSize();
        boolean boolean46 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean48 = charSequenceQueue27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence49 = charSequenceQueue27.remove();
        boolean boolean50 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue52.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue52.spliterator();
        boolean boolean56 = charSequenceQueue52.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence57 = charSequenceQueue52.poll();
        boolean boolean59 = charSequenceQueue52.add((java.lang.CharSequence) "");
        charSequenceQueue52.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceQueue62.element();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList68 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78, charSequenceArray77);
        boolean boolean80 = charSequenceQueue78.isAtFullCapacity();
        boolean boolean81 = charSequenceList73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean82 = charSequenceList68.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        boolean boolean83 = charSequenceQueue62.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        boolean boolean84 = charSequenceQueue52.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence charSequence85 = charSequenceQueue52.poll();
        boolean boolean86 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(charSequence85);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        boolean boolean8 = charSequenceQueue1.isFull();
        boolean boolean10 = charSequenceQueue1.offer((java.lang.CharSequence) "[[, , , hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        int int16 = charSequenceQueue15.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence36 = charSequenceQueue24.remove();
        boolean boolean37 = charSequenceQueue24.isFull();
        int int38 = charSequenceQueue24.size();
        boolean boolean39 = charSequenceQueue15.remove((java.lang.Object) charSequenceQueue24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue15.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        int int5 = charSequenceQueue1.maxSize();
        int int6 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue8.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue8.spliterator();
        boolean boolean12 = charSequenceQueue8.add((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        int int14 = charSequenceQueue8.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue17.spliterator();
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue17.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue17.iterator();
        java.lang.Object[] objArray24 = charSequenceQueue17.toArray();
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) objArray24);
        java.lang.CharSequence charSequence26 = charSequenceQueue8.remove();
        java.lang.String str27 = charSequenceQueue8.toString();
        boolean boolean28 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        java.lang.CharSequence charSequence29 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(charSequence29);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        java.lang.Object[] objArray45 = charSequenceQueue5.toArray();
        java.lang.CharSequence charSequence46 = charSequenceQueue5.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence51 = charSequenceQueue48.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue48.parallelStream();
        charSequenceQueue48.clear();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.peek();
        java.lang.CharSequence charSequence55 = charSequenceQueue48.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceQueue57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        int int67 = charSequenceQueue63.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue63.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue63.spliterator();
        boolean boolean70 = charSequenceQueue48.remove((java.lang.Object) charSequenceSpliterator69);
        boolean boolean72 = charSequenceQueue48.offer((java.lang.CharSequence) "[, hi!]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor73 = charSequenceQueue48.iterator();
        boolean boolean74 = charSequenceQueue5.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence75 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean76 = charSequenceQueue48.offer(charSequence75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Attempted to add null object to queue");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[, hi!]");
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertNull(charSequence54);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 32 + "'", int67 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceItor73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence15 = charSequenceQueue8.get((-1));
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue8.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue8.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = charSequenceList53.contains(obj55);
        java.lang.String str57 = charSequenceList53.toString();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList60 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = charSequenceList60.contains(obj62);
        java.lang.String str64 = charSequenceList60.toString();
        boolean boolean65 = charSequenceList53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean66 = charSequenceQueue48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean67 = charSequenceQueue8.remove((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence charSequence69 = charSequenceQueue8.element();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence71 = charSequenceQueue8.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (35) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!]" + "'", str57, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!]" + "'", str64, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean23 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean24 = charSequenceQueue16.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue21.parallelStream();
        boolean boolean24 = charSequenceQueue21.contains((java.lang.Object) 1.0d);
        boolean boolean25 = charSequenceQueue21.isFull();
        int int26 = charSequenceQueue21.size();
        boolean boolean27 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceList2.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceList2.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int9 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence12 = charSequenceQueue1.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "[hi!]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        boolean boolean4 = charSequenceQueue2.isFull();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.String str11 = charSequenceList7.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean14 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue16.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue16.spliterator();
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue16.isAtFullCapacity();
        java.lang.CharSequence charSequence22 = charSequenceQueue16.element();
        int int23 = charSequenceQueue16.size();
        boolean boolean24 = charSequenceList7.remove((java.lang.Object) charSequenceQueue16);
        boolean boolean25 = charSequenceQueue2.remove((java.lang.Object) charSequenceList7);
        boolean boolean26 = charSequenceQueue2.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue28.parallelStream();
        boolean boolean31 = charSequenceQueue28.contains((java.lang.Object) 1.0d);
        boolean boolean32 = charSequenceQueue28.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.lang.CharSequence charSequence36 = charSequenceQueue34.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue34.contains((java.lang.Object) charSequenceQueue38);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue34.iterator();
        boolean boolean43 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51, charSequenceArray50);
        boolean boolean53 = charSequenceQueue51.isAtFullCapacity();
        boolean boolean54 = charSequenceQueue45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue56.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue56.spliterator();
        boolean boolean60 = charSequenceQueue56.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence61 = charSequenceQueue56.poll();
        boolean boolean62 = charSequenceQueue51.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean63 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        java.lang.CharSequence charSequence64 = charSequenceQueue51.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceQueue51.spliterator();
        java.lang.CharSequence charSequence66 = charSequenceQueue51.remove();
        boolean boolean67 = charSequenceQueue51.isFull();
        boolean boolean68 = charSequenceQueue2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        java.lang.CharSequence charSequence69 = charSequenceQueue51.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!]" + "'", str11, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(charSequence69);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        int int15 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.offer((java.lang.CharSequence) "[, [hi!]]");
        charSequenceQueue8.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceStream19);
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.lang.Class<?> wildcardClass7 = charSequenceStream6.getClass();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean2 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue4.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue13.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceQueue13.isEmpty();
        java.lang.CharSequence charSequence22 = charSequenceQueue13.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean32 = charSequenceQueue24.isEmpty();
        boolean boolean33 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue4.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        boolean boolean35 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue4);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        boolean boolean40 = charSequenceQueue37.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue48.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        charSequenceQueue48.clear();
        int int55 = charSequenceQueue48.maxSize();
        boolean boolean56 = charSequenceQueue37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence57 = charSequenceQueue48.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.String str62 = charSequenceQueue59.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue59.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue59.parallelStream();
        boolean boolean65 = charSequenceQueue48.remove((java.lang.Object) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList69 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList74 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79, charSequenceArray78);
        boolean boolean81 = charSequenceQueue79.isAtFullCapacity();
        boolean boolean82 = charSequenceList74.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean83 = charSequenceList69.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceList74.parallelStream();
        boolean boolean85 = charSequenceQueue4.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74);
        boolean boolean86 = charSequenceQueue4.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceQueue4.spliterator();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean13 = charSequenceQueue1.contains((java.lang.Object) ' ');
        java.lang.CharSequence charSequence14 = charSequenceQueue1.poll();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue48.parallelStream();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.poll();
        boolean boolean56 = charSequenceQueue48.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertNull(charSequence54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        boolean boolean30 = charSequenceList18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean31 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean32 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue13);
        boolean boolean33 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList49.contains(obj51);
        java.lang.String str53 = charSequenceList49.toString();
        boolean boolean54 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean55 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean56 = charSequenceQueue35.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean60 = charSequenceQueue58.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64, charSequenceArray63);
        boolean boolean66 = charSequenceQueue64.isAtFullCapacity();
        boolean boolean67 = charSequenceQueue58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceQueue69.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue69.spliterator();
        boolean boolean73 = charSequenceQueue69.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence74 = charSequenceQueue69.poll();
        boolean boolean75 = charSequenceQueue64.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList79 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue84 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84, charSequenceArray83);
        boolean boolean86 = charSequenceQueue84.isAtFullCapacity();
        boolean boolean87 = charSequenceList79.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        boolean boolean88 = charSequenceQueue84.isAtFullCapacity();
        int int89 = charSequenceQueue84.maxSize();
        boolean boolean90 = charSequenceQueue64.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        boolean boolean91 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        boolean boolean93 = charSequenceQueue35.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence94 = charSequenceQueue35.remove();
        boolean boolean95 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream96 = charSequenceQueue1.stream();
        boolean boolean98 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[hi!]" + "'", str53, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "" + "'", charSequence74, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 32 + "'", int89 == 32);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + charSequence94 + "' != '" + "hi!" + "'", charSequence94, "hi!");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charSequenceStream96);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.stream.Stream<java.lang.CharSequence>> charSequenceStreamQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.stream.Stream<java.lang.CharSequence>>(100);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        charSequenceQueue7.clear();
        int int14 = charSequenceQueue7.maxSize();
        boolean boolean15 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue17.stream();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "hi!");
        int int44 = charSequenceQueue39.maxSize();
        boolean boolean45 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue47.peek();
        boolean boolean52 = charSequenceQueue47.add((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceList25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean54 = charSequenceQueue17.contains((java.lang.Object) charSequenceQueue47);
        java.lang.String str55 = charSequenceQueue17.toString();
        java.lang.String str56 = charSequenceQueue17.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue17.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue17.parallelStream();
        boolean boolean59 = charSequenceQueue7.contains((java.lang.Object) charSequenceStream58);
        boolean boolean60 = charSequenceQueue7.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[, hi!]" + "'", str55, "[, hi!]");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[, hi!]" + "'", str56, "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        int int28 = charSequenceQueue23.maxSize();
        boolean boolean29 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        boolean boolean36 = charSequenceQueue31.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean38 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence51 = charSequenceQueue47.poll();
        boolean boolean52 = charSequenceQueue47.isAtFullCapacity();
        java.lang.CharSequence charSequence53 = charSequenceQueue47.element();
        charSequenceQueue47.clear();
        boolean boolean55 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue47);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue47.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream56);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue24.stream();
        boolean boolean40 = charSequenceQueue24.offer((java.lang.CharSequence) "[]");
        java.lang.String str41 = charSequenceQueue24.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue24.spliterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[, []]" + "'", str41, "[, []]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        int int9 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue12.parallelStream();
        boolean boolean15 = charSequenceQueue12.contains((java.lang.Object) 1.0d);
        boolean boolean16 = charSequenceQueue12.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue12.stream();
        boolean boolean19 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        charSequenceQueue12.clear();
        charSequenceQueue12.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean44 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        boolean boolean59 = charSequenceList47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceQueue60.stream();
        boolean boolean62 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        java.lang.CharSequence charSequence63 = charSequenceQueue60.element();
        java.lang.CharSequence charSequence64 = charSequenceQueue60.peek();
        boolean boolean65 = charSequenceQueue60.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue60.spliterator();
        boolean boolean67 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue60);
        boolean boolean68 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        int int69 = charSequenceQueue12.maxSize();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78, charSequenceArray77);
        boolean boolean80 = charSequenceQueue78.isAtFullCapacity();
        boolean boolean81 = charSequenceList73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean82 = charSequenceQueue78.isAtFullCapacity();
        java.lang.Object[] objArray83 = charSequenceQueue78.toArray();
        boolean boolean85 = charSequenceQueue78.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean89 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceQueue87.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue93 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean94 = charSequenceQueue87.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue93);
        boolean boolean95 = charSequenceQueue78.remove((java.lang.Object) charSequenceQueue93);
        boolean boolean96 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue78);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor97 = charSequenceQueue78.iterator();
        boolean boolean98 = charSequenceQueue78.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(objArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray83), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray83), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(charSequenceItor97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.parallelStream();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean59 = charSequenceQueue55.isAtFullCapacity();
        int int60 = charSequenceQueue55.maxSize();
        boolean boolean61 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean63 = charSequenceQueue42.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence64 = charSequenceQueue42.peek();
        boolean boolean65 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue67.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue67.spliterator();
        boolean boolean71 = charSequenceQueue67.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence72 = charSequenceQueue67.poll();
        boolean boolean74 = charSequenceQueue67.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean77 = charSequenceQueue76.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue67.remove((java.lang.Object) boolean77);
        java.lang.CharSequence charSequence79 = charSequenceQueue67.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceQueue67.stream();
        boolean boolean81 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        int int82 = charSequenceQueue42.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "" + "'", charSequence79, "");
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 4 + "'", int82 == 4);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        java.lang.CharSequence charSequence32 = charSequenceQueue24.element();
        boolean boolean33 = charSequenceList2.remove((java.lang.Object) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue24.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        int int46 = charSequenceQueue42.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue42.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue42.element();
        boolean boolean50 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence charSequence51 = charSequenceQueue42.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.poll();
        java.lang.String str9 = charSequenceQueue1.toString();
        java.lang.Object[] objArray10 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertNull(charSequence8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue22.iterator();
        java.lang.CharSequence charSequence26 = charSequenceQueue22.poll();
        java.lang.CharSequence charSequence27 = charSequenceQueue22.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertNull(charSequence26);
        org.junit.Assert.assertNull(charSequence27);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        boolean boolean20 = charSequenceQueue12.isEmpty();
        boolean boolean21 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence22 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean6 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        int int9 = charSequenceQueue1.size();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceQueue35.isAtFullCapacity();
        int int40 = charSequenceQueue35.maxSize();
        boolean boolean41 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue35.iterator();
        boolean boolean43 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.String str50 = charSequenceList46.toString();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = charSequenceList53.contains(obj55);
        java.lang.String str57 = charSequenceList53.toString();
        boolean boolean58 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        boolean boolean64 = charSequenceQueue60.add((java.lang.CharSequence) "hi!");
        int int65 = charSequenceQueue60.maxSize();
        boolean boolean66 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence71 = charSequenceQueue68.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream72 = charSequenceQueue68.parallelStream();
        boolean boolean74 = charSequenceQueue68.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue68.spliterator();
        java.lang.CharSequence charSequence76 = charSequenceQueue68.element();
        boolean boolean77 = charSequenceList46.remove((java.lang.Object) charSequenceQueue68);
        boolean boolean78 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence charSequence79 = charSequenceQueue1.peek();
        java.lang.reflect.AnnotatedElement[][] annotatedElementArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.reflect.AnnotatedElement[][] annotatedElementArray81 = charSequenceQueue1.toArray(annotatedElementArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!]" + "'", str50, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!]" + "'", str57, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertNotNull(charSequenceStream72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "" + "'", charSequence76, "");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNull(charSequence79);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue24.parallelStream();
        boolean boolean41 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue24.isFull();
        boolean boolean44 = charSequenceQueue24.add((java.lang.CharSequence) "[hi!, hi!]");
        java.lang.String str45 = charSequenceQueue24.toString();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[, [hi!, hi!]]" + "'", str45, "[, [hi!, hi!]]");
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue1.iterator();
        boolean boolean62 = charSequenceQueue1.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceStream63);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess[]> randomAccessArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess[]>((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        boolean boolean33 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue1.spliterator();
        java.lang.Object[] objArray35 = charSequenceQueue1.toArray();
        java.lang.Class<?> wildcardClass36 = objArray35.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[]");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence2 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray4 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList5 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5, charSequenceArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList5.contains(obj7);
        java.lang.String str9 = charSequenceList5.toString();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.String str16 = charSequenceList12.toString();
        boolean boolean17 = charSequenceList5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean23 = charSequenceQueue19.add((java.lang.CharSequence) "hi!");
        int int24 = charSequenceQueue19.maxSize();
        boolean boolean25 = charSequenceList5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue27.peek();
        boolean boolean32 = charSequenceQueue27.add((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceList5.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence charSequence34 = charSequenceQueue27.peek();
        boolean boolean35 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue27);
        java.lang.String str36 = charSequenceQueue27.toString();
        org.junit.Assert.assertNull(charSequence2);
        org.junit.Assert.assertNotNull(charSequenceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[hi!]" + "'", str9, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!]" + "'", str16, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 52 + "'", int24 == 52);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[, ]" + "'", str36, "[, ]");
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue11.parallelStream();
        boolean boolean14 = charSequenceQueue11.contains((java.lang.Object) 1.0d);
        boolean boolean15 = charSequenceQueue11.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.lang.CharSequence charSequence19 = charSequenceQueue17.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        boolean boolean24 = charSequenceQueue17.contains((java.lang.Object) charSequenceQueue21);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue17.iterator();
        boolean boolean26 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue17);
        charSequenceQueue17.clear();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.lang.Object[] objArray38 = charSequenceQueue36.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue45.element();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceList56.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean65 = charSequenceList51.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        boolean boolean66 = charSequenceQueue45.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        boolean boolean67 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56);
        java.lang.Object[] objArray68 = charSequenceQueue40.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue70.spliterator();
        java.lang.CharSequence charSequence72 = charSequenceQueue70.peek();
        boolean boolean73 = charSequenceQueue70.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue70.stream();
        boolean boolean75 = charSequenceQueue40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.String str76 = charSequenceQueue40.toString();
        boolean boolean77 = charSequenceQueue36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean78 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean79 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean81 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(objArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray38), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray38), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(objArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray68), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray68), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertNull(charSequence72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[]" + "'", str76, "[]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.stream();
        java.lang.String str31 = charSequenceQueue29.toString();
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue40.iterator();
        boolean boolean49 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        java.lang.CharSequence charSequence72 = charSequenceQueue57.get((int) (short) 0);
        boolean boolean73 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean76 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean77 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue7.clear();
        boolean boolean80 = charSequenceQueue7.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        int int25 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence26 = charSequenceQueue7.poll();
        int int27 = charSequenceQueue7.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        int int32 = charSequenceQueue29.maxSize();
        int int33 = charSequenceQueue29.maxSize();
        boolean boolean34 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        int int35 = charSequenceQueue29.maxSize();
        java.lang.CharSequence charSequence36 = charSequenceQueue29.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue29.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence38 = charSequenceQueue29.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str2 = charSequenceQueue1.toString();
        int int3 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream4 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(charSequenceStream4);
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.stream.Stream<java.lang.CharSequence>> charSequenceStreamQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.stream.Stream<java.lang.CharSequence>>(0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int7 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        boolean boolean44 = charSequenceQueue39.add((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean46 = charSequenceQueue9.contains((java.lang.Object) charSequenceQueue39);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        java.lang.CharSequence charSequence59 = charSequenceQueue55.poll();
        boolean boolean60 = charSequenceQueue55.isAtFullCapacity();
        java.lang.CharSequence charSequence61 = charSequenceQueue55.element();
        charSequenceQueue55.clear();
        boolean boolean63 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue55);
        boolean boolean64 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        java.lang.String str65 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue67.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue67.spliterator();
        boolean boolean71 = charSequenceQueue67.add((java.lang.CharSequence) "");
        boolean boolean72 = charSequenceQueue67.isAtFullCapacity();
        java.lang.CharSequence charSequence73 = charSequenceQueue67.element();
        int int74 = charSequenceQueue67.size();
        int int75 = charSequenceQueue67.size();
        boolean boolean76 = charSequenceQueue67.isFull();
        boolean boolean77 = charSequenceQueue67.isFull();
        boolean boolean78 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue67);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence80 = charSequenceQueue1.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        int int9 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue12.parallelStream();
        boolean boolean15 = charSequenceQueue12.contains((java.lang.Object) 1.0d);
        boolean boolean16 = charSequenceQueue12.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue12.stream();
        boolean boolean19 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        charSequenceQueue12.clear();
        charSequenceQueue12.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean44 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        boolean boolean59 = charSequenceList47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceQueue60.stream();
        boolean boolean62 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        java.lang.CharSequence charSequence63 = charSequenceQueue60.element();
        java.lang.CharSequence charSequence64 = charSequenceQueue60.peek();
        boolean boolean65 = charSequenceQueue60.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue60.spliterator();
        boolean boolean67 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue60);
        boolean boolean68 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        int int69 = charSequenceQueue12.maxSize();
        int int70 = charSequenceQueue12.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceQueue12.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 52 + "'", int70 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream71);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        int int14 = charSequenceQueue1.size();
        java.lang.String str15 = charSequenceQueue1.toString();
        int int16 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.lang.CharSequence charSequence20 = charSequenceQueue18.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue18.contains((java.lang.Object) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue27.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue27.parallelStream();
        boolean boolean33 = charSequenceQueue27.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue27.spliterator();
        boolean boolean35 = charSequenceQueue18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean36 = charSequenceQueue27.isFull();
        java.lang.CharSequence charSequence37 = charSequenceQueue27.peek();
        int int38 = charSequenceQueue27.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray43 = charSequenceQueue40.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor44 = charSequenceQueue40.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue40.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceQueue49.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean56 = charSequenceQueue49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        charSequenceQueue49.clear();
        boolean boolean58 = charSequenceQueue47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean59 = charSequenceQueue40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean60 = charSequenceQueue27.remove((java.lang.Object) charSequenceQueue49);
        boolean boolean61 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.Object[] objArray62 = charSequenceQueue27.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue27.parallelStream();
        int int64 = charSequenceQueue27.size();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor44);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceQueue35.isAtFullCapacity();
        int int40 = charSequenceQueue35.maxSize();
        boolean boolean41 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue35.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor43 = charSequenceQueue35.iterator();
        java.lang.CharSequence charSequence45 = charSequenceQueue35.get(1);
        boolean boolean46 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue59.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue59.iterator();
        boolean boolean68 = charSequenceQueue59.isFull();
        boolean boolean69 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue45.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue49.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue49.contains((java.lang.Object) charSequenceQueue53);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue49.iterator();
        boolean boolean58 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        int int59 = charSequenceQueue49.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue49.iterator();
        boolean boolean61 = charSequenceQueue25.remove((java.lang.Object) charSequenceItor60);
        boolean boolean63 = charSequenceQueue25.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList66 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = charSequenceList66.contains(obj68);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = charSequenceList72.contains(obj74);
        java.lang.String str76 = charSequenceList72.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean79 = charSequenceList72.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean80 = charSequenceList66.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean83 = charSequenceList66.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue85.parallelStream();
        boolean boolean88 = charSequenceQueue85.contains((java.lang.Object) 1.0d);
        boolean boolean89 = charSequenceQueue85.isFull();
        int int90 = charSequenceQueue85.size();
        boolean boolean91 = charSequenceList66.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream92 = charSequenceList66.stream();
        boolean boolean93 = charSequenceQueue25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean94 = charSequenceQueue25.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = charSequenceQueue25.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[hi!]" + "'", str76, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(charSequenceStream92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean34 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isFull();
        charSequenceQueue37.clear();
        boolean boolean44 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue37.stream();
        java.lang.CharSequence charSequence46 = charSequenceQueue37.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue37.stream();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertNotNull(charSequenceStream47);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Spliterator<java.lang.CharSequence>> charSequenceSpliteratorQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Spliterator<java.lang.CharSequence>>(3);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean54 = charSequenceQueue42.offer((java.lang.CharSequence) "[hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        charSequenceQueue56.clear();
        java.lang.CharSequence charSequence60 = charSequenceQueue56.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceQueue62.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceQueue62.parallelStream();
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue75.isAtFullCapacity();
        int int80 = charSequenceQueue75.maxSize();
        boolean boolean81 = charSequenceQueue62.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean83 = charSequenceQueue62.offer((java.lang.CharSequence) "hi!");
        boolean boolean84 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean85 = charSequenceQueue42.remove((java.lang.Object) charSequenceQueue56);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence87 = charSequenceQueue42.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (35) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNull(charSequence60);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 32 + "'", int80 == 32);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence57 = charSequenceQueue54.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue54.parallelStream();
        boolean boolean60 = charSequenceQueue54.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue54.spliterator();
        java.lang.CharSequence charSequence62 = charSequenceQueue54.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean66 = charSequenceQueue64.offer((java.lang.CharSequence) "");
        charSequenceQueue64.clear();
        boolean boolean69 = charSequenceQueue64.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue64.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList79 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue84 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84, charSequenceArray83);
        boolean boolean86 = charSequenceQueue84.isAtFullCapacity();
        boolean boolean87 = charSequenceList79.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        java.lang.CharSequence charSequence88 = charSequenceQueue84.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream89 = charSequenceQueue84.parallelStream();
        boolean boolean90 = charSequenceQueue64.contains((java.lang.Object) charSequenceStream89);
        java.lang.CharSequence charSequence91 = charSequenceQueue64.peek();
        boolean boolean92 = charSequenceQueue54.remove((java.lang.Object) charSequenceQueue64);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream93 = charSequenceQueue64.parallelStream();
        boolean boolean94 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = charSequenceQueue64.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "" + "'", charSequence62, "");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "" + "'", charSequence88, "");
        org.junit.Assert.assertNotNull(charSequenceStream89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(charSequence91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(charSequenceStream93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean40 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.poll();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue44.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue44.spliterator();
        boolean boolean48 = charSequenceQueue44.add((java.lang.CharSequence) "");
        boolean boolean49 = charSequenceQueue44.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue44.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue44.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue44.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.parallelStream();
        boolean boolean57 = charSequenceQueue54.contains((java.lang.Object) 1.0d);
        boolean boolean59 = charSequenceQueue54.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence60 = charSequenceQueue54.element();
        boolean boolean61 = charSequenceQueue44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean62 = charSequenceQueue38.remove((java.lang.Object) boolean61);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "[hi!]" + "'", charSequence60, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.add((java.lang.CharSequence) "[, ]");
        int int16 = charSequenceQueue8.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue8.stream();
        java.lang.Object[] objArray18 = charSequenceQueue8.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 3 + "'", int16 == 3);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(objArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray18), "[, , [, ]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray18), "[, , [, ]]");
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.String str13 = charSequenceQueue3.toString();
        boolean boolean14 = charSequenceQueue3.isFull();
        int int15 = charSequenceQueue3.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 52 + "'", int15 == 52);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.Object[] objArray10 = charSequenceQueue8.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean19 = charSequenceQueue12.add((java.lang.CharSequence) "");
        charSequenceQueue12.clear();
        boolean boolean21 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean22 = charSequenceQueue12.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceQueue12.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue1.spliterator();
        java.lang.Object[] objArray6 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean67 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue54);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence70 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertNull(charSequence70);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence charSequence38 = charSequenceQueue7.peek();
        java.lang.CharSequence charSequence39 = charSequenceQueue7.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertNull(charSequence39);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean10 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceStream11);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceQueue27.peek();
        boolean boolean30 = charSequenceQueue8.contains((java.lang.Object) charSequenceQueue27);
        java.lang.String str31 = charSequenceQueue8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.remove();
        boolean boolean39 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue33.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[, ]" + "'", str31, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceStream40);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue45.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue49.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue49.contains((java.lang.Object) charSequenceQueue53);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue49.iterator();
        boolean boolean58 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        int int59 = charSequenceQueue49.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue49.iterator();
        boolean boolean61 = charSequenceQueue25.remove((java.lang.Object) charSequenceItor60);
        boolean boolean63 = charSequenceQueue25.offer((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue65.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue65.spliterator();
        boolean boolean69 = charSequenceQueue65.add((java.lang.CharSequence) "");
        boolean boolean70 = charSequenceQueue65.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor71 = charSequenceQueue65.iterator();
        java.lang.Object[] objArray72 = charSequenceQueue65.toArray();
        boolean boolean73 = charSequenceQueue65.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue65.spliterator();
        boolean boolean76 = charSequenceQueue65.add((java.lang.CharSequence) "");
        boolean boolean77 = charSequenceQueue65.isFull();
        boolean boolean78 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.Object[] objArray79 = charSequenceQueue25.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceItor71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[[, hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[[, hi!]]");
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "[hi!]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        boolean boolean4 = charSequenceQueue2.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceQueue12.isFull();
        java.lang.CharSequence charSequence17 = charSequenceQueue12.remove();
        boolean boolean18 = charSequenceQueue2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence40 = charSequenceQueue33.element();
        boolean boolean41 = charSequenceQueue33.isEmpty();
        boolean boolean42 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean43 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>> charSequenceListQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>>(10);
        boolean boolean9 = charSequenceQueue1.contains((java.lang.Object) 10);
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "[[hi!]]");
        boolean boolean13 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        int int9 = charSequenceQueue1.size();
        int int10 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue1.poll();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15, charSequenceArray14);
        int int17 = charSequenceQueue15.maxSize();
        boolean boolean18 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue15.add((java.lang.CharSequence) "[hi!]");
        boolean boolean21 = charSequenceQueue15.isFull();
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceQueue15.contains(obj22);
        java.lang.String str24 = charSequenceQueue15.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue15.iterator();
        boolean boolean26 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue28.spliterator();
        java.lang.CharSequence charSequence30 = charSequenceQueue28.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue28.contains((java.lang.Object) charSequenceQueue32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue37.parallelStream();
        boolean boolean43 = charSequenceQueue37.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue37.spliterator();
        boolean boolean45 = charSequenceQueue28.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean46 = charSequenceQueue37.isFull();
        java.lang.CharSequence charSequence47 = charSequenceQueue37.peek();
        int int48 = charSequenceQueue37.maxSize();
        boolean boolean49 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 52 + "'", int10 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 32 + "'", int17 == 32);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[, [hi!]]" + "'", str24, "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.peek();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue31.stream();
        boolean boolean36 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue31.parallelStream();
        boolean boolean38 = charSequenceQueue31.isFull();
        boolean boolean40 = charSequenceQueue31.add((java.lang.CharSequence) "[[, , , hi!]]");
        charSequenceQueue31.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue7.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue16.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue16.spliterator();
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue16.isAtFullCapacity();
        java.lang.CharSequence charSequence22 = charSequenceQueue16.element();
        int int23 = charSequenceQueue16.size();
        int int24 = charSequenceQueue16.size();
        boolean boolean25 = charSequenceQueue16.isFull();
        boolean boolean26 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.parallelStream();
        boolean boolean32 = charSequenceQueue29.contains((java.lang.Object) 1.0d);
        boolean boolean33 = charSequenceQueue29.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue29.stream();
        boolean boolean36 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        charSequenceQueue29.clear();
        charSequenceQueue29.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceQueue40.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceList51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean60 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean61 = charSequenceQueue40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        boolean boolean76 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceQueue77.stream();
        boolean boolean79 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        java.lang.CharSequence charSequence80 = charSequenceQueue77.element();
        java.lang.CharSequence charSequence81 = charSequenceQueue77.peek();
        boolean boolean82 = charSequenceQueue77.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator83 = charSequenceQueue77.spliterator();
        boolean boolean84 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue77);
        boolean boolean85 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue7.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "hi!" + "'", charSequence80, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue24.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue40.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isEmpty();
        boolean boolean52 = charSequenceQueue40.remove((java.lang.Object) boolean51);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue40.parallelStream();
        boolean boolean55 = charSequenceQueue40.add((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        boolean boolean56 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue40);
        java.lang.String str57 = charSequenceQueue40.toString();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[, , [[hi!], [hi!]], [, , [[hi!], [hi!]]]]" + "'", str57, "[, , [[hi!], [hi!]], [, , [[hi!], [hi!]]]]");
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        int int40 = charSequenceQueue39.maxSize();
        java.util.Queue[] queueArray42 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray43 = (java.util.Queue<java.lang.CharSequence>[]) queueArray42;
        java.util.Queue[] queueArray45 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray46 = (java.util.Queue<java.lang.CharSequence>[]) queueArray45;
        java.util.Queue[] queueArray48 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray49 = (java.util.Queue<java.lang.CharSequence>[]) queueArray48;
        java.util.Queue[] queueArray51 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray52 = (java.util.Queue<java.lang.CharSequence>[]) queueArray51;
        java.util.Queue[] queueArray54 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray55 = (java.util.Queue<java.lang.CharSequence>[]) queueArray54;
        java.util.Queue[][] queueArray57 = new java.util.Queue[5][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray58 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray57;
        charSequenceQueueArray58[0] = charSequenceQueueArray43;
        charSequenceQueueArray58[1] = charSequenceQueueArray46;
        charSequenceQueueArray58[2] = queueArray48;
        charSequenceQueueArray58[3] = charSequenceQueueArray52;
        charSequenceQueueArray58[4] = charSequenceQueueArray55;
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray69 = charSequenceQueue39.toArray(charSequenceQueueArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray70 = charSequenceQueue24.toArray(charSequenceQueueArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertNotNull(queueArray42);
        org.junit.Assert.assertNotNull(charSequenceQueueArray43);
        org.junit.Assert.assertNotNull(queueArray45);
        org.junit.Assert.assertNotNull(charSequenceQueueArray46);
        org.junit.Assert.assertNotNull(queueArray48);
        org.junit.Assert.assertNotNull(charSequenceQueueArray49);
        org.junit.Assert.assertNotNull(queueArray51);
        org.junit.Assert.assertNotNull(charSequenceQueueArray52);
        org.junit.Assert.assertNotNull(queueArray54);
        org.junit.Assert.assertNotNull(charSequenceQueueArray55);
        org.junit.Assert.assertNotNull(queueArray57);
        org.junit.Assert.assertNotNull(charSequenceQueueArray58);
        org.junit.Assert.assertNotNull(charSequenceQueueArray69);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        charSequenceQueue30.clear();
        boolean boolean35 = charSequenceQueue30.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean42 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.String str43 = charSequenceList39.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceList39.stream();
        java.lang.Class<?> wildcardClass45 = charSequenceList39.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[[hi!], [hi!]]" + "'", str43, "[[hi!], [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        charSequenceQueue1.clear();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue20.spliterator();
        boolean boolean24 = charSequenceQueue20.add((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue20.isAtFullCapacity();
        java.lang.CharSequence charSequence26 = charSequenceQueue20.element();
        int int27 = charSequenceQueue20.size();
        boolean boolean28 = charSequenceList11.remove((java.lang.Object) charSequenceQueue20);
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean31 = charSequenceQueue20.add((java.lang.CharSequence) "[, , [, ]]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue20.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceStream32);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean2 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue4.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue13.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceQueue13.isEmpty();
        java.lang.CharSequence charSequence22 = charSequenceQueue13.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean32 = charSequenceQueue24.isEmpty();
        boolean boolean33 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue4.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        boolean boolean35 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue4);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        boolean boolean40 = charSequenceQueue37.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue48.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        charSequenceQueue48.clear();
        int int55 = charSequenceQueue48.maxSize();
        boolean boolean56 = charSequenceQueue37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence57 = charSequenceQueue48.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.String str62 = charSequenceQueue59.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue59.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue59.parallelStream();
        boolean boolean65 = charSequenceQueue48.remove((java.lang.Object) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        charSequenceQueue68.clear();
        java.lang.CharSequence charSequence72 = charSequenceQueue68.peek();
        boolean boolean73 = charSequenceQueue59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        java.lang.CharSequence charSequence74 = charSequenceQueue68.poll();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(charSequence72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNull(charSequence74);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.remove();
        boolean boolean7 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.element();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean30 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList33.contains(obj35);
        java.lang.String str37 = charSequenceList33.toString();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        boolean boolean45 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue46.stream();
        boolean boolean48 = charSequenceQueue9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.String str49 = charSequenceQueue46.toString();
        int int50 = charSequenceQueue46.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence55 = charSequenceQueue52.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue52.parallelStream();
        boolean boolean58 = charSequenceQueue52.contains((java.lang.Object) (short) 100);
        charSequenceQueue52.clear();
        boolean boolean60 = charSequenceQueue46.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        int int61 = charSequenceQueue46.size();
        java.lang.CharSequence charSequence62 = charSequenceQueue46.peek();
        java.lang.CharSequence charSequence63 = charSequenceQueue46.remove();
        boolean boolean64 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!]" + "'", str37, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 1 + "'", int61 == 1);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.remove();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence42 = charSequenceQueue38.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.lang.String str43 = charSequenceQueue38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        java.lang.String str47 = charSequenceQueue45.toString();
        boolean boolean49 = charSequenceQueue45.contains((java.lang.Object) 10.0d);
        boolean boolean50 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int51 = charSequenceQueue45.size();
        java.lang.CharSequence charSequence52 = charSequenceQueue45.peek();
        boolean boolean54 = charSequenceQueue45.add((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(charSequence52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean24 = charSequenceQueue1.isFull();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        boolean boolean39 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue40.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue40.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue44.spliterator();
        java.lang.CharSequence charSequence46 = charSequenceQueue44.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        boolean boolean51 = charSequenceQueue44.contains((java.lang.Object) charSequenceQueue48);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue44.iterator();
        boolean boolean53 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence54 = charSequenceQueue40.poll();
        int int55 = charSequenceQueue40.maxSize();
        boolean boolean57 = charSequenceQueue40.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean58 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        int int59 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "hi!" + "'", charSequence54, "hi!");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 2 + "'", int59 == 2);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor33 = charSequenceQueue25.iterator();
        java.lang.CharSequence charSequence35 = charSequenceQueue25.get((int) (short) 1);
        int int36 = charSequenceQueue25.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertNotNull(charSequenceItor33);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 2 + "'", int36 == 2);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        int int20 = charSequenceQueue10.size();
        charSequenceQueue10.clear();
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        int int23 = charSequenceQueue10.size();
        boolean boolean24 = charSequenceQueue10.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue24.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.remove();
        boolean boolean40 = charSequenceQueue24.isFull();
        boolean boolean41 = charSequenceQueue24.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue8.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue8.spliterator();
        boolean boolean12 = charSequenceQueue8.add((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        int int14 = charSequenceQueue8.maxSize();
        boolean boolean15 = charSequenceQueue1.contains((java.lang.Object) int14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray27 = charSequenceList18.toArray((java.lang.Comparable<java.lang.String>[]) strArray26);
        java.lang.String[] strArray28 = charSequenceQueue1.toArray(strArray26);
        boolean boolean29 = charSequenceQueue1.isFull();
        java.lang.Class<?> wildcardClass30 = charSequenceQueue1.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strComparableArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean63 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean64 = charSequenceQueue36.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue36.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceStream65);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue15.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        boolean boolean36 = charSequenceQueue31.isFull();
        boolean boolean37 = charSequenceQueue31.isFull();
        charSequenceQueue31.clear();
        java.lang.CharSequence charSequence39 = charSequenceQueue31.poll();
        boolean boolean40 = charSequenceQueue15.remove((java.lang.Object) charSequenceQueue31);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        java.lang.CharSequence charSequence23 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceList26.contains(obj28);
        java.lang.String str30 = charSequenceList26.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        charSequenceQueue32.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue32.spliterator();
        boolean boolean36 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence charSequence37 = charSequenceQueue10.poll();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[hi!]" + "'", str30, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNull(charSequence37);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue17.stream();
        boolean boolean19 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        charSequenceQueue9.clear();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        int int8 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue1.spliterator();
        int int10 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        charSequenceQueue38.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        boolean boolean18 = charSequenceQueue15.isFull();
        java.lang.CharSequence charSequence19 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "hi!" + "'", charSequence19, "hi!");
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue1.spliterator();
        int int23 = charSequenceQueue1.maxSize();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence29 = charSequenceQueue26.element();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceList37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean46 = charSequenceList32.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean47 = charSequenceQueue26.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList50.contains(obj52);
        java.lang.String str54 = charSequenceList50.toString();
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = charSequenceList57.contains(obj59);
        java.lang.String str61 = charSequenceList57.toString();
        boolean boolean62 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList57);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue63.stream();
        boolean boolean65 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.String str66 = charSequenceQueue63.toString();
        int int67 = charSequenceQueue63.maxSize();
        java.lang.CharSequence charSequence68 = charSequenceQueue63.poll();
        boolean boolean70 = charSequenceQueue63.offer((java.lang.CharSequence) "[[hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean74 = charSequenceQueue72.offer((java.lang.CharSequence) "");
        boolean boolean76 = charSequenceQueue72.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean79 = charSequenceQueue72.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean80 = charSequenceQueue72.isEmpty();
        boolean boolean82 = charSequenceQueue72.remove((java.lang.Object) 10.0d);
        boolean boolean83 = charSequenceQueue63.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        boolean boolean84 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence85 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!]" + "'", str61, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!]" + "'", str66, "[hi!]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 1 + "'", int67 == 1);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "hi!" + "'", charSequence68, "hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean24 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean35 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue1.add((java.lang.CharSequence) "[, , [[hi!], [hi!]], [, , [[hi!], [hi!]]]]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue13.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceQueue13.poll();
        boolean boolean16 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence21 = charSequenceQueue18.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean44 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object[] objArray46 = charSequenceQueue18.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue18.parallelStream();
        java.lang.CharSequence charSequence48 = charSequenceQueue18.remove();
        boolean boolean49 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue18);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceStream50);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.lang.CharSequence charSequence46 = charSequenceQueue34.remove();
        boolean boolean47 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue49.parallelStream();
        boolean boolean51 = charSequenceQueue34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue49.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        java.lang.String str59 = charSequenceQueue54.toString();
        java.lang.CharSequence charSequence60 = charSequenceQueue54.element();
        boolean boolean61 = charSequenceQueue49.remove((java.lang.Object) charSequenceQueue54);
        boolean boolean62 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue13.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue13.spliterator();
        boolean boolean17 = charSequenceQueue13.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue13.poll();
        boolean boolean20 = charSequenceQueue13.add((java.lang.CharSequence) "");
        charSequenceQueue13.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue23.parallelStream();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36, charSequenceArray35);
        boolean boolean38 = charSequenceQueue36.isAtFullCapacity();
        boolean boolean39 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean40 = charSequenceQueue36.isAtFullCapacity();
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceQueue23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean44 = charSequenceQueue23.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence45 = charSequenceQueue23.remove();
        boolean boolean46 = charSequenceQueue13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue13.spliterator();
        boolean boolean48 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.CharSequence charSequence49 = charSequenceQueue1.peek();
        java.lang.Class<?> wildcardClass50 = charSequenceQueue1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        int int19 = charSequenceQueue15.maxSize();
        boolean boolean20 = charSequenceQueue15.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue15.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceQueue26.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        charSequenceQueue26.clear();
        boolean boolean35 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue37.parallelStream();
        boolean boolean40 = charSequenceQueue37.contains((java.lang.Object) 1.0d);
        boolean boolean41 = charSequenceQueue37.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue37.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue37.stream();
        boolean boolean45 = charSequenceQueue37.add((java.lang.CharSequence) "hi!");
        boolean boolean46 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "[hi!]", "[[hi!], [hi!]]", "[]" };
        java.lang.CharSequence[] charSequenceArray51 = charSequenceQueue37.toArray(charSequenceArray50);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue37.iterator();
        boolean boolean53 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean54 = charSequenceQueue15.remove((java.lang.Object) boolean53);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue15.stream();
        java.lang.CharSequence charSequence56 = charSequenceQueue15.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "hi!" + "'", charSequence56, "hi!");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue8.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence15 = charSequenceQueue8.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue8.iterator();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection17 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean18 = charSequenceQueue8.containsAll(charSequenceCollection17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceItor16);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        charSequenceQueue7.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        boolean boolean19 = charSequenceQueue15.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue15.iterator();
        charSequenceQueue15.clear();
        java.lang.Object[] objArray22 = charSequenceQueue15.toArray();
        boolean boolean23 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue15);
        java.lang.CharSequence charSequence24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = charSequenceQueue15.add(charSequence24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Attempted to add null object to queue");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        charSequenceQueue1.clear();
        boolean boolean30 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38, charSequenceArray37);
        boolean boolean40 = charSequenceQueue38.isAtFullCapacity();
        boolean boolean41 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue43.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue43.spliterator();
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue43.poll();
        boolean boolean49 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.Object[] objArray50 = charSequenceQueue43.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.String str55 = charSequenceQueue52.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue52.iterator();
        boolean boolean57 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean58 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue43);
        java.lang.String str59 = charSequenceQueue1.toString();
        int int60 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[]" + "'", str55, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.String str11 = charSequenceQueue8.toString();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) str11);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceItor14);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        boolean boolean14 = charSequenceQueue8.isAtFullCapacity();
        int int15 = charSequenceQueue8.maxSize();
        int int16 = charSequenceQueue8.size();
        boolean boolean18 = charSequenceQueue8.add((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence20 = charSequenceQueue8.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (35) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        boolean boolean9 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        boolean boolean17 = charSequenceQueue11.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue11.spliterator();
        boolean boolean19 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean21 = charSequenceQueue11.add((java.lang.CharSequence) "hi!");
        boolean boolean22 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        charSequenceQueue24.clear();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean41 = charSequenceList34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue43.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue43.spliterator();
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "");
        boolean boolean48 = charSequenceQueue43.isAtFullCapacity();
        java.lang.CharSequence charSequence49 = charSequenceQueue43.element();
        int int50 = charSequenceQueue43.size();
        boolean boolean51 = charSequenceList34.remove((java.lang.Object) charSequenceQueue43);
        boolean boolean52 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean53 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor54 = charSequenceQueue11.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence56 = charSequenceQueue11.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 3)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceItor54);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceQueue1.contains(obj10);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str2 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        boolean boolean22 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        boolean boolean30 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean31 = charSequenceQueue1.contains((java.lang.Object) charSequenceList25);
        int int32 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean42 = charSequenceQueue34.isEmpty();
        boolean boolean44 = charSequenceQueue34.remove((java.lang.Object) 10.0d);
        charSequenceQueue34.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue34.spliterator();
        boolean boolean47 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence charSequence48 = charSequenceQueue34.poll();
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "[]" + "'", str2, "[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(charSequence48);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence56 = charSequenceQueue47.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 3)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.Object[] objArray41 = charSequenceQueue38.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[hi!]");
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.stream();
        boolean boolean27 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence55 = charSequenceQueue52.peek();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList58.contains(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceList64.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean72 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean73 = charSequenceQueue52.remove((java.lang.Object) charSequenceQueue70);
        boolean boolean74 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.lang.CharSequence charSequence78 = charSequenceQueue76.peek();
        boolean boolean79 = charSequenceQueue76.isFull();
        boolean boolean80 = charSequenceQueue70.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue76.spliterator();
        charSequenceQueue76.clear();
        boolean boolean83 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.lang.CharSequence charSequence84 = charSequenceQueue1.peek();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNull(charSequence78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNull(charSequence84);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean26 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence54 = charSequenceQueue42.remove();
        boolean boolean55 = charSequenceQueue42.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean59 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean60 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        charSequenceQueue62.clear();
        boolean boolean71 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean73 = charSequenceQueue62.offer((java.lang.CharSequence) "[, hi!]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue62.parallelStream();
        boolean boolean75 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue62);
        boolean boolean76 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean77 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        int int15 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.offer((java.lang.CharSequence) "[, [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue19.parallelStream();
        boolean boolean22 = charSequenceQueue19.contains((java.lang.Object) 1.0d);
        boolean boolean23 = charSequenceQueue19.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.lang.CharSequence charSequence27 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue29);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor33 = charSequenceQueue25.iterator();
        boolean boolean34 = charSequenceQueue19.remove((java.lang.Object) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean54 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence charSequence55 = charSequenceQueue42.poll();
        java.lang.CharSequence charSequence57 = charSequenceQueue42.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65, charSequenceArray64);
        boolean boolean67 = charSequenceQueue65.isAtFullCapacity();
        boolean boolean68 = charSequenceQueue59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        boolean boolean70 = charSequenceQueue65.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int71 = charSequenceQueue65.size();
        boolean boolean72 = charSequenceQueue42.contains((java.lang.Object) charSequenceQueue65);
        java.lang.CharSequence charSequence73 = charSequenceQueue42.peek();
        boolean boolean74 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceItor33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 3 + "'", int71 == 3);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue58.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue58.spliterator();
        boolean boolean62 = charSequenceQueue58.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence63 = charSequenceQueue58.poll();
        boolean boolean65 = charSequenceQueue58.add((java.lang.CharSequence) "");
        charSequenceQueue58.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue58.stream();
        boolean boolean68 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean69 = charSequenceQueue38.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceQueue38.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.String str7 = charSequenceQueue1.toString();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        charSequenceQueue1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.String str49 = charSequenceQueue46.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue46.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue46.spliterator();
        boolean boolean52 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue54.poll();
        boolean boolean61 = charSequenceQueue54.add((java.lang.CharSequence) "");
        charSequenceQueue54.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue54.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence68 = charSequenceQueue65.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue65.parallelStream();
        boolean boolean71 = charSequenceQueue65.contains((java.lang.Object) (short) 100);
        boolean boolean72 = charSequenceQueue54.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue74.spliterator();
        java.lang.CharSequence charSequence76 = charSequenceQueue74.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        boolean boolean81 = charSequenceQueue74.contains((java.lang.Object) charSequenceQueue78);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean85 = charSequenceQueue83.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence86 = charSequenceQueue83.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceQueue83.parallelStream();
        boolean boolean89 = charSequenceQueue83.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator90 = charSequenceQueue83.spliterator();
        boolean boolean91 = charSequenceQueue74.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.CharSequence charSequence92 = charSequenceQueue83.element();
        java.lang.CharSequence charSequence93 = charSequenceQueue83.poll();
        boolean boolean94 = charSequenceQueue65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceQueue65.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream96 = charSequenceQueue65.parallelStream();
        boolean boolean97 = charSequenceList23.contains((java.lang.Object) charSequenceQueue65);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertNull(charSequence76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(charSequenceStream95);
        org.junit.Assert.assertNotNull(charSequenceStream96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        charSequenceQueue8.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray16 = charSequenceQueue13.toArray();
        boolean boolean17 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceStream18);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        charSequenceQueue10.clear();
        java.lang.Object[] objArray21 = charSequenceQueue10.toArray();
        int int22 = charSequenceQueue10.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        int int29 = charSequenceQueue19.size();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        boolean boolean10 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        charSequenceQueue16.clear();
        boolean boolean21 = charSequenceQueue16.remove((java.lang.Object) (-1.0d));
        boolean boolean22 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        int int42 = charSequenceQueue37.maxSize();
        boolean boolean43 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean45 = charSequenceQueue24.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence46 = charSequenceQueue24.remove();
        boolean boolean47 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.String str11 = charSequenceQueue8.toString();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) str11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        charSequenceQueue14.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.lang.Class<?> wildcardClass20 = charSequenceQueue14.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.Class<?> wildcardClass30 = charSequenceQueue28.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue32.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue32.spliterator();
        boolean boolean36 = charSequenceQueue32.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue32.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.lang.CharSequence charSequence41 = charSequenceQueue39.peek();
        boolean boolean42 = charSequenceQueue32.contains((java.lang.Object) charSequence41);
        java.lang.Class<?> wildcardClass43 = charSequenceQueue32.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue45.element();
        java.lang.Class<?> wildcardClass49 = charSequenceQueue45.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue51.parallelStream();
        boolean boolean54 = charSequenceQueue51.contains((java.lang.Object) 1.0d);
        boolean boolean56 = charSequenceQueue51.offer((java.lang.CharSequence) "[hi!]");
        java.lang.Class<?> wildcardClass57 = charSequenceQueue51.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean66 = charSequenceQueue59.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.Class<?> wildcardClass67 = charSequenceQueue65.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray68 = new java.lang.reflect.AnnotatedElement[] { wildcardClass20, wildcardClass30, wildcardClass43, wildcardClass49, wildcardClass57, wildcardClass67 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray69 = charSequenceQueue1.toArray(annotatedElementArray68);
        int int70 = charSequenceQueue1.size();
        java.lang.Object[] objArray71 = charSequenceQueue1.toArray();
        boolean boolean72 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue74.parallelStream();
        boolean boolean77 = charSequenceQueue74.contains((java.lang.Object) 1.0d);
        boolean boolean78 = charSequenceQueue74.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue74.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceQueue74.stream();
        boolean boolean82 = charSequenceQueue74.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence84 = charSequenceQueue74.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue74);
        java.lang.CharSequence charSequence86 = charSequenceQueue85.remove();
        boolean boolean87 = charSequenceQueue1.contains((java.lang.Object) charSequence86);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotatedElementArray68);
        org.junit.Assert.assertNotNull(annotatedElementArray69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "hi!" + "'", charSequence86, "hi!");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        boolean boolean28 = charSequenceQueue23.isFull();
        boolean boolean29 = charSequenceQueue23.isFull();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        int int31 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        boolean boolean50 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean51 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59, charSequenceArray58);
        boolean boolean61 = charSequenceQueue59.isAtFullCapacity();
        boolean boolean62 = charSequenceQueue53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceQueue64.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue64.spliterator();
        boolean boolean68 = charSequenceQueue64.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence69 = charSequenceQueue64.poll();
        boolean boolean70 = charSequenceQueue59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList74 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList74, charSequenceArray73);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79, charSequenceArray78);
        boolean boolean81 = charSequenceQueue79.isAtFullCapacity();
        boolean boolean82 = charSequenceList74.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean83 = charSequenceQueue79.isAtFullCapacity();
        int int84 = charSequenceQueue79.maxSize();
        boolean boolean85 = charSequenceQueue59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence88 = charSequenceQueue87.peek();
        boolean boolean89 = charSequenceQueue59.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue87);
        boolean boolean90 = charSequenceQueue33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.lang.CharSequence charSequence91 = charSequenceQueue59.peek();
        boolean boolean92 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        int int93 = charSequenceQueue59.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 52 + "'", int31 == 52);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 32 + "'", int84 == 32);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNull(charSequence88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNull(charSequence91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 32 + "'", int93 == 32);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean1 = charSequenceQueue0.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor2 = charSequenceQueue0.iterator();
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(charSequenceItor2);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        boolean boolean9 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceQueue16.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue16.iterator();
        boolean boolean24 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue16);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        int int38 = charSequenceQueue33.maxSize();
        int int39 = charSequenceQueue33.size();
        boolean boolean40 = charSequenceQueue9.contains((java.lang.Object) charSequenceQueue33);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2 + "'", int39 == 2);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue10.spliterator();
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue10.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue10.iterator();
        java.lang.Object[] objArray17 = charSequenceQueue10.toArray();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) objArray17);
        java.lang.CharSequence charSequence19 = charSequenceQueue1.remove();
        boolean boolean21 = charSequenceQueue1.add((java.lang.CharSequence) "[hi!]");
        java.lang.Class<?> wildcardClass22 = charSequenceQueue1.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Cloneable> cloneableQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Cloneable>((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.element();
        int int11 = charSequenceQueue1.size();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList14 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = charSequenceList14.contains(obj16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean28 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceList14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean32 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        java.lang.String str36 = charSequenceQueue34.toString();
        boolean boolean38 = charSequenceQueue34.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        charSequenceQueue42.clear();
        boolean boolean51 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray63 = charSequenceList54.toArray((java.lang.Comparable<java.lang.String>[]) strArray62);
        java.lang.Comparable<java.lang.String>[] strComparableArray64 = charSequenceQueue42.toArray((java.lang.Comparable<java.lang.String>[]) strArray62);
        boolean boolean65 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence charSequence66 = charSequenceQueue34.peek();
        boolean boolean67 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 2 + "'", int11 == 2);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[]" + "'", str36, "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strComparableArray63);
        org.junit.Assert.assertNotNull(strComparableArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(charSequence66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Iterable<java.lang.CharSequence>> charSequenceIterableQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Iterable<java.lang.CharSequence>>((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence30 = charSequenceQueue1.peek();
        int int31 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence32 = charSequenceQueue1.poll();
        java.lang.Object[] objArray33 = charSequenceQueue1.toArray();
        boolean boolean35 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceQueue1.get((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (10) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceQueue27.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean34 = charSequenceQueue27.contains((java.lang.Object) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue36.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue36.parallelStream();
        boolean boolean42 = charSequenceQueue36.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue36.spliterator();
        boolean boolean44 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.isFull();
        java.lang.CharSequence charSequence46 = charSequenceQueue36.peek();
        int int47 = charSequenceQueue36.maxSize();
        boolean boolean48 = charSequenceQueue20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean49 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue1.iterator();
        boolean boolean51 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        int int7 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18, charSequenceArray17);
        boolean boolean20 = charSequenceQueue18.isAtFullCapacity();
        boolean boolean21 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue23.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue23.spliterator();
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue23.poll();
        boolean boolean29 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence charSequence30 = charSequenceQueue18.remove();
        boolean boolean31 = charSequenceQueue18.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue33.parallelStream();
        boolean boolean35 = charSequenceQueue18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue33.iterator();
        boolean boolean37 = charSequenceQueue9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        boolean boolean52 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue53.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue57.spliterator();
        java.lang.CharSequence charSequence59 = charSequenceQueue57.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        boolean boolean64 = charSequenceQueue57.contains((java.lang.Object) charSequenceQueue61);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceQueue57.iterator();
        boolean boolean66 = charSequenceQueue53.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        int int67 = charSequenceQueue57.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor68 = charSequenceQueue57.iterator();
        boolean boolean69 = charSequenceQueue33.remove((java.lang.Object) charSequenceItor68);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue33.parallelStream();
        boolean boolean71 = charSequenceQueue33.isFull();
        boolean boolean72 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence73 = charSequenceQueue1.remove();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertNull(charSequence59);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        int int9 = charSequenceQueue1.size();
        boolean boolean10 = charSequenceQueue1.isFull();
        boolean boolean11 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue25.poll();
        boolean boolean31 = charSequenceQueue20.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence32 = charSequenceQueue20.remove();
        boolean boolean33 = charSequenceQueue20.isFull();
        java.lang.String str34 = charSequenceQueue20.toString();
        int int35 = charSequenceQueue20.maxSize();
        java.lang.CharSequence charSequence37 = charSequenceQueue20.get((int) (byte) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean39 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.peek();
        boolean boolean45 = charSequenceQueue41.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue41.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceQueue50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue61.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue61.spliterator();
        boolean boolean65 = charSequenceQueue61.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence66 = charSequenceQueue61.poll();
        boolean boolean67 = charSequenceQueue56.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence68 = charSequenceQueue56.remove();
        boolean boolean69 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean70 = charSequenceQueue41.contains((java.lang.Object) charSequenceQueue48);
        java.lang.CharSequence charSequence71 = charSequenceQueue48.poll();
        boolean boolean72 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        charSequenceQueue48.clear();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[]" + "'", str34, "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 32 + "'", int35 == 32);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue7.stream();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        boolean boolean52 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        boolean boolean54 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean69 = charSequenceQueue63.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence70 = charSequenceQueue63.element();
        boolean boolean71 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence72 = charSequenceQueue7.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.String str41 = charSequenceList37.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue47.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue15.isFull();
        int int21 = charSequenceQueue15.maxSize();
        int int22 = charSequenceQueue15.maxSize();
        boolean boolean24 = charSequenceQueue15.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean25 = charSequenceQueue15.isFull();
        charSequenceQueue15.clear();
        boolean boolean27 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue15);
        charSequenceQueue15.clear();
        boolean boolean30 = charSequenceQueue15.offer((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "[hi!]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        boolean boolean4 = charSequenceQueue2.isFull();
        java.lang.CharSequence charSequence5 = charSequenceQueue2.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.element();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue23.isAtFullCapacity();
        boolean boolean26 = charSequenceList18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean27 = charSequenceList13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean28 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        boolean boolean43 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue44.stream();
        boolean boolean46 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence47 = charSequenceQueue44.element();
        java.lang.CharSequence charSequence48 = charSequenceQueue44.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue44.spliterator();
        boolean boolean50 = charSequenceQueue2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence51 = charSequenceQueue2.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "[hi!]" + "'", charSequence5, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "hi!" + "'", charSequence48, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "[hi!]" + "'", charSequence51, "[hi!]");
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        boolean boolean36 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44, charSequenceArray43);
        boolean boolean46 = charSequenceQueue44.isAtFullCapacity();
        boolean boolean47 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue49.spliterator();
        boolean boolean53 = charSequenceQueue49.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence54 = charSequenceQueue49.poll();
        boolean boolean55 = charSequenceQueue44.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        java.lang.CharSequence charSequence56 = charSequenceQueue44.remove();
        boolean boolean57 = charSequenceQueue44.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue59.parallelStream();
        boolean boolean61 = charSequenceQueue44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean62 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean63 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue59);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue59.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence69 = charSequenceQueue66.element();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList77 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82, charSequenceArray81);
        boolean boolean84 = charSequenceQueue82.isAtFullCapacity();
        boolean boolean85 = charSequenceList77.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        boolean boolean86 = charSequenceList72.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        boolean boolean87 = charSequenceQueue66.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        java.lang.Object obj88 = null;
        boolean boolean89 = charSequenceList77.remove(obj88);
        boolean boolean90 = charSequenceQueue59.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        boolean boolean92 = charSequenceQueue59.offer((java.lang.CharSequence) "[[hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue17.spliterator();
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue17.poll();
        boolean boolean24 = charSequenceQueue17.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceQueue26.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue17.remove((java.lang.Object) boolean27);
        int int29 = charSequenceQueue17.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(52);
        boolean boolean32 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean33 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.lang.CharSequence charSequence37 = charSequenceQueue35.peek();
        java.lang.CharSequence charSequence38 = charSequenceQueue35.poll();
        boolean boolean39 = charSequenceQueue35.isFull();
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        java.lang.CharSequence charSequence41 = charSequenceQueue35.poll();
        boolean boolean43 = charSequenceQueue35.add((java.lang.CharSequence) "[, ]");
        boolean boolean45 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue35.remove();
        int int47 = charSequenceQueue35.size();
        boolean boolean48 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "[, ]" + "'", charSequence46, "[, ]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 1 + "'", int47 == 1);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence16 = charSequenceQueue9.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.String str21 = charSequenceQueue18.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceQueue18.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue18.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor24 = charSequenceQueue18.iterator();
        boolean boolean25 = charSequenceQueue18.isEmpty();
        boolean boolean26 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        int int27 = charSequenceQueue15.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertNotNull(charSequenceItor24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        boolean boolean48 = charSequenceQueue45.contains((java.lang.Object) 1.0d);
        boolean boolean49 = charSequenceQueue45.isFull();
        boolean boolean50 = charSequenceQueue45.isFull();
        int int51 = charSequenceQueue45.maxSize();
        int int52 = charSequenceQueue45.maxSize();
        java.lang.CharSequence charSequence53 = charSequenceQueue45.peek();
        boolean boolean54 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue56.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue56.spliterator();
        boolean boolean60 = charSequenceQueue56.add((java.lang.CharSequence) "");
        boolean boolean61 = charSequenceQueue56.isAtFullCapacity();
        charSequenceQueue56.clear();
        boolean boolean63 = charSequenceQueue38.remove((java.lang.Object) charSequenceQueue56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue38.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceStream64);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.String str13 = charSequenceQueue8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        int int18 = charSequenceQueue15.maxSize();
        boolean boolean19 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = charSequenceQueue15.offer(charSequence20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Attempted to add null object to queue");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean30 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        java.lang.CharSequence charSequence31 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence32 = charSequenceQueue8.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence55 = charSequenceQueue43.remove();
        boolean boolean56 = charSequenceQueue43.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue58.parallelStream();
        boolean boolean60 = charSequenceQueue43.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue58.iterator();
        boolean boolean62 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean63 = charSequenceQueue34.isEmpty();
        boolean boolean64 = charSequenceQueue34.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        boolean boolean70 = charSequenceQueue66.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence71 = charSequenceQueue66.element();
        boolean boolean72 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean73 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        int int32 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        int int37 = charSequenceQueue34.maxSize();
        int int38 = charSequenceQueue34.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue40.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isEmpty();
        boolean boolean52 = charSequenceQueue40.remove((java.lang.Object) boolean51);
        boolean boolean54 = charSequenceQueue40.add((java.lang.CharSequence) "[]");
        boolean boolean55 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean56 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue40);
        java.lang.CharSequence charSequence57 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue1.iterator();
        boolean boolean15 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean16 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue1.stream();
        int int18 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceList25.toArray((java.lang.Comparable<java.lang.String>[]) strArray33);
        java.lang.String[] strArray35 = charSequenceQueue1.toArray(strArray33);
        java.lang.CharSequence charSequence36 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList44.contains(obj46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList50.contains(obj52);
        java.lang.String str54 = charSequenceList50.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceList50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean58 = charSequenceList44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean59 = charSequenceQueue38.remove((java.lang.Object) charSequenceQueue56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        boolean boolean61 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue56);
        boolean boolean62 = charSequenceQueue56.isFull();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        int int32 = charSequenceQueue1.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream33);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        boolean boolean10 = charSequenceQueue6.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue6.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean14 = charSequenceQueue6.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceQueue6.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue17.isEmpty();
        boolean boolean26 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean28 = charSequenceQueue6.add((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue6);
        boolean boolean31 = charSequenceQueue1.add((java.lang.CharSequence) "[[, ]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        boolean boolean11 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue27.spliterator();
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue27.poll();
        boolean boolean33 = charSequenceQueue22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence charSequence34 = charSequenceQueue22.remove();
        boolean boolean35 = charSequenceQueue22.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue37.parallelStream();
        boolean boolean39 = charSequenceQueue22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        int int40 = charSequenceQueue22.maxSize();
        java.lang.CharSequence charSequence41 = charSequenceQueue22.poll();
        int int42 = charSequenceQueue22.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        int int47 = charSequenceQueue44.maxSize();
        int int48 = charSequenceQueue44.maxSize();
        boolean boolean49 = charSequenceQueue22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.CharSequence charSequence69 = charSequenceQueue57.remove();
        boolean boolean70 = charSequenceQueue57.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue72.parallelStream();
        boolean boolean74 = charSequenceQueue57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceQueue72.iterator();
        boolean boolean76 = charSequenceQueue22.contains((java.lang.Object) charSequenceQueue72);
        boolean boolean77 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean78 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.lang.CharSequence charSequence79 = charSequenceQueue22.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 32 + "'", int42 == 32);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 10 + "'", int48 == 10);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceItor75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "" + "'", charSequence79, "");
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        charSequenceQueue10.clear();
        java.lang.Object[] objArray21 = charSequenceQueue10.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence2 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence7 = charSequenceQueue4.element();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean25 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        boolean boolean43 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.lang.CharSequence charSequence45 = charSequenceQueue41.peek();
        java.lang.String str46 = charSequenceQueue41.toString();
        boolean boolean47 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean49 = charSequenceQueue41.add((java.lang.CharSequence) "[[hi!]]");
        boolean boolean51 = charSequenceQueue41.offer((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertNull(charSequence2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str8 = charSequenceQueue7.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        boolean boolean36 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        boolean boolean37 = charSequenceQueue7.contains((java.lang.Object) charSequenceList31);
        boolean boolean38 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceList31.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        int int14 = charSequenceQueue1.size();
        java.lang.String str15 = charSequenceQueue1.toString();
        int int16 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence17 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue19.parallelStream();
        boolean boolean22 = charSequenceQueue19.contains((java.lang.Object) 1.0d);
        boolean boolean23 = charSequenceQueue19.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        boolean boolean26 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        int int27 = charSequenceQueue19.maxSize();
        java.lang.CharSequence charSequence28 = charSequenceQueue19.element();
        charSequenceQueue19.clear();
        boolean boolean30 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int7 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "hi!" + "'", charSequence10, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13, charSequenceArray12);
        boolean boolean15 = charSequenceQueue13.isAtFullCapacity();
        boolean boolean16 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue18.spliterator();
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence23 = charSequenceQueue18.poll();
        boolean boolean24 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence charSequence25 = charSequenceQueue13.remove();
        boolean boolean26 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray38 = charSequenceList29.toArray((java.lang.Comparable<java.lang.String>[]) strArray37);
        java.lang.String[] strArray39 = charSequenceQueue5.toArray(strArray37);
        java.lang.String[] strArray40 = charSequenceQueue1.toArray(strArray39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue1.parallelStream();
        java.lang.Class<?> wildcardClass42 = charSequenceStream41.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strComparableArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList19.contains(obj21);
        java.lang.String str23 = charSequenceList19.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceList19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.Object[] objArray27 = charSequenceQueue25.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean36 = charSequenceQueue29.add((java.lang.CharSequence) "");
        charSequenceQueue29.clear();
        boolean boolean38 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean39 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence40 = charSequenceQueue29.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!]" + "'", str23, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(charSequence40);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        int int29 = charSequenceQueue19.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue19.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceQueue19.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor30);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        int int19 = charSequenceQueue17.maxSize();
        boolean boolean20 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence charSequence22 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.remove();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceStream12);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int60 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue1.spliterator();
        boolean boolean62 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean66 = charSequenceQueue64.offer((java.lang.CharSequence) "");
        java.lang.String str67 = charSequenceQueue64.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor68 = charSequenceQueue64.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue64.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor70 = charSequenceQueue64.iterator();
        boolean boolean71 = charSequenceQueue64.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor72 = charSequenceQueue64.iterator();
        boolean boolean73 = charSequenceQueue64.isEmpty();
        boolean boolean74 = charSequenceQueue1.contains((java.lang.Object) boolean73);
        java.lang.CharSequence charSequence75 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor68);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertNotNull(charSequenceItor70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceItor72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        boolean boolean9 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue11.parallelStream();
        boolean boolean14 = charSequenceQueue11.contains((java.lang.Object) 1.0d);
        boolean boolean15 = charSequenceQueue11.isFull();
        boolean boolean16 = charSequenceQueue11.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.String str21 = charSequenceQueue18.toString();
        boolean boolean22 = charSequenceQueue11.remove((java.lang.Object) str21);
        java.lang.Object[] objArray23 = charSequenceQueue11.toArray();
        java.lang.Object[] objArray24 = charSequenceQueue11.toArray();
        boolean boolean25 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue11.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertNotNull(objArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray24), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray24), "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor12 = charSequenceQueue11.iterator();
        java.lang.String str13 = charSequenceQueue11.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[, , [, ]]" + "'", str13, "[, , [, ]]");
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue50.iterator();
        java.lang.Object[] objArray58 = charSequenceQueue50.toArray();
        boolean boolean59 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence61 = charSequenceQueue1.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        charSequenceQueue30.clear();
        boolean boolean35 = charSequenceQueue30.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean42 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.String str43 = charSequenceList39.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList39.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue48.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        charSequenceQueue48.clear();
        boolean boolean57 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue46.spliterator();
        boolean boolean59 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.Object[] objArray60 = charSequenceQueue46.toArray();
        java.lang.CharSequence charSequence61 = charSequenceQueue46.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[[hi!], [hi!]]" + "'", str43, "[[hi!], [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNull(charSequence61);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        charSequenceQueue11.clear();
        boolean boolean16 = charSequenceQueue11.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence35 = charSequenceQueue31.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue31.parallelStream();
        boolean boolean37 = charSequenceQueue11.contains((java.lang.Object) charSequenceStream36);
        java.lang.CharSequence charSequence38 = charSequenceQueue11.peek();
        boolean boolean39 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue11);
        java.lang.String str40 = charSequenceQueue1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[]" + "'", str40, "[]");
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        int int32 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        int int37 = charSequenceQueue34.maxSize();
        int int38 = charSequenceQueue34.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue40.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isEmpty();
        boolean boolean52 = charSequenceQueue40.remove((java.lang.Object) boolean51);
        boolean boolean54 = charSequenceQueue40.add((java.lang.CharSequence) "[]");
        boolean boolean55 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean56 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue40);
        java.lang.CharSequence charSequence57 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence58 = charSequenceQueue1.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10 + "'", int37 == 10);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "[[hi!], [hi!]]", "hi!", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue23.isEmpty();
        boolean boolean26 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32, charSequenceArray31);
        boolean boolean34 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean35 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean37 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean38 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.Object[] objArray39 = charSequenceQueue11.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        boolean boolean46 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.String str47 = charSequenceQueue11.toString();
        boolean boolean48 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.lang.CharSequence charSequence49 = charSequenceQueue11.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(charSequence49);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean32 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence charSequence34 = charSequenceQueue1.poll();
        java.lang.String str35 = charSequenceQueue1.toString();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        charSequenceQueue8.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue13.parallelStream();
        boolean boolean16 = charSequenceQueue13.contains((java.lang.Object) 1.0d);
        boolean boolean17 = charSequenceQueue13.isFull();
        boolean boolean18 = charSequenceQueue13.isFull();
        int int19 = charSequenceQueue13.maxSize();
        int int20 = charSequenceQueue13.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue22.stream();
        boolean boolean33 = charSequenceQueue13.contains((java.lang.Object) charSequenceStream32);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue13.spliterator();
        boolean boolean35 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.Object[] objArray36 = charSequenceQueue8.toArray();
        java.lang.CharSequence charSequence37 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 52 + "'", int19 == 52);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 52 + "'", int20 == 52);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertNull(charSequence37);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        int int22 = charSequenceQueue7.maxSize();
        java.lang.String str23 = charSequenceQueue7.toString();
        java.lang.String str24 = charSequenceQueue7.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[]" + "'", str23, "[]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[]" + "'", str24, "[]");
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean30 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        int int31 = charSequenceQueue8.size();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean47 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean48 = charSequenceList34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean51 = charSequenceList34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList60 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = charSequenceList60.contains(obj62);
        java.lang.String str64 = charSequenceList60.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean67 = charSequenceList60.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean68 = charSequenceList54.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceList54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean72 = charSequenceQueue50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence73 = charSequenceQueue70.poll();
        boolean boolean74 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue8.stream();
        boolean boolean77 = charSequenceQueue8.offer((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!]" + "'", str64, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(charSequence73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        int int14 = charSequenceQueue1.size();
        java.lang.String str15 = charSequenceQueue1.toString();
        int int16 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence17 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue19.parallelStream();
        boolean boolean22 = charSequenceQueue19.contains((java.lang.Object) 1.0d);
        boolean boolean23 = charSequenceQueue19.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        boolean boolean26 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        int int27 = charSequenceQueue19.maxSize();
        java.lang.CharSequence charSequence28 = charSequenceQueue19.element();
        charSequenceQueue19.clear();
        boolean boolean30 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceQueue19.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList21 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.lang.Object obj23 = null;
        boolean boolean24 = charSequenceList21.contains(obj23);
        java.lang.String str25 = charSequenceList21.toString();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        boolean boolean33 = charSequenceList21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "hi!");
        int int40 = charSequenceQueue35.maxSize();
        boolean boolean41 = charSequenceList21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceList21.remove((java.lang.Object) charSequenceQueue43);
        boolean boolean53 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceList21.stream();
        java.lang.Class<?> wildcardClass55 = charSequenceStream54.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[hi!]" + "'", str25, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 52 + "'", int40 == 52);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 10);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        java.lang.Class<?> wildcardClass3 = charSequenceStream2.getClass();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        charSequenceQueue1.clear();
        boolean boolean34 = charSequenceQueue1.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.String str11 = charSequenceQueue8.toString();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) str11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        charSequenceQueue14.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.lang.Class<?> wildcardClass20 = charSequenceQueue14.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.Class<?> wildcardClass30 = charSequenceQueue28.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue32.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue32.spliterator();
        boolean boolean36 = charSequenceQueue32.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue32.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.lang.CharSequence charSequence41 = charSequenceQueue39.peek();
        boolean boolean42 = charSequenceQueue32.contains((java.lang.Object) charSequence41);
        java.lang.Class<?> wildcardClass43 = charSequenceQueue32.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue45.element();
        java.lang.Class<?> wildcardClass49 = charSequenceQueue45.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue51.parallelStream();
        boolean boolean54 = charSequenceQueue51.contains((java.lang.Object) 1.0d);
        boolean boolean56 = charSequenceQueue51.offer((java.lang.CharSequence) "[hi!]");
        java.lang.Class<?> wildcardClass57 = charSequenceQueue51.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean66 = charSequenceQueue59.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.Class<?> wildcardClass67 = charSequenceQueue65.getClass();
        java.lang.reflect.AnnotatedElement[] annotatedElementArray68 = new java.lang.reflect.AnnotatedElement[] { wildcardClass20, wildcardClass30, wildcardClass43, wildcardClass49, wildcardClass57, wildcardClass67 };
        java.lang.reflect.AnnotatedElement[] annotatedElementArray69 = charSequenceQueue1.toArray(annotatedElementArray68);
        boolean boolean70 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(annotatedElementArray68);
        org.junit.Assert.assertNotNull(annotatedElementArray69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        int int5 = charSequenceQueue1.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue8.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue8.spliterator();
        boolean boolean12 = charSequenceQueue8.add((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue8.isFull();
        boolean boolean15 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean16 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue18.parallelStream();
        boolean boolean21 = charSequenceQueue18.contains((java.lang.Object) 1.0d);
        boolean boolean22 = charSequenceQueue18.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue24.spliterator();
        java.lang.CharSequence charSequence26 = charSequenceQueue24.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue33.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue33.parallelStream();
        boolean boolean39 = charSequenceQueue33.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue33.spliterator();
        boolean boolean41 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence42 = charSequenceQueue33.poll();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        int int47 = charSequenceQueue45.maxSize();
        boolean boolean48 = charSequenceQueue45.isFull();
        java.lang.String str49 = charSequenceQueue45.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.util.Queue[] queueArray70 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray71 = (java.util.Queue<java.lang.CharSequence>[]) queueArray70;
        charSequenceQueueArray71[0] = charSequenceQueue45;
        charSequenceQueueArray71[1] = charSequenceQueue62;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray76 = charSequenceQueue33.toArray(charSequenceQueueArray71);
        java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray77 = charSequenceQueue18.toArray((java.lang.Iterable<java.lang.CharSequence>[]) charSequenceQueueArray76);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray78 = charSequenceQueue8.toArray((java.lang.Iterable<java.lang.CharSequence>[]) charSequenceQueueArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNull(charSequence26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(queueArray70);
        org.junit.Assert.assertNotNull(charSequenceQueueArray71);
        org.junit.Assert.assertNotNull(charSequenceQueueArray76);
        org.junit.Assert.assertNotNull(charSequenceIterableArray77);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        java.lang.CharSequence charSequence17 = charSequenceQueue7.poll();
        boolean boolean18 = charSequenceQueue7.isEmpty();
        boolean boolean20 = charSequenceQueue7.offer((java.lang.CharSequence) "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        boolean boolean64 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean66 = charSequenceQueue45.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean67 = charSequenceList6.remove((java.lang.Object) charSequenceQueue45);
        java.lang.Class<?> wildcardClass68 = charSequenceQueue45.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean35 = charSequenceQueue31.isAtFullCapacity();
        java.lang.Object[] objArray36 = charSequenceQueue31.toArray();
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) false);
        boolean boolean39 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceList43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence52 = charSequenceQueue48.poll();
        boolean boolean53 = charSequenceQueue48.isAtFullCapacity();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.element();
        charSequenceQueue48.clear();
        boolean boolean56 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence57 = charSequenceQueue1.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        int int24 = charSequenceQueue22.maxSize();
        boolean boolean25 = charSequenceQueue22.isFull();
        java.lang.String str26 = charSequenceQueue22.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Queue[] queueArray47 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray48 = (java.util.Queue<java.lang.CharSequence>[]) queueArray47;
        charSequenceQueueArray48[0] = charSequenceQueue22;
        charSequenceQueueArray48[1] = charSequenceQueue39;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray53 = charSequenceQueue10.toArray(charSequenceQueueArray48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue10.stream();
        java.lang.Object[] objArray55 = charSequenceQueue10.toArray();
        java.lang.CharSequence charSequence56 = charSequenceQueue10.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass57 = charSequence56.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(queueArray47);
        org.junit.Assert.assertNotNull(charSequenceQueueArray48);
        org.junit.Assert.assertNotNull(charSequenceQueueArray53);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNull(charSequence56);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        boolean boolean64 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean66 = charSequenceQueue45.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean67 = charSequenceList6.remove((java.lang.Object) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object> objQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean82 = charSequenceQueue69.offer((java.lang.CharSequence) "[hi!]");
        int int83 = charSequenceQueue69.size();
        boolean boolean85 = charSequenceQueue69.offer((java.lang.CharSequence) "[[, , , hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 2 + "'", int83 == 2);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList33.contains(obj35);
        java.lang.String str37 = charSequenceList33.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean40 = charSequenceList33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean41 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceList27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean45 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue23.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue23.iterator();
        boolean boolean48 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue23);
        boolean boolean49 = charSequenceQueue23.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence50 = charSequenceQueue23.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!]" + "'", str37, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceQueue6.spliterator();
        java.lang.CharSequence charSequence8 = charSequenceQueue6.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue6.contains((java.lang.Object) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        boolean boolean23 = charSequenceQueue6.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence24 = charSequenceQueue15.poll();
        int int25 = charSequenceQueue15.size();
        boolean boolean26 = charSequenceQueue1.contains((java.lang.Object) int25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        charSequenceQueue28.clear();
        int int32 = charSequenceQueue28.size();
        boolean boolean33 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.String str34 = charSequenceQueue28.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
        org.junit.Assert.assertNull(charSequence8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[]" + "'", str34, "[]");
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        int int48 = charSequenceQueue47.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2 + "'", int48 == 2);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue15.isAtFullCapacity();
        int int21 = charSequenceQueue15.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.stream();
        boolean boolean29 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.stream();
        boolean boolean33 = charSequenceQueue23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue35.parallelStream();
        charSequenceQueue35.clear();
        java.lang.CharSequence charSequence41 = charSequenceQueue35.peek();
        boolean boolean43 = charSequenceQueue35.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence44 = charSequenceQueue35.remove();
        boolean boolean45 = charSequenceQueue23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean46 = charSequenceQueue7.remove((java.lang.Object) charSequenceQueue23);
        java.lang.CharSequence charSequence47 = charSequenceQueue23.peek();
        java.lang.String str48 = charSequenceQueue23.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "[, hi!]" + "'", charSequence44, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[, hi!]" + "'", str48, "[, hi!]");
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        int int14 = charSequenceQueue1.size();
        java.lang.String str15 = charSequenceQueue1.toString();
        int int16 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence17 = charSequenceQueue1.poll();
        int int18 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 100 + "'", int18 == 100);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean66 = charSequenceQueue64.offer((java.lang.CharSequence) "");
        java.lang.String str67 = charSequenceQueue64.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor68 = charSequenceQueue64.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue64.spliterator();
        boolean boolean70 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        java.lang.CharSequence charSequence71 = charSequenceQueue64.peek();
        int int72 = charSequenceQueue64.maxSize();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        charSequenceQueue1.clear();
        int int33 = charSequenceQueue1.size();
        java.lang.Object[] objArray34 = charSequenceQueue1.toArray();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean47 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean48 = charSequenceQueue43.isEmpty();
        boolean boolean49 = charSequenceQueue1.contains((java.lang.Object) boolean48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceStream50);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        java.lang.String str3 = charSequenceQueue1.toString();
        boolean boolean5 = charSequenceQueue1.contains((java.lang.Object) 10.0d);
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean2 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue4.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue13.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceQueue13.isEmpty();
        java.lang.CharSequence charSequence22 = charSequenceQueue13.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean32 = charSequenceQueue24.isEmpty();
        boolean boolean33 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue4.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        boolean boolean35 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue4);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        boolean boolean40 = charSequenceQueue37.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue48.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        charSequenceQueue48.clear();
        int int55 = charSequenceQueue48.maxSize();
        boolean boolean56 = charSequenceQueue37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence57 = charSequenceQueue48.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.String str62 = charSequenceQueue59.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue59.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue59.parallelStream();
        boolean boolean65 = charSequenceQueue48.remove((java.lang.Object) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        charSequenceQueue68.clear();
        java.lang.CharSequence charSequence72 = charSequenceQueue68.peek();
        boolean boolean73 = charSequenceQueue59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean79 = charSequenceQueue77.offer((java.lang.CharSequence) "");
        boolean boolean81 = charSequenceQueue77.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean84 = charSequenceQueue77.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        charSequenceQueue77.clear();
        boolean boolean86 = charSequenceQueue75.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue88 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream89 = charSequenceQueue88.parallelStream();
        boolean boolean91 = charSequenceQueue88.contains((java.lang.Object) 1.0d);
        boolean boolean92 = charSequenceQueue88.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream93 = charSequenceQueue88.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream94 = charSequenceQueue88.stream();
        boolean boolean96 = charSequenceQueue88.add((java.lang.CharSequence) "hi!");
        boolean boolean97 = charSequenceQueue75.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue88);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue98 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean99 = charSequenceQueue68.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue98);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(charSequence72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(charSequenceStream93);
        org.junit.Assert.assertNotNull(charSequenceStream94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + true + "'", boolean97 == true);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        charSequenceQueue30.clear();
        boolean boolean35 = charSequenceQueue30.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.CharSequence charSequence54 = charSequenceQueue50.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue50.parallelStream();
        boolean boolean56 = charSequenceQueue30.contains((java.lang.Object) charSequenceStream55);
        java.lang.CharSequence charSequence57 = charSequenceQueue30.peek();
        boolean boolean58 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue30.iterator();
        charSequenceQueue30.clear();
        boolean boolean62 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(charSequence57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean54 = charSequenceQueue42.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean55 = charSequenceQueue42.isFull();
        java.lang.Class<?> wildcardClass56 = charSequenceQueue42.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        boolean boolean21 = charSequenceQueue7.isFull();
        java.lang.CharSequence charSequence22 = charSequenceQueue7.poll();
        boolean boolean23 = charSequenceQueue7.isEmpty();
        boolean boolean24 = charSequenceQueue7.isEmpty();
        boolean boolean26 = charSequenceQueue7.add((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence8 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNull(charSequence7);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean63 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.lang.CharSequence charSequence64 = charSequenceQueue52.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue1.spliterator();
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceQueue1.contains(obj10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        boolean boolean24 = charSequenceQueue3.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue3.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean38 = charSequenceQueue33.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean39 = charSequenceQueue33.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.parallelStream();
        boolean boolean47 = charSequenceQueue41.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue41.element();
        boolean boolean50 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean51 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue53.parallelStream();
        boolean boolean56 = charSequenceQueue53.contains((java.lang.Object) 1.0d);
        boolean boolean57 = charSequenceQueue53.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue53.stream();
        boolean boolean61 = charSequenceQueue53.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence63 = charSequenceQueue53.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean65 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue73.isAtFullCapacity();
        boolean boolean76 = charSequenceQueue67.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean78 = charSequenceQueue73.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean79 = charSequenceQueue73.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean83 = charSequenceQueue81.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue81.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceQueue81.parallelStream();
        boolean boolean87 = charSequenceQueue81.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceQueue81.spliterator();
        java.lang.CharSequence charSequence89 = charSequenceQueue81.element();
        boolean boolean90 = charSequenceQueue73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceQueue81.stream();
        java.lang.CharSequence charSequence92 = charSequenceQueue81.remove();
        boolean boolean93 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor94 = charSequenceQueue3.iterator();
        java.lang.Object[] objArray95 = charSequenceQueue3.toArray();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(charSequenceItor94);
        org.junit.Assert.assertNotNull(objArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray95), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray95), "[, ]");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.Object[] objArray10 = charSequenceQueue8.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence15 = charSequenceQueue12.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue17.element();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean39 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.Object[] objArray40 = charSequenceQueue12.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence44 = charSequenceQueue42.peek();
        boolean boolean45 = charSequenceQueue42.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.stream();
        boolean boolean47 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.String str48 = charSequenceQueue12.toString();
        boolean boolean49 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence50 = charSequenceQueue12.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(charSequence50);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue9.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue9.iterator();
        boolean boolean16 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue1.clear();
        boolean boolean18 = charSequenceQueue1.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceStream19);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.stream();
        java.lang.String str31 = charSequenceQueue29.toString();
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue40.iterator();
        boolean boolean49 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        java.lang.CharSequence charSequence72 = charSequenceQueue57.get((int) (short) 0);
        boolean boolean73 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean76 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean77 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor79 = charSequenceQueue7.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceItor79);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        boolean boolean60 = charSequenceQueue1.isFull();
        int int61 = charSequenceQueue1.size();
        boolean boolean62 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str65 = charSequenceQueue64.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = charSequenceList72.contains(obj74);
        java.lang.String str76 = charSequenceList72.toString();
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList79 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.lang.Object obj81 = null;
        boolean boolean82 = charSequenceList79.contains(obj81);
        java.lang.String str83 = charSequenceList79.toString();
        boolean boolean84 = charSequenceList72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79);
        boolean boolean85 = charSequenceQueue67.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.lang.CharSequence[] charSequenceArray87 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList88 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88, charSequenceArray87);
        java.lang.Object obj90 = null;
        boolean boolean91 = charSequenceList88.contains(obj90);
        java.lang.String str92 = charSequenceList88.toString();
        boolean boolean93 = charSequenceQueue67.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        boolean boolean94 = charSequenceQueue64.contains((java.lang.Object) charSequenceList88);
        boolean boolean95 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList88);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[hi!]" + "'", str76, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[hi!]" + "'", str83, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charSequenceArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "[hi!]" + "'", str92, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceStream9);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.String str29 = charSequenceQueue24.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue24.parallelStream();
        boolean boolean31 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.add((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        int int39 = charSequenceQueue36.maxSize();
        int int40 = charSequenceQueue36.maxSize();
        java.lang.Class<?> wildcardClass41 = charSequenceQueue36.getClass();
        boolean boolean42 = charSequenceQueue24.remove((java.lang.Object) wildcardClass41);
        int int43 = charSequenceQueue24.maxSize();
        boolean boolean44 = charSequenceQueue10.contains((java.lang.Object) charSequenceQueue24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[, ]" + "'", str29, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.element();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean32 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.lang.CharSequence charSequence37 = charSequenceQueue35.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        boolean boolean42 = charSequenceQueue35.contains((java.lang.Object) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue44.parallelStream();
        boolean boolean50 = charSequenceQueue44.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue44.spliterator();
        boolean boolean52 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence53 = charSequenceQueue44.poll();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        int int58 = charSequenceQueue56.maxSize();
        boolean boolean59 = charSequenceQueue56.isFull();
        java.lang.String str60 = charSequenceQueue56.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68, charSequenceArray67);
        boolean boolean70 = charSequenceQueue68.isAtFullCapacity();
        boolean boolean71 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue73.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue73.spliterator();
        boolean boolean77 = charSequenceQueue73.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence78 = charSequenceQueue73.poll();
        boolean boolean79 = charSequenceQueue68.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        java.util.Queue[] queueArray81 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray82 = (java.util.Queue<java.lang.CharSequence>[]) queueArray81;
        charSequenceQueueArray82[0] = charSequenceQueue56;
        charSequenceQueueArray82[1] = charSequenceQueue73;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray87 = charSequenceQueue44.toArray(charSequenceQueueArray82);
        java.util.Collection<java.lang.CharSequence>[] charSequenceCollectionArray88 = charSequenceQueue1.toArray((java.util.Collection<java.lang.CharSequence>[]) charSequenceQueueArray87);
        java.lang.Object[] objArray89 = charSequenceQueue1.toArray();
        java.lang.String str90 = charSequenceQueue1.toString();
        int int91 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[]" + "'", str60, "[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "" + "'", charSequence78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(queueArray81);
        org.junit.Assert.assertNotNull(charSequenceQueueArray82);
        org.junit.Assert.assertNotNull(charSequenceQueueArray87);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray88);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[]" + "'", str90, "[]");
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        boolean boolean29 = charSequenceQueue24.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence31 = charSequenceQueue24.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue32.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean42 = charSequenceQueue35.add((java.lang.CharSequence) "");
        charSequenceQueue35.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue35.stream();
        charSequenceQueue35.clear();
        boolean boolean46 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean47 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue24.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceStream48);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        int int12 = charSequenceQueue7.size();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        boolean boolean14 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = charSequenceList51.contains(obj53);
        java.lang.String str55 = charSequenceList51.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean58 = charSequenceList51.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean59 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean60 = charSequenceQueue39.remove((java.lang.Object) charSequenceQueue57);
        boolean boolean61 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        boolean boolean66 = charSequenceQueue63.isFull();
        boolean boolean67 = charSequenceQueue57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue63.spliterator();
        boolean boolean69 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        int int70 = charSequenceQueue63.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!]" + "'", str55, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence40 = charSequenceQueue33.element();
        boolean boolean41 = charSequenceQueue33.isEmpty();
        boolean boolean42 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean43 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(52);
        boolean boolean62 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.Object[] objArray63 = charSequenceQueue61.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor64 = charSequenceQueue61.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor64);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.element();
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        int int20 = charSequenceQueue14.size();
        charSequenceQueue14.clear();
        java.lang.Class<?> wildcardClass22 = charSequenceQueue14.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.String str13 = charSequenceQueue8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        int int18 = charSequenceQueue15.maxSize();
        boolean boolean19 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence20 = charSequenceQueue15.remove();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        boolean boolean64 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean66 = charSequenceQueue45.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean67 = charSequenceList6.remove((java.lang.Object) charSequenceQueue45);
        boolean boolean68 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean69 = charSequenceQueue45.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceQueue45.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence71 = charSequenceQueue45.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue8.iterator();
        boolean boolean14 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue8);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        boolean boolean44 = charSequenceQueue39.add((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.lang.CharSequence charSequence46 = charSequenceQueue39.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue39.iterator();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceList51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.CharSequence charSequence60 = charSequenceQueue56.poll();
        boolean boolean61 = charSequenceQueue56.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        boolean boolean76 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList80 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85, charSequenceArray84);
        boolean boolean87 = charSequenceQueue85.isAtFullCapacity();
        boolean boolean88 = charSequenceList80.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean89 = charSequenceQueue85.isAtFullCapacity();
        boolean boolean90 = charSequenceQueue85.isAtFullCapacity();
        boolean boolean91 = charSequenceList71.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean92 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.lang.Object[] objArray93 = charSequenceQueue56.toArray();
        charSequenceQueue56.clear();
        boolean boolean95 = charSequenceQueue39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean96 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence97 = charSequenceQueue8.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(objArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray93), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray93), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean21 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.lang.CharSequence charSequence31 = charSequenceQueue29.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean36 = charSequenceQueue29.contains((java.lang.Object) charSequenceQueue33);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor37 = charSequenceQueue29.iterator();
        boolean boolean38 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceQueue40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue51.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue51.spliterator();
        boolean boolean55 = charSequenceQueue51.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence56 = charSequenceQueue51.poll();
        boolean boolean57 = charSequenceQueue46.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean58 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean59 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceItor37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.element();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue11.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean19 = charSequenceQueue11.isEmpty();
        boolean boolean21 = charSequenceQueue11.remove((java.lang.Object) 10.0d);
        charSequenceQueue11.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int25 = charSequenceQueue24.maxSize();
        boolean boolean26 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue27.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue30.stream();
        java.lang.Comparable[][][][] comparableArray33 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray34 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray33;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray35 = charSequenceQueue30.toArray(strComparableArray34);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray36 = charSequenceQueue27.toArray(strComparableArray34);
        java.lang.Object[][] objArray37 = charSequenceQueue11.toArray((java.lang.Object[][]) strComparableArray34);
        boolean boolean38 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 100 + "'", int25 == 100);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(comparableArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strComparableArray35);
        org.junit.Assert.assertNotNull(strComparableArray36);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue12.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue12.iterator();
        boolean boolean16 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence17 = charSequenceQueue1.remove();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList21 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26, charSequenceArray25);
        boolean boolean28 = charSequenceQueue26.isAtFullCapacity();
        boolean boolean29 = charSequenceList21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean30 = charSequenceQueue26.isAtFullCapacity();
        java.lang.Object[] objArray31 = charSequenceQueue26.toArray();
        boolean boolean33 = charSequenceQueue26.add((java.lang.CharSequence) "[, ]");
        int int34 = charSequenceQueue26.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue26.stream();
        boolean boolean36 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        int int37 = charSequenceQueue26.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(objArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray31), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray31), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 3 + "'", int34 == 3);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 32 + "'", int37 == 32);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue12.stream();
        boolean boolean21 = charSequenceQueue12.isEmpty();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean34 = charSequenceQueue30.isAtFullCapacity();
        java.lang.Object[] objArray35 = charSequenceQueue30.toArray();
        boolean boolean37 = charSequenceQueue30.contains((java.lang.Object) false);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue30.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean40 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.String str41 = charSequenceQueue12.toString();
        boolean boolean42 = charSequenceQueue12.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(objArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray35), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray35), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence2 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence7 = charSequenceQueue4.element();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean25 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        boolean boolean43 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.lang.CharSequence charSequence45 = charSequenceQueue41.peek();
        java.lang.String str46 = charSequenceQueue41.toString();
        boolean boolean47 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean49 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue1.iterator();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = charSequenceList53.contains(obj55);
        java.lang.String str57 = charSequenceList53.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean60 = charSequenceList53.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        charSequenceQueue59.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.isEmpty();
        boolean boolean64 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNull(charSequence2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!]" + "'", str57, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        int int28 = charSequenceQueue23.maxSize();
        boolean boolean29 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        boolean boolean36 = charSequenceQueue31.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean38 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue31);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue31.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue31.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertNotNull(charSequenceItor40);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3, charSequenceArray2);
        boolean boolean5 = charSequenceQueue3.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue3.parallelStream();
        boolean boolean7 = charSequenceQueue3.isEmpty();
        java.lang.CharSequence charSequence8 = charSequenceQueue3.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue16.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean33 = charSequenceQueue16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        int int34 = charSequenceQueue16.maxSize();
        java.lang.CharSequence charSequence35 = charSequenceQueue16.poll();
        boolean boolean36 = charSequenceQueue16.isFull();
        boolean boolean37 = charSequenceQueue16.isFull();
        boolean boolean38 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceQueue40.element();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceList51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean60 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        boolean boolean61 = charSequenceQueue40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        boolean boolean76 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceQueue77.stream();
        boolean boolean79 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        java.lang.String str80 = charSequenceQueue77.toString();
        int int81 = charSequenceQueue77.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean85 = charSequenceQueue83.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence86 = charSequenceQueue83.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceQueue83.parallelStream();
        boolean boolean89 = charSequenceQueue83.contains((java.lang.Object) (short) 100);
        charSequenceQueue83.clear();
        boolean boolean91 = charSequenceQueue77.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        int int92 = charSequenceQueue77.size();
        java.lang.CharSequence charSequence93 = charSequenceQueue77.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor94 = charSequenceQueue77.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceQueue77.parallelStream();
        boolean boolean96 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "[hi!]" + "'", str80, "[hi!]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "hi!" + "'", charSequence93, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor94);
        org.junit.Assert.assertNotNull(charSequenceStream95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 10);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue4.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue4.stream();
        boolean boolean10 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue4);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList14 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean22 = charSequenceList14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence23 = charSequenceQueue19.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence26 = charSequenceQueue1.remove();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        boolean boolean7 = charSequenceQueue2.add((java.lang.CharSequence) "[hi!]");
        boolean boolean8 = charSequenceQueue2.isFull();
        int int9 = charSequenceQueue2.maxSize();
        java.lang.CharSequence charSequence10 = charSequenceQueue2.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue41.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.lang.CharSequence charSequence47 = charSequenceQueue45.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue45.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue45.iterator();
        boolean boolean57 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue25.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue25.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        java.lang.String str3 = charSequenceQueue1.toString();
        boolean boolean5 = charSequenceQueue1.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue33.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue33.spliterator();
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.poll();
        boolean boolean39 = charSequenceQueue28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence40 = charSequenceQueue28.remove();
        boolean boolean41 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray53 = charSequenceList44.toArray((java.lang.Comparable<java.lang.String>[]) strArray52);
        java.lang.String[] strArray54 = charSequenceQueue20.toArray(strArray52);
        java.lang.String[] strArray55 = charSequenceQueue16.toArray(strArray54);
        java.lang.String[] strArray56 = charSequenceQueue1.toArray(strArray54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue58.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue58.spliterator();
        boolean boolean62 = charSequenceQueue58.add((java.lang.CharSequence) "");
        boolean boolean63 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean64 = charSequenceQueue58.isFull();
        boolean boolean65 = charSequenceQueue1.remove((java.lang.Object) boolean64);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strComparableArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean34 = charSequenceQueue24.add((java.lang.CharSequence) "hi!");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue24.spliterator();
        boolean boolean36 = charSequenceQueue10.remove((java.lang.Object) charSequenceQueue24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence38 = charSequenceQueue10.get(32);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        charSequenceQueue30.clear();
        boolean boolean35 = charSequenceQueue30.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean42 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.lang.String str43 = charSequenceList39.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceList39.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceList39.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[[hi!], [hi!]]" + "'", str43, "[[hi!], [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        charSequenceQueue8.clear();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceList25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean40 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean41 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.Object[] objArray42 = charSequenceQueue14.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue14.parallelStream();
        charSequenceQueue14.clear();
        boolean boolean46 = charSequenceQueue14.add((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray59 = charSequenceList50.toArray((java.lang.Comparable<java.lang.String>[]) strArray58);
        boolean boolean60 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.Object[] objArray61 = charSequenceQueue14.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[, ]");
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean34 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isFull();
        charSequenceQueue37.clear();
        boolean boolean44 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue46.stream();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        boolean boolean66 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        boolean boolean72 = charSequenceQueue68.add((java.lang.CharSequence) "hi!");
        int int73 = charSequenceQueue68.maxSize();
        boolean boolean74 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean78 = charSequenceQueue76.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence79 = charSequenceQueue76.peek();
        boolean boolean81 = charSequenceQueue76.add((java.lang.CharSequence) "");
        boolean boolean82 = charSequenceList54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        boolean boolean83 = charSequenceQueue46.contains((java.lang.Object) charSequenceQueue76);
        java.lang.String str84 = charSequenceQueue46.toString();
        java.lang.String str85 = charSequenceQueue46.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue46.spliterator();
        boolean boolean87 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue46);
        java.lang.Class<?> wildcardClass88 = charSequenceQueue46.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "" + "'", charSequence79, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[, hi!]" + "'", str84, "[, hi!]");
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[, hi!]" + "'", str85, "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11, charSequenceArray10);
        boolean boolean13 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean15 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        boolean boolean16 = charSequenceQueue5.isEmpty();
        int int17 = charSequenceQueue5.size();
        java.lang.CharSequence charSequence18 = charSequenceQueue5.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceList11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.String str41 = charSequenceList37.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList31.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue52.parallelStream();
        boolean boolean55 = charSequenceQueue52.contains((java.lang.Object) 1.0d);
        boolean boolean56 = charSequenceQueue52.isFull();
        boolean boolean57 = charSequenceQueue52.isFull();
        int int58 = charSequenceQueue52.maxSize();
        int int59 = charSequenceQueue52.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67, charSequenceArray66);
        boolean boolean69 = charSequenceQueue67.isAtFullCapacity();
        boolean boolean70 = charSequenceQueue61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceQueue61.stream();
        boolean boolean72 = charSequenceQueue52.contains((java.lang.Object) charSequenceStream71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue52.spliterator();
        int int74 = charSequenceQueue52.maxSize();
        boolean boolean75 = charSequenceQueue47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        int int76 = charSequenceQueue47.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue78.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceQueue78.spliterator();
        boolean boolean82 = charSequenceQueue78.add((java.lang.CharSequence) "");
        boolean boolean83 = charSequenceQueue78.isAtFullCapacity();
        java.lang.CharSequence charSequence84 = charSequenceQueue78.element();
        int int85 = charSequenceQueue78.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue78.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceQueue78.spliterator();
        boolean boolean88 = charSequenceQueue47.remove((java.lang.Object) charSequenceQueue78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence90 = charSequenceQueue47.get(3);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (3) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 52 + "'", int58 == 52);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 52 + "'", int59 == 52);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13, charSequenceArray12);
        boolean boolean15 = charSequenceQueue13.isAtFullCapacity();
        boolean boolean16 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue18.spliterator();
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence23 = charSequenceQueue18.poll();
        boolean boolean24 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence charSequence25 = charSequenceQueue13.remove();
        boolean boolean26 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray38 = charSequenceList29.toArray((java.lang.Comparable<java.lang.String>[]) strArray37);
        java.lang.String[] strArray39 = charSequenceQueue5.toArray(strArray37);
        java.lang.String[] strArray40 = charSequenceQueue1.toArray(strArray39);
        boolean boolean41 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strComparableArray38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.remove();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue9.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue9.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence36 = charSequenceQueue24.remove();
        boolean boolean37 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean38 = charSequenceQueue9.contains((java.lang.Object) charSequenceQueue16);
        java.lang.CharSequence charSequence39 = charSequenceQueue9.remove();
        boolean boolean40 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean53 = charSequenceQueue48.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int54 = charSequenceQueue48.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor55 = charSequenceQueue48.iterator();
        int int56 = charSequenceQueue48.size();
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66, charSequenceArray65);
        boolean boolean68 = charSequenceQueue66.isAtFullCapacity();
        boolean boolean69 = charSequenceList61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean70 = charSequenceQueue66.isAtFullCapacity();
        java.lang.Object[] objArray71 = charSequenceQueue66.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor72 = charSequenceQueue66.iterator();
        int int73 = charSequenceQueue66.size();
        boolean boolean75 = charSequenceQueue66.add((java.lang.CharSequence) "");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceQueue66.iterator();
        boolean boolean77 = charSequenceQueue48.remove((java.lang.Object) charSequenceItor76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 32 + "'", int54 == 32);
        org.junit.Assert.assertNotNull(charSequenceItor55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 3 + "'", int56 == 3);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2 + "'", int73 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(charSequenceItor76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        boolean boolean21 = charSequenceQueue7.isFull();
        java.lang.CharSequence charSequence22 = charSequenceQueue7.poll();
        boolean boolean23 = charSequenceQueue7.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor24 = charSequenceQueue7.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue7.stream();
        boolean boolean26 = charSequenceQueue7.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceItor24);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray6 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        java.lang.CharSequence charSequence13 = charSequenceQueue7.element();
        int int14 = charSequenceQueue7.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue7.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue7.spliterator();
        boolean boolean17 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue19.parallelStream();
        boolean boolean22 = charSequenceQueue19.contains((java.lang.Object) 1.0d);
        boolean boolean23 = charSequenceQueue19.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue19.parallelStream();
        boolean boolean26 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean27 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        java.lang.Class<?> wildcardClass28 = charSequenceQueue7.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence56 = charSequenceQueue24.element();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.String str50 = charSequenceList46.toString();
        boolean boolean51 = charSequenceList39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue52.stream();
        java.lang.String str54 = charSequenceQueue52.toString();
        java.lang.CharSequence charSequence55 = charSequenceQueue52.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean60 = charSequenceQueue57.contains((java.lang.Object) 1.0d);
        boolean boolean61 = charSequenceQueue57.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        boolean boolean70 = charSequenceQueue63.contains((java.lang.Object) charSequenceQueue67);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor71 = charSequenceQueue63.iterator();
        boolean boolean72 = charSequenceQueue57.remove((java.lang.Object) charSequenceQueue63);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean76 = charSequenceQueue74.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80, charSequenceArray79);
        boolean boolean82 = charSequenceQueue80.isAtFullCapacity();
        boolean boolean83 = charSequenceQueue74.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue85.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceQueue85.spliterator();
        boolean boolean89 = charSequenceQueue85.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence90 = charSequenceQueue85.poll();
        boolean boolean91 = charSequenceQueue80.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean92 = charSequenceQueue63.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        java.lang.CharSequence charSequence93 = charSequenceQueue80.poll();
        java.lang.CharSequence charSequence95 = charSequenceQueue80.get((int) (short) 0);
        boolean boolean96 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean97 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean98 = charSequenceQueue8.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!]" + "'", str50, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "" + "'", charSequence95, "");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        boolean boolean47 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean48 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean49 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean50 = charSequenceQueue29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean51 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        boolean boolean52 = charSequenceList15.remove((java.lang.Object) boolean51);
        boolean boolean53 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue10.parallelStream();
        boolean boolean13 = charSequenceQueue10.contains((java.lang.Object) 1.0d);
        boolean boolean14 = charSequenceQueue10.isFull();
        boolean boolean15 = charSequenceQueue10.isFull();
        int int16 = charSequenceQueue10.maxSize();
        int int17 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue19.stream();
        boolean boolean30 = charSequenceQueue10.contains((java.lang.Object) charSequenceStream29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue32.parallelStream();
        int int34 = charSequenceQueue32.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray39 = charSequenceQueue36.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue36.iterator();
        boolean boolean41 = charSequenceQueue32.remove((java.lang.Object) charSequenceQueue36);
        boolean boolean42 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceQueue32.remove(obj43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52, charSequenceArray51);
        boolean boolean54 = charSequenceQueue52.isAtFullCapacity();
        boolean boolean55 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue52.iterator();
        boolean boolean57 = charSequenceQueue32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean58 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean68 = charSequenceList61.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        java.lang.Object[] objArray69 = charSequenceQueue67.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceQueue71.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue71.spliterator();
        boolean boolean75 = charSequenceQueue71.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence76 = charSequenceQueue71.poll();
        boolean boolean78 = charSequenceQueue71.add((java.lang.CharSequence) "");
        charSequenceQueue71.clear();
        boolean boolean80 = charSequenceQueue67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue67.spliterator();
        int int82 = charSequenceQueue67.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor83 = charSequenceQueue67.iterator();
        boolean boolean85 = charSequenceQueue67.offer((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        boolean boolean86 = charSequenceQueue1.contains((java.lang.Object) boolean85);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "" + "'", charSequence76, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68, charSequenceArray67);
        boolean boolean70 = charSequenceQueue68.isAtFullCapacity();
        boolean boolean71 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue73.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue73.spliterator();
        boolean boolean77 = charSequenceQueue73.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence78 = charSequenceQueue73.poll();
        boolean boolean79 = charSequenceQueue68.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        java.lang.Object[] objArray80 = charSequenceQueue73.toArray();
        boolean boolean81 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceQueue83.parallelStream();
        boolean boolean86 = charSequenceQueue83.contains((java.lang.Object) 1.0d);
        boolean boolean87 = charSequenceQueue83.isFull();
        boolean boolean88 = charSequenceQueue83.isFull();
        boolean boolean89 = charSequenceQueue83.isFull();
        charSequenceQueue83.clear();
        boolean boolean91 = charSequenceQueue73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence92 = charSequenceQueue83.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "" + "'", charSequence78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceStream84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue28.iterator();
        charSequenceQueue28.clear();
        java.lang.CharSequence charSequence32 = charSequenceQueue28.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue34.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.element();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean59 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean60 = charSequenceQueue39.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        boolean boolean61 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50);
        java.lang.Object[] objArray62 = charSequenceQueue34.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue34.parallelStream();
        charSequenceQueue34.clear();
        boolean boolean66 = charSequenceQueue34.add((java.lang.CharSequence) "");
        boolean boolean67 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        charSequenceQueue34.clear();
        boolean boolean69 = charSequenceQueue18.contains((java.lang.Object) charSequenceQueue34);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence70 = charSequenceQueue34.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceItor30);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object[][]> objArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object[][]>((int) (short) 10);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceQueue16.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue16.iterator();
        boolean boolean24 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue16.spliterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11, charSequenceArray10);
        boolean boolean13 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean15 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue17.element();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList48.contains(obj50);
        java.lang.String str52 = charSequenceList48.toString();
        boolean boolean53 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.stream();
        boolean boolean56 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean57 = charSequenceQueue5.remove((java.lang.Object) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        int int60 = charSequenceQueue59.maxSize();
        java.util.Queue[] queueArray62 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray63 = (java.util.Queue<java.lang.CharSequence>[]) queueArray62;
        java.util.Queue[] queueArray65 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray66 = (java.util.Queue<java.lang.CharSequence>[]) queueArray65;
        java.util.Queue[] queueArray68 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray69 = (java.util.Queue<java.lang.CharSequence>[]) queueArray68;
        java.util.Queue[] queueArray71 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray72 = (java.util.Queue<java.lang.CharSequence>[]) queueArray71;
        java.util.Queue[] queueArray74 = new java.util.Queue[0];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray75 = (java.util.Queue<java.lang.CharSequence>[]) queueArray74;
        java.util.Queue[][] queueArray77 = new java.util.Queue[5][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray78 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray77;
        charSequenceQueueArray78[0] = charSequenceQueueArray63;
        charSequenceQueueArray78[1] = charSequenceQueueArray66;
        charSequenceQueueArray78[2] = queueArray68;
        charSequenceQueueArray78[3] = charSequenceQueueArray72;
        charSequenceQueueArray78[4] = charSequenceQueueArray75;
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray89 = charSequenceQueue59.toArray(charSequenceQueueArray78);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Iterable<java.lang.CharSequence>[][] charSequenceIterableArray90 = charSequenceQueue5.toArray((java.lang.Iterable<java.lang.CharSequence>[][]) charSequenceQueueArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!]" + "'", str52, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertNotNull(queueArray62);
        org.junit.Assert.assertNotNull(charSequenceQueueArray63);
        org.junit.Assert.assertNotNull(queueArray65);
        org.junit.Assert.assertNotNull(charSequenceQueueArray66);
        org.junit.Assert.assertNotNull(queueArray68);
        org.junit.Assert.assertNotNull(charSequenceQueueArray69);
        org.junit.Assert.assertNotNull(queueArray71);
        org.junit.Assert.assertNotNull(charSequenceQueueArray72);
        org.junit.Assert.assertNotNull(queueArray74);
        org.junit.Assert.assertNotNull(charSequenceQueueArray75);
        org.junit.Assert.assertNotNull(queueArray77);
        org.junit.Assert.assertNotNull(charSequenceQueueArray78);
        org.junit.Assert.assertNotNull(charSequenceQueueArray89);
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.Object[] objArray58 = charSequenceQueue50.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceQueue60.parallelStream();
        boolean boolean63 = charSequenceQueue60.contains((java.lang.Object) 1.0d);
        boolean boolean64 = charSequenceQueue60.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue60.stream();
        boolean boolean67 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        int int68 = charSequenceQueue60.maxSize();
        java.lang.CharSequence charSequence69 = charSequenceQueue60.element();
        charSequenceQueue60.clear();
        boolean boolean71 = charSequenceQueue60.isFull();
        boolean boolean72 = charSequenceQueue50.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 52 + "'", int68 == 52);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean14 = charSequenceQueue8.isFull();
        boolean boolean15 = charSequenceQueue8.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.parallelStream();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean59 = charSequenceQueue55.isAtFullCapacity();
        int int60 = charSequenceQueue55.maxSize();
        boolean boolean61 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean63 = charSequenceQueue42.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence64 = charSequenceQueue42.peek();
        boolean boolean65 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean67 = charSequenceQueue42.offer((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        boolean boolean18 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue15.add((java.lang.CharSequence) "[]");
        int int21 = charSequenceQueue15.maxSize();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue44.parallelStream();
        boolean boolean50 = charSequenceQueue44.contains((java.lang.Object) (short) 100);
        charSequenceQueue44.clear();
        boolean boolean52 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue38.stream();
        boolean boolean55 = charSequenceQueue38.offer((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence57 = charSequenceQueue38.get((-1));
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue26.stream();
        java.lang.String str28 = charSequenceQueue26.toString();
        java.lang.CharSequence charSequence29 = charSequenceQueue26.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.CharSequence charSequence67 = charSequenceQueue54.poll();
        java.lang.CharSequence charSequence69 = charSequenceQueue54.get((int) (short) 0);
        boolean boolean70 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        int int71 = charSequenceQueue54.maxSize();
        boolean boolean72 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.maxSize();
        boolean boolean7 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue9.isAtFullCapacity();
        int int15 = charSequenceQueue9.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue9.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue18.spliterator();
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "");
        boolean boolean23 = charSequenceQueue18.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor24 = charSequenceQueue18.iterator();
        java.lang.Object[] objArray25 = charSequenceQueue18.toArray();
        boolean boolean26 = charSequenceQueue9.remove((java.lang.Object) objArray25);
        boolean boolean27 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence charSequence28 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence29 = charSequenceQueue9.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray34 = charSequenceQueue31.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue31.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue31.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        charSequenceQueue40.clear();
        boolean boolean49 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean50 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.Class<?> wildcardClass51 = charSequenceQueue31.getClass();
        boolean boolean52 = charSequenceQueue9.remove((java.lang.Object) wildcardClass51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        boolean boolean58 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        java.lang.String str59 = charSequenceQueue54.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue54.parallelStream();
        boolean boolean61 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean63 = charSequenceQueue54.add((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        int int69 = charSequenceQueue66.maxSize();
        int int70 = charSequenceQueue66.maxSize();
        java.lang.Class<?> wildcardClass71 = charSequenceQueue66.getClass();
        boolean boolean72 = charSequenceQueue54.remove((java.lang.Object) wildcardClass71);
        boolean boolean73 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        int int74 = charSequenceQueue9.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceItor24);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[, ]" + "'", str59, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 4 + "'", int74 == 4);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue58.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue58.spliterator();
        boolean boolean62 = charSequenceQueue58.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence63 = charSequenceQueue58.poll();
        boolean boolean65 = charSequenceQueue58.add((java.lang.CharSequence) "");
        charSequenceQueue58.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue58.stream();
        boolean boolean68 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue58.parallelStream();
        boolean boolean71 = charSequenceQueue58.offer((java.lang.CharSequence) "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue27.spliterator();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean47 = charSequenceQueue43.isAtFullCapacity();
        java.lang.Object[] objArray48 = charSequenceQueue43.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor49 = charSequenceQueue43.iterator();
        int int50 = charSequenceQueue43.size();
        boolean boolean52 = charSequenceQueue43.add((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceQueue27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.String str58 = charSequenceQueue55.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue55.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue55.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue55.iterator();
        boolean boolean62 = charSequenceQueue55.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue55.iterator();
        boolean boolean64 = charSequenceQueue55.isEmpty();
        boolean boolean65 = charSequenceQueue43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        java.lang.CharSequence charSequence66 = charSequenceQueue43.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2 + "'", int50 == 2);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[]" + "'", str58, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean10 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceItor11);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue22.isAtFullCapacity();
        java.lang.CharSequence charSequence28 = charSequenceQueue22.element();
        int int29 = charSequenceQueue22.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue22.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue22.spliterator();
        boolean boolean32 = charSequenceQueue22.isFull();
        boolean boolean34 = charSequenceQueue22.contains((java.lang.Object) ' ');
        boolean boolean35 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        int int68 = charSequenceQueue63.maxSize();
        boolean boolean69 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean70 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean74 = charSequenceQueue72.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78, charSequenceArray77);
        boolean boolean80 = charSequenceQueue78.isAtFullCapacity();
        boolean boolean81 = charSequenceQueue72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceQueue83.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator85 = charSequenceQueue83.spliterator();
        boolean boolean87 = charSequenceQueue83.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence88 = charSequenceQueue83.poll();
        boolean boolean89 = charSequenceQueue78.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.CharSequence charSequence90 = charSequenceQueue78.remove();
        boolean boolean91 = charSequenceQueue78.isFull();
        boolean boolean92 = charSequenceQueue78.isFull();
        java.lang.CharSequence charSequence93 = charSequenceQueue78.poll();
        boolean boolean94 = charSequenceQueue78.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor95 = charSequenceQueue78.iterator();
        boolean boolean96 = charSequenceQueue63.remove((java.lang.Object) charSequenceQueue78);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertNotNull(charSequenceSpliterator85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "" + "'", charSequence88, "");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(charSequenceItor95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean18 = charSequenceQueue10.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean29 = charSequenceQueue21.isEmpty();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean31 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean32 = charSequenceQueue1.isFull();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean42 = charSequenceList35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60, charSequenceArray59);
        boolean boolean62 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean63 = charSequenceList55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean64 = charSequenceList50.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean65 = charSequenceQueue44.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList68 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.lang.Object obj70 = null;
        boolean boolean71 = charSequenceList68.contains(obj70);
        java.lang.String str72 = charSequenceList68.toString();
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList75 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75, charSequenceArray74);
        java.lang.Object obj77 = null;
        boolean boolean78 = charSequenceList75.contains(obj77);
        java.lang.String str79 = charSequenceList75.toString();
        boolean boolean80 = charSequenceList68.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList75);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream82 = charSequenceQueue81.stream();
        boolean boolean83 = charSequenceQueue44.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.lang.CharSequence charSequence84 = charSequenceQueue81.element();
        java.lang.CharSequence charSequence85 = charSequenceQueue81.peek();
        java.lang.String str86 = charSequenceQueue81.toString();
        boolean boolean87 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        boolean boolean88 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        int int89 = charSequenceQueue1.size();
        boolean boolean90 = charSequenceQueue1.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!]" + "'", str72, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[hi!]" + "'", str79, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceStream82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "hi!" + "'", charSequence84, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "hi!" + "'", charSequence85, "hi!");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[hi!]" + "'", str86, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 5 + "'", int89 == 5);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue7.spliterator();
        boolean boolean38 = charSequenceQueue7.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        charSequenceQueue16.clear();
        boolean boolean21 = charSequenceQueue16.remove((java.lang.Object) (-1.0d));
        boolean boolean22 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.Object obj23 = null;
        boolean boolean24 = charSequenceQueue16.contains(obj23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue16.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue9.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue9.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence36 = charSequenceQueue24.remove();
        boolean boolean37 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean38 = charSequenceQueue9.contains((java.lang.Object) charSequenceQueue16);
        java.lang.CharSequence charSequence39 = charSequenceQueue9.remove();
        boolean boolean40 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue9.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue9.spliterator();
        boolean boolean44 = charSequenceQueue9.add((java.lang.CharSequence) "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        int int6 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray8 = charSequenceQueue5.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue5.iterator();
        boolean boolean10 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue5);
        java.lang.CharSequence charSequence11 = charSequenceQueue5.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceQueue13.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue13.parallelStream();
        charSequenceQueue13.clear();
        java.lang.CharSequence charSequence19 = charSequenceQueue13.peek();
        java.lang.CharSequence charSequence20 = charSequenceQueue13.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        int int32 = charSequenceQueue28.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue28.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue28.spliterator();
        boolean boolean35 = charSequenceQueue13.remove((java.lang.Object) charSequenceSpliterator34);
        boolean boolean37 = charSequenceQueue13.offer((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41, charSequenceArray40);
        boolean boolean43 = charSequenceQueue41.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue41.parallelStream();
        java.lang.CharSequence charSequence45 = charSequenceQueue41.remove();
        boolean boolean46 = charSequenceQueue13.remove((java.lang.Object) charSequence45);
        boolean boolean47 = charSequenceQueue5.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.CharSequence charSequence48 = charSequenceQueue5.peek();
        java.lang.CharSequence charSequence49 = charSequenceQueue5.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertNull(charSequence49);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceQueue0.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream4 = charSequenceQueue3.stream();
        java.lang.Comparable[][][][] comparableArray6 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray7 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray6;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray8 = charSequenceQueue3.toArray(strComparableArray7);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray9 = charSequenceQueue0.toArray(strComparableArray7);
        java.lang.Class<?> wildcardClass10 = charSequenceQueue0.getClass();
        org.junit.Assert.assertNotNull(charSequenceItor1);
        org.junit.Assert.assertNotNull(charSequenceStream4);
        org.junit.Assert.assertNotNull(comparableArray6);
        org.junit.Assert.assertNotNull(strComparableArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(strComparableArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceStream12);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][][][]> strComparableArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][][][]>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.poll();
        boolean boolean4 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        int int6 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean45 = charSequenceQueue36.remove((java.lang.Object) 100);
        int int46 = charSequenceQueue36.maxSize();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceList49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean63 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean64 = charSequenceQueue36.isEmpty();
        java.lang.String str65 = charSequenceQueue36.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[]" + "'", str65, "[]");
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type> typeQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type>((int) (byte) 100);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        int int9 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue12.parallelStream();
        boolean boolean15 = charSequenceQueue12.contains((java.lang.Object) 1.0d);
        boolean boolean16 = charSequenceQueue12.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue12.stream();
        boolean boolean19 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        charSequenceQueue12.clear();
        charSequenceQueue12.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean44 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        boolean boolean59 = charSequenceList47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream61 = charSequenceQueue60.stream();
        boolean boolean62 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        java.lang.CharSequence charSequence63 = charSequenceQueue60.element();
        java.lang.CharSequence charSequence64 = charSequenceQueue60.peek();
        boolean boolean65 = charSequenceQueue60.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue60.spliterator();
        boolean boolean67 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue60);
        boolean boolean68 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceStream61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceStream69);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.remove((java.lang.Object) 10.0d);
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int15 = charSequenceQueue14.maxSize();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue14);
        boolean boolean17 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]> strArrayQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]>();
        boolean boolean19 = charSequenceQueue1.contains((java.lang.Object) strArrayQueue18);
        charSequenceQueue1.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue1.spliterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence51 = charSequenceQueue46.element();
        java.lang.CharSequence charSequence52 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceList56.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence65 = charSequenceQueue61.poll();
        java.lang.CharSequence charSequence66 = charSequenceQueue61.poll();
        boolean boolean67 = charSequenceQueue61.isAtFullCapacity();
        int int68 = charSequenceQueue61.maxSize();
        boolean boolean69 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean70 = charSequenceQueue61.isEmpty();
        boolean boolean72 = charSequenceQueue61.add((java.lang.CharSequence) "");
        boolean boolean73 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence74 = charSequenceQueue61.element();
        java.lang.CharSequence charSequence75 = charSequenceQueue61.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceQueue61.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "" + "'", charSequence74, "");
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "" + "'", charSequence75, "");
        org.junit.Assert.assertNotNull(charSequenceItor76);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceQueue3.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue3.spliterator();
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "");
        java.lang.String str8 = charSequenceQueue3.toString();
        java.lang.CharSequence charSequence9 = charSequenceQueue3.element();
        java.lang.CharSequence charSequence10 = charSequenceQueue3.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue3.iterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue3.poll();
        boolean boolean13 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        int int14 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.size();
        int int14 = charSequenceQueue7.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue16.stream();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        boolean boolean36 = charSequenceList24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        boolean boolean42 = charSequenceQueue38.add((java.lang.CharSequence) "hi!");
        int int43 = charSequenceQueue38.maxSize();
        boolean boolean44 = charSequenceList24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.peek();
        boolean boolean51 = charSequenceQueue46.add((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceList24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean53 = charSequenceQueue16.contains((java.lang.Object) charSequenceQueue46);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.CharSequence charSequence66 = charSequenceQueue62.poll();
        boolean boolean67 = charSequenceQueue62.isAtFullCapacity();
        java.lang.CharSequence charSequence68 = charSequenceQueue62.element();
        charSequenceQueue62.clear();
        boolean boolean70 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue62);
        boolean boolean71 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceQueue7.spliterator();
        charSequenceQueue7.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 52 + "'", int43 == 52);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence30 = charSequenceQueue1.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(charSequence30);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue12.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor18 = charSequenceQueue12.iterator();
        java.lang.Object[] objArray19 = charSequenceQueue12.toArray();
        boolean boolean20 = charSequenceQueue12.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue12.spliterator();
        boolean boolean23 = charSequenceQueue12.add((java.lang.CharSequence) "");
        boolean boolean24 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean25 = charSequenceQueue12.isEmpty();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue41.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.lang.CharSequence charSequence47 = charSequenceQueue45.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue41.maxSize();
        boolean boolean56 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue41);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceItor18);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        int int20 = charSequenceQueue16.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue16.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue16.spliterator();
        boolean boolean23 = charSequenceQueue1.remove((java.lang.Object) charSequenceSpliterator22);
        boolean boolean25 = charSequenceQueue1.offer((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.lang.String str43 = charSequenceQueue41.toString();
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        int int45 = charSequenceQueue41.maxSize();
        boolean boolean46 = charSequenceQueue41.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue41.stream();
        boolean boolean48 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean49 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean51 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertNull(charSequence8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue25.poll();
        boolean boolean31 = charSequenceQueue20.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence32 = charSequenceQueue20.remove();
        boolean boolean33 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue35.parallelStream();
        boolean boolean37 = charSequenceQueue20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        int int38 = charSequenceQueue20.maxSize();
        java.lang.CharSequence charSequence39 = charSequenceQueue20.poll();
        int int40 = charSequenceQueue20.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue20.stream();
        boolean boolean42 = charSequenceQueue3.contains((java.lang.Object) charSequenceQueue20);
        boolean boolean43 = charSequenceQueue3.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue3.spliterator();
        int int45 = charSequenceQueue3.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 32 + "'", int38 == 32);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        int int5 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        int int7 = charSequenceQueue1.maxSize();
        java.lang.String str8 = charSequenceQueue1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[]" + "'", str8, "[]");
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue1.spliterator();
        java.lang.String str12 = charSequenceQueue1.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence13 = charSequenceQueue1.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[]" + "'", str12, "[]");
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        boolean boolean12 = charSequenceQueue9.isEmpty();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) boolean12);
        java.lang.CharSequence charSequence14 = charSequenceQueue1.element();
        java.lang.String str15 = charSequenceQueue1.toString();
        java.lang.String str16 = charSequenceQueue1.toString();
        boolean boolean17 = charSequenceQueue1.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor18 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[, , [[hi!], [hi!]]]" + "'", str15, "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[, , [[hi!], [hi!]]]" + "'", str16, "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceItor18);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        boolean boolean29 = charSequenceQueue24.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceList2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceList2.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceStream31);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue8.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceStream15);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        int int20 = charSequenceQueue10.size();
        boolean boolean21 = charSequenceQueue10.isFull();
        int int22 = charSequenceQueue10.maxSize();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue7.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue7.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertNotNull(charSequenceStream35);
    }
}

