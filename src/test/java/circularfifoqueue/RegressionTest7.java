package circularfifoqueue;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        int int26 = charSequenceQueue8.size();
        boolean boolean27 = charSequenceQueue8.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 2 + "'", int26 == 2);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        boolean boolean25 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray26 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[, , hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[, , hi!]");
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue22.poll();
        boolean boolean28 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.lang.CharSequence charSequence29 = charSequenceQueue17.remove();
        boolean boolean30 = charSequenceQueue17.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue32.parallelStream();
        boolean boolean34 = charSequenceQueue17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue32.iterator();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean37 = charSequenceQueue8.isEmpty();
        boolean boolean38 = charSequenceQueue8.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue8.spliterator();
        boolean boolean40 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence41 = charSequenceQueue1.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(charSequence41);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = charSequenceList10.contains(obj12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean23 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean24 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceList10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean47 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean48 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.String[] strArray52 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray56 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray60 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray64 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.Comparable[][] comparableArray66 = new java.lang.Comparable[4][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray67 = (java.lang.Comparable<java.lang.String>[][]) comparableArray66;
        strComparableArray67[0] = strArray52;
        strComparableArray67[1] = strArray56;
        strComparableArray67[2] = strArray60;
        strComparableArray67[3] = strArray64;
        java.lang.Comparable<java.lang.String>[][] strComparableArray76 = charSequenceQueue46.toArray(strComparableArray67);
        boolean boolean77 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence charSequence78 = charSequenceQueue46.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue46.spliterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(comparableArray66);
        org.junit.Assert.assertNotNull(strComparableArray67);
        org.junit.Assert.assertNotNull(strComparableArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNull(charSequence78);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        boolean boolean29 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        int int51 = charSequenceQueue46.maxSize();
        boolean boolean52 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean53 = charSequenceList16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList62 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.lang.Object obj64 = null;
        boolean boolean65 = charSequenceList62.contains(obj64);
        java.lang.String str66 = charSequenceList62.toString();
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList69 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = charSequenceList69.contains(obj71);
        java.lang.String str73 = charSequenceList69.toString();
        boolean boolean74 = charSequenceList62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean75 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        boolean boolean76 = charSequenceQueue55.remove((java.lang.Object) charSequenceQueue57);
        boolean boolean77 = charSequenceList16.remove((java.lang.Object) charSequenceQueue55);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean81 = charSequenceQueue79.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85, charSequenceArray84);
        boolean boolean87 = charSequenceQueue85.isAtFullCapacity();
        boolean boolean88 = charSequenceQueue79.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean89 = charSequenceQueue55.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean90 = charSequenceQueue79.isAtFullCapacity();
        charSequenceQueue79.clear();
        boolean boolean92 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue79);
        java.lang.CharSequence charSequence93 = charSequenceQueue1.remove();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!]" + "'", str66, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!]" + "'", str73, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        charSequenceQueue7.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        charSequenceQueue19.clear();
        java.lang.CharSequence charSequence23 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue25.parallelStream();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38, charSequenceArray37);
        boolean boolean40 = charSequenceQueue38.isAtFullCapacity();
        boolean boolean41 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean42 = charSequenceQueue38.isAtFullCapacity();
        int int43 = charSequenceQueue38.maxSize();
        boolean boolean44 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean46 = charSequenceQueue25.offer((java.lang.CharSequence) "hi!");
        boolean boolean47 = charSequenceQueue19.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean49 = charSequenceQueue19.add((java.lang.CharSequence) "[[hi!]]");
        boolean boolean50 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue19);
        boolean boolean52 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue8.iterator();
        int int15 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.offer((java.lang.CharSequence) "[, [hi!]]");
        java.lang.CharSequence charSequence18 = charSequenceQueue8.peek();
        java.lang.Class<?> wildcardClass19 = charSequenceQueue8.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2 + "'", int15 == 2);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.lang.Object[] objArray23 = charSequenceQueue19.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue25.stream();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList33.contains(obj35);
        java.lang.String str37 = charSequenceList33.toString();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        boolean boolean45 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "hi!");
        int int52 = charSequenceQueue47.maxSize();
        boolean boolean53 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue55.peek();
        boolean boolean60 = charSequenceQueue55.add((java.lang.CharSequence) "");
        boolean boolean61 = charSequenceList33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean62 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue55);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceQueue64.spliterator();
        java.lang.CharSequence charSequence66 = charSequenceQueue64.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue64.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence72 = charSequenceQueue69.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue69.parallelStream();
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList77 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82, charSequenceArray81);
        boolean boolean84 = charSequenceQueue82.isAtFullCapacity();
        boolean boolean85 = charSequenceList77.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        boolean boolean86 = charSequenceQueue82.isAtFullCapacity();
        int int87 = charSequenceQueue82.maxSize();
        boolean boolean88 = charSequenceQueue69.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        boolean boolean89 = charSequenceQueue64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        boolean boolean90 = charSequenceQueue55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        boolean boolean91 = charSequenceQueue64.isAtFullCapacity();
        java.util.AbstractList[] abstractListArray93 = new java.util.AbstractList[0];
        @SuppressWarnings("unchecked")
        java.util.AbstractList<java.lang.CharSequence>[] charSequenceListArray94 = (java.util.AbstractList<java.lang.CharSequence>[]) abstractListArray93;
        java.util.AbstractList<java.lang.CharSequence>[] charSequenceListArray95 = charSequenceQueue64.toArray((java.util.AbstractList<java.lang.CharSequence>[]) abstractListArray93);
        java.util.Collection<java.lang.CharSequence>[] charSequenceCollectionArray96 = charSequenceQueue19.toArray((java.util.Collection<java.lang.CharSequence>[]) charSequenceListArray95);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor97 = charSequenceQueue19.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!]" + "'", str37, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertNull(charSequence66);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 32 + "'", int87 == 32);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(abstractListArray93);
        org.junit.Assert.assertNotNull(charSequenceListArray94);
        org.junit.Assert.assertNotNull(charSequenceListArray95);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray96);
        org.junit.Assert.assertNotNull(charSequenceItor97);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.poll();
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "[[, , , hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        int int23 = charSequenceQueue19.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        java.lang.CharSequence charSequence25 = charSequenceQueue19.poll();
        boolean boolean26 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        charSequenceQueue8.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray16 = charSequenceQueue13.toArray();
        boolean boolean17 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        int int18 = charSequenceQueue13.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object> objQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        charSequenceQueue23.clear();
        boolean boolean32 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue34.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue34.stream();
        boolean boolean42 = charSequenceQueue34.add((java.lang.CharSequence) "hi!");
        boolean boolean43 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean44 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue10.parallelStream();
        boolean boolean22 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence23 = charSequenceQueue10.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue10.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNull(charSequence24);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        charSequenceQueue7.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence18 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26, charSequenceArray25);
        boolean boolean28 = charSequenceQueue26.isAtFullCapacity();
        boolean boolean29 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean30 = charSequenceQueue26.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue32.spliterator();
        java.lang.CharSequence charSequence34 = charSequenceQueue32.peek();
        boolean boolean35 = charSequenceQueue32.isEmpty();
        int int36 = charSequenceQueue32.maxSize();
        boolean boolean37 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.String str50 = charSequenceList46.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceList46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean54 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue59.parallelStream();
        boolean boolean62 = charSequenceQueue59.contains((java.lang.Object) 1.0d);
        boolean boolean63 = charSequenceQueue59.isFull();
        int int64 = charSequenceQueue59.size();
        boolean boolean65 = charSequenceList40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean67 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean68 = charSequenceQueue32.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertNull(charSequence18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertNull(charSequence34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!]" + "'", str50, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        boolean boolean60 = charSequenceQueue1.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence62 = charSequenceQueue1.poll();
        int int63 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertNull(charSequence62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        int int5 = charSequenceQueue1.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 52 + "'", int5 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.ArrayList<java.lang.CharSequence>> charSequenceListQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.ArrayList<java.lang.CharSequence>>((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.element();
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.parallelStream();
        java.lang.CharSequence charSequence21 = charSequenceQueue14.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue14.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceQueue25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue36.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue36.spliterator();
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue36.poll();
        boolean boolean42 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceQueue36.isEmpty();
        int int44 = charSequenceQueue36.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        int int51 = charSequenceQueue46.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue46.iterator();
        java.lang.CharSequence charSequence53 = charSequenceQueue46.peek();
        boolean boolean54 = charSequenceQueue36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean55 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean56 = charSequenceQueue46.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue1.iterator();
        boolean boolean33 = charSequenceQueue1.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.poll();
        boolean boolean15 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        boolean boolean35 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        boolean boolean50 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue52.add((java.lang.CharSequence) "hi!");
        int int57 = charSequenceQueue52.maxSize();
        boolean boolean58 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean59 = charSequenceList22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean61 = charSequenceQueue52.remove((java.lang.Object) 100);
        int int62 = charSequenceQueue52.maxSize();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue74, charSequenceArray73);
        boolean boolean76 = charSequenceQueue74.isAtFullCapacity();
        boolean boolean77 = charSequenceQueue68.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue74);
        boolean boolean78 = charSequenceList65.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        boolean boolean79 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        boolean boolean80 = charSequenceQueue52.isEmpty();
        boolean boolean82 = charSequenceQueue52.add((java.lang.CharSequence) "[hi!, hi!]");
        boolean boolean83 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.lang.String str84 = charSequenceQueue52.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 52 + "'", int62 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[, [hi!, hi!]]" + "'", str84, "[, [hi!, hi!]]");
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue8.stream();
        boolean boolean16 = charSequenceQueue8.add((java.lang.CharSequence) "[, [[, ]]]");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence18 = charSequenceQueue8.get((int) ' ');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence15 = charSequenceQueue12.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue12.parallelStream();
        boolean boolean18 = charSequenceQueue12.contains((java.lang.Object) (short) 100);
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.lang.CharSequence charSequence24 = charSequenceQueue22.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue22.contains((java.lang.Object) charSequenceQueue26);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue22.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue22.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue33.spliterator();
        java.lang.CharSequence charSequence35 = charSequenceQueue33.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue33.contains((java.lang.Object) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean42 = charSequenceQueue33.isEmpty();
        boolean boolean43 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean45 = charSequenceQueue33.offer((java.lang.CharSequence) "[[hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNull(charSequence24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceItor30);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNull(charSequence35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceQueue35.isAtFullCapacity();
        int int40 = charSequenceQueue35.maxSize();
        boolean boolean41 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList44.contains(obj46);
        java.lang.String str48 = charSequenceList44.toString();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = charSequenceList51.contains(obj53);
        java.lang.String str55 = charSequenceList51.toString();
        boolean boolean56 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.stream();
        java.lang.CharSequence charSequence59 = charSequenceQueue57.poll();
        java.lang.Class<?> wildcardClass60 = charSequenceQueue57.getClass();
        boolean boolean61 = charSequenceQueue35.contains((java.lang.Object) charSequenceQueue57);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue35.parallelStream();
        boolean boolean63 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 32 + "'", int40 == 32);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[hi!]" + "'", str48, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!]" + "'", str55, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "hi!" + "'", charSequence59, "hi!");
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][][]> charSequenceQueueArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][][]>(100);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][]> charSequenceQueueArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][]>(4);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence14 = charSequenceQueue1.peek();
        boolean boolean16 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        boolean boolean20 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue1.add((java.lang.CharSequence) "[, []]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        boolean boolean28 = charSequenceQueue23.isFull();
        boolean boolean29 = charSequenceQueue23.isFull();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean31 = charSequenceQueue23.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceQueue39.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue45.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue45.parallelStream();
        boolean boolean51 = charSequenceQueue45.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue45.spliterator();
        boolean boolean53 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean54 = charSequenceQueue39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue45.parallelStream();
        boolean boolean56 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue45.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor58 = charSequenceQueue45.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertNotNull(charSequenceItor58);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        int int2 = charSequenceQueue1.maxSize();
        java.lang.Comparable[][][][][] comparableArray4 = new java.lang.Comparable[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray5 = (java.lang.Comparable<java.lang.String>[][][][][]) comparableArray4;
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray6 = charSequenceQueue1.toArray(strComparableArray5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue14.get(0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor21 = charSequenceQueue14.iterator();
        boolean boolean22 = charSequenceQueue14.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue14.parallelStream();
        boolean boolean24 = charSequenceQueue14.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue14.spliterator();
        boolean boolean26 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence27 = charSequenceQueue1.poll();
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceQueue1.contains(obj28);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertNotNull(comparableArray4);
        org.junit.Assert.assertNotNull(strComparableArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        int int14 = charSequenceQueue8.size();
        boolean boolean16 = charSequenceQueue8.offer((java.lang.CharSequence) "[, ]");
        java.lang.String str17 = charSequenceQueue8.toString();
        int int18 = charSequenceQueue8.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue8.parallelStream();
        java.lang.CharSequence charSequence20 = charSequenceQueue8.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue33.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue33.spliterator();
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.poll();
        boolean boolean39 = charSequenceQueue28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence40 = charSequenceQueue28.remove();
        boolean boolean41 = charSequenceQueue28.isFull();
        boolean boolean42 = charSequenceQueue28.isFull();
        java.lang.CharSequence charSequence43 = charSequenceQueue28.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51, charSequenceArray50);
        boolean boolean53 = charSequenceQueue51.isAtFullCapacity();
        boolean boolean54 = charSequenceQueue45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68, charSequenceArray67);
        boolean boolean70 = charSequenceQueue68.isAtFullCapacity();
        boolean boolean71 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue73.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue73.spliterator();
        boolean boolean77 = charSequenceQueue73.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence78 = charSequenceQueue73.poll();
        boolean boolean79 = charSequenceQueue68.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        java.lang.CharSequence charSequence80 = charSequenceQueue68.remove();
        boolean boolean81 = charSequenceQueue60.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList84 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList84, charSequenceArray83);
        java.lang.String[] strArray92 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray93 = charSequenceList84.toArray((java.lang.Comparable<java.lang.String>[]) strArray92);
        java.lang.String[] strArray94 = charSequenceQueue60.toArray(strArray92);
        java.lang.String[] strArray95 = charSequenceQueue56.toArray(strArray94);
        java.lang.Comparable<java.lang.String>[] strComparableArray96 = charSequenceQueue51.toArray((java.lang.Comparable<java.lang.String>[]) strArray94);
        java.lang.String[] strArray97 = charSequenceQueue28.toArray(strArray94);
        boolean boolean98 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.CharSequence charSequence99 = charSequenceQueue8.poll();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[, , [, ]]" + "'", str17, "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 32 + "'", int18 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "" + "'", charSequence78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "" + "'", charSequence80, "");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(strComparableArray93);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertNotNull(strComparableArray96);
        org.junit.Assert.assertNotNull(strArray97);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + true + "'", boolean98 == true);
        org.junit.Assert.assertEquals("'" + charSequence99 + "' != '" + "" + "'", charSequence99, "");
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor24 = charSequenceQueue20.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue20.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean27 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceItor24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceStream28);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue10.spliterator();
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue10.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue10.iterator();
        java.lang.Object[] objArray17 = charSequenceQueue10.toArray();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) objArray17);
        java.lang.Object[] objArray19 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence20 = charSequenceQueue1.remove();
        boolean boolean21 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream22);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        int int25 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence26 = charSequenceQueue7.poll();
        java.lang.String str27 = charSequenceQueue7.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue10.contains((java.lang.Object) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue19.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue19.spliterator();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence28 = charSequenceQueue19.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        int int33 = charSequenceQueue31.maxSize();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.lang.String str35 = charSequenceQueue31.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Queue[] queueArray56 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[]) queueArray56;
        charSequenceQueueArray57[0] = charSequenceQueue31;
        charSequenceQueueArray57[1] = charSequenceQueue48;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray62 = charSequenceQueue19.toArray(charSequenceQueueArray57);
        boolean boolean63 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue1.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceQueue1.iterator();
        int int66 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(charSequenceQueueArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        int int22 = charSequenceQueue7.maxSize();
        boolean boolean24 = charSequenceQueue7.add((java.lang.CharSequence) "[, , hi!]");
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        int int29 = charSequenceQueue27.maxSize();
        boolean boolean30 = charSequenceQueue27.isFull();
        boolean boolean32 = charSequenceQueue27.add((java.lang.CharSequence) "[hi!]");
        boolean boolean33 = charSequenceQueue27.isFull();
        int int34 = charSequenceQueue27.maxSize();
        java.lang.CharSequence charSequence35 = charSequenceQueue27.peek();
        charSequenceQueue27.clear();
        java.lang.Object[] objArray37 = charSequenceQueue27.toArray();
        boolean boolean38 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        charSequenceQueue12.clear();
        boolean boolean21 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray33 = charSequenceList24.toArray((java.lang.Comparable<java.lang.String>[]) strArray32);
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceQueue12.toArray((java.lang.Comparable<java.lang.String>[]) strArray32);
        boolean boolean35 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence39 = charSequenceQueue38.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean61 = charSequenceList47.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean62 = charSequenceQueue41.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = charSequenceList65.contains(obj67);
        java.lang.String str69 = charSequenceList65.toString();
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.Object obj74 = null;
        boolean boolean75 = charSequenceList72.contains(obj74);
        java.lang.String str76 = charSequenceList72.toString();
        boolean boolean77 = charSequenceList65.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue78.stream();
        boolean boolean80 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        java.lang.CharSequence charSequence81 = charSequenceQueue78.element();
        java.lang.CharSequence charSequence82 = charSequenceQueue78.peek();
        java.lang.String str83 = charSequenceQueue78.toString();
        boolean boolean84 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean86 = charSequenceQueue36.contains((java.lang.Object) charSequenceQueue78);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strComparableArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[hi!]" + "'", str69, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "[hi!]" + "'", str76, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "hi!" + "'", charSequence81, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[hi!]" + "'", str83, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        boolean boolean24 = charSequenceQueue3.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue3.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean38 = charSequenceQueue33.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean39 = charSequenceQueue33.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.parallelStream();
        boolean boolean47 = charSequenceQueue41.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue41.element();
        boolean boolean50 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean51 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue53.parallelStream();
        boolean boolean56 = charSequenceQueue53.contains((java.lang.Object) 1.0d);
        boolean boolean57 = charSequenceQueue53.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue53.stream();
        boolean boolean61 = charSequenceQueue53.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence63 = charSequenceQueue53.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean65 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue73.isAtFullCapacity();
        boolean boolean76 = charSequenceQueue67.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean78 = charSequenceQueue73.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean79 = charSequenceQueue73.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean83 = charSequenceQueue81.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue81.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceQueue81.parallelStream();
        boolean boolean87 = charSequenceQueue81.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceQueue81.spliterator();
        java.lang.CharSequence charSequence89 = charSequenceQueue81.element();
        boolean boolean90 = charSequenceQueue73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceQueue81.stream();
        java.lang.CharSequence charSequence92 = charSequenceQueue81.remove();
        boolean boolean93 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor94 = charSequenceQueue3.iterator();
        int int95 = charSequenceQueue3.size();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator96 = charSequenceQueue3.spliterator();
        boolean boolean97 = charSequenceQueue3.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(charSequenceItor94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 2 + "'", int95 == 2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>[][]> charSequenceListArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>[][]>((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue14.contains((java.lang.Object) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue23.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue23.spliterator();
        boolean boolean31 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence charSequence32 = charSequenceQueue23.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue23.stream();
        java.lang.CharSequence charSequence34 = charSequenceQueue23.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue23.iterator();
        boolean boolean36 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue23);
        int int37 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        int int23 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.lang.CharSequence charSequence27 = charSequenceQueue25.peek();
        boolean boolean28 = charSequenceQueue25.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36, charSequenceArray35);
        boolean boolean38 = charSequenceQueue36.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue36.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue36.spliterator();
        charSequenceQueue36.clear();
        int int43 = charSequenceQueue36.maxSize();
        boolean boolean44 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.lang.CharSequence charSequence45 = charSequenceQueue36.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.String str50 = charSequenceQueue47.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue47.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.parallelStream();
        boolean boolean53 = charSequenceQueue36.remove((java.lang.Object) charSequenceQueue47);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue36.parallelStream();
        boolean boolean55 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue36);
        int int56 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 52 + "'", int23 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[]" + "'", str50, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream57);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence15 = charSequenceQueue12.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue12.parallelStream();
        boolean boolean18 = charSequenceQueue12.contains((java.lang.Object) (short) 100);
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        boolean boolean21 = charSequenceQueue20.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean31 = charSequenceQueue23.isEmpty();
        boolean boolean33 = charSequenceQueue23.remove((java.lang.Object) 10.0d);
        charSequenceQueue23.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue23.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean37 = charSequenceQueue36.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean46 = charSequenceQueue39.add((java.lang.CharSequence) "");
        charSequenceQueue39.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue39.stream();
        charSequenceQueue39.clear();
        boolean boolean50 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue52.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue52.stream();
        java.lang.Class<?> wildcardClass58 = charSequenceStream57.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.lang.Class<?> wildcardClass61 = charSequenceQueue60.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(100);
        java.lang.Class<?> wildcardClass64 = charSequenceQueue63.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray65 = new java.lang.reflect.GenericDeclaration[] { wildcardClass58, wildcardClass61, wildcardClass64 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray66 = charSequenceQueue39.toArray(genericDeclarationArray65);
        boolean boolean67 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue23.parallelStream();
        boolean boolean69 = charSequenceQueue20.remove((java.lang.Object) charSequenceStream68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertNotNull(genericDeclarationArray65);
        org.junit.Assert.assertNotNull(genericDeclarationArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        int int8 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue10.parallelStream();
        boolean boolean13 = charSequenceQueue10.contains((java.lang.Object) 1.0d);
        boolean boolean14 = charSequenceQueue10.isFull();
        boolean boolean15 = charSequenceQueue10.isFull();
        int int16 = charSequenceQueue10.maxSize();
        int int17 = charSequenceQueue10.maxSize();
        boolean boolean19 = charSequenceQueue10.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean20 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue10.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue10.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "hi!" + "'", charSequence7, "hi!");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 52 + "'", int16 == 52);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 52 + "'", int17 == 52);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceStream23);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence2 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence7 = charSequenceQueue4.element();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean25 = charSequenceQueue4.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        boolean boolean43 = charSequenceQueue4.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.lang.CharSequence charSequence45 = charSequenceQueue41.peek();
        java.lang.String str46 = charSequenceQueue41.toString();
        boolean boolean47 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean49 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        boolean boolean51 = charSequenceQueue1.add((java.lang.CharSequence) "[, []]");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        int int56 = charSequenceQueue54.maxSize();
        boolean boolean57 = charSequenceQueue54.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor58 = charSequenceQueue54.iterator();
        boolean boolean59 = charSequenceQueue1.remove((java.lang.Object) charSequenceItor58);
        org.junit.Assert.assertNull(charSequence2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "hi!" + "'", charSequence45, "hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 32 + "'", int56 == 32);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean11 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue1.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[, hi!]" + "'", charSequence12, "[, hi!]");
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue35.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue35.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.lang.CharSequence charSequence41 = charSequenceQueue39.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue39.contains((java.lang.Object) charSequenceQueue43);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue39.iterator();
        boolean boolean48 = charSequenceQueue35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.lang.CharSequence charSequence49 = charSequenceQueue35.poll();
        int int50 = charSequenceQueue35.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue52.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue52.spliterator();
        boolean boolean56 = charSequenceQueue52.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence57 = charSequenceQueue52.poll();
        boolean boolean58 = charSequenceQueue52.isFull();
        boolean boolean59 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        boolean boolean60 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.lang.String str61 = charSequenceQueue52.toString();
        java.lang.Class<?> wildcardClass62 = charSequenceQueue52.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[]" + "'", str61, "[]");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean6 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        int int9 = charSequenceQueue1.size();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        int int36 = charSequenceQueue31.size();
        boolean boolean37 = charSequenceList12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence charSequence50 = charSequenceQueue46.poll();
        boolean boolean51 = charSequenceQueue46.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        boolean boolean66 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean80 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean81 = charSequenceList61.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean82 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor83 = charSequenceQueue46.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor84 = charSequenceQueue46.iterator();
        boolean boolean85 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean89 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        boolean boolean91 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        boolean boolean93 = charSequenceQueue87.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.CharSequence charSequence94 = charSequenceQueue87.poll();
        boolean boolean95 = charSequenceQueue31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue87);
        boolean boolean96 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean97 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        int int98 = charSequenceQueue31.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(charSequenceItor83);
        org.junit.Assert.assertNotNull(charSequenceItor84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertEquals("'" + charSequence94 + "' != '" + "" + "'", charSequence94, "");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + 2 + "'", int98 == 2);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue12.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean19 = charSequenceQueue12.contains((java.lang.Object) charSequenceQueue16);
        boolean boolean20 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.Object[] objArray21 = charSequenceQueue12.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.String str7 = charSequenceQueue1.toString();
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        charSequenceQueue11.clear();
        boolean boolean16 = charSequenceQueue11.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence35 = charSequenceQueue31.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue31.parallelStream();
        boolean boolean37 = charSequenceQueue11.contains((java.lang.Object) charSequenceStream36);
        java.lang.CharSequence charSequence38 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue11.parallelStream();
        boolean boolean40 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor52 = charSequenceQueue48.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.peek();
        boolean boolean55 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceItor52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.String str49 = charSequenceQueue46.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue46.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue46.spliterator();
        boolean boolean52 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue54.stream();
        java.lang.Comparable[][][][] comparableArray57 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray58 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray57;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray59 = charSequenceQueue54.toArray(strComparableArray58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue54.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue62.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        boolean boolean69 = charSequenceQueue62.contains((java.lang.Object) charSequenceQueue66);
        java.lang.CharSequence charSequence70 = charSequenceQueue62.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue72.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue72.spliterator();
        boolean boolean76 = charSequenceQueue72.add((java.lang.CharSequence) "");
        boolean boolean77 = charSequenceQueue72.isAtFullCapacity();
        int int78 = charSequenceQueue72.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue72.spliterator();
        boolean boolean80 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        int int81 = charSequenceQueue62.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor82 = charSequenceQueue62.iterator();
        boolean boolean83 = charSequenceQueue54.contains((java.lang.Object) charSequenceQueue62);
        boolean boolean84 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertNotNull(comparableArray57);
        org.junit.Assert.assertNotNull(strComparableArray58);
        org.junit.Assert.assertNotNull(strComparableArray59);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 10 + "'", int78 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
        org.junit.Assert.assertNotNull(charSequenceItor82);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean30 = charSequenceQueue1.isEmpty();
        boolean boolean31 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Iterator<java.lang.CharSequence>> charSequenceItorQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Iterator<java.lang.CharSequence>>((int) (byte) 1);
        boolean boolean34 = charSequenceQueue1.remove((java.lang.Object) (byte) 1);
        int int35 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        int int68 = charSequenceQueue63.maxSize();
        boolean boolean69 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean71 = charSequenceQueue63.offer((java.lang.CharSequence) "hi!");
        boolean boolean72 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.CharSequence charSequence73 = charSequenceQueue1.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNull(charSequence73);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue11.parallelStream();
        boolean boolean14 = charSequenceQueue11.contains((java.lang.Object) 1.0d);
        boolean boolean16 = charSequenceQueue11.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence17 = charSequenceQueue11.element();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean20 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        boolean boolean21 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "[hi!]" + "'", charSequence17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        int int23 = charSequenceQueue19.size();
        java.lang.Class<?> wildcardClass24 = charSequenceQueue19.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue1.iterator();
        boolean boolean15 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean16 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence18 = charSequenceQueue1.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.maxSize();
        java.lang.CharSequence charSequence43 = charSequenceQueue38.poll();
        boolean boolean45 = charSequenceQueue38.offer((java.lang.CharSequence) "[[hi!]]");
        boolean boolean46 = charSequenceQueue38.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "hi!" + "'", charSequence43, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.lang.CharSequence charSequence13 = charSequenceQueue7.get(0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue7.iterator();
        boolean boolean15 = charSequenceQueue7.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue7.parallelStream();
        boolean boolean18 = charSequenceQueue7.offer((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.stream();
        boolean boolean27 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence55 = charSequenceQueue52.peek();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList58.contains(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceList64.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean72 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean73 = charSequenceQueue52.remove((java.lang.Object) charSequenceQueue70);
        boolean boolean74 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.lang.CharSequence charSequence78 = charSequenceQueue76.peek();
        boolean boolean79 = charSequenceQueue76.isFull();
        boolean boolean80 = charSequenceQueue70.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue76.spliterator();
        charSequenceQueue76.clear();
        boolean boolean83 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        boolean boolean85 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNull(charSequence78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.String str30 = charSequenceQueue7.toString();
        boolean boolean32 = charSequenceQueue7.offer((java.lang.CharSequence) "[]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue34.element();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean55 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList58.contains(obj60);
        java.lang.String str62 = charSequenceList58.toString();
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList65 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65, charSequenceArray64);
        java.lang.Object obj67 = null;
        boolean boolean68 = charSequenceList65.contains(obj67);
        java.lang.String str69 = charSequenceList65.toString();
        boolean boolean70 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList65);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream72 = charSequenceQueue71.stream();
        boolean boolean73 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        java.lang.String str74 = charSequenceQueue71.toString();
        int int75 = charSequenceQueue71.size();
        java.lang.Object[] objArray76 = charSequenceQueue71.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue78.parallelStream();
        boolean boolean81 = charSequenceQueue78.contains((java.lang.Object) 1.0d);
        boolean boolean82 = charSequenceQueue78.isFull();
        boolean boolean83 = charSequenceQueue78.isFull();
        int int84 = charSequenceQueue78.maxSize();
        int int85 = charSequenceQueue78.maxSize();
        java.lang.CharSequence charSequence86 = charSequenceQueue78.peek();
        boolean boolean87 = charSequenceQueue71.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean88 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue78);
        int int89 = charSequenceQueue78.maxSize();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence91 = charSequenceQueue78.get(2);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (2) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[, , , hi!]" + "'", str30, "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[hi!]" + "'", str62, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[hi!]" + "'", str69, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceStream72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!]" + "'", str74, "[hi!]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNotNull(objArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray76), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray76), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 52 + "'", int84 == 52);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 52 + "'", int85 == 52);
        org.junit.Assert.assertNull(charSequence86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.String str8 = charSequenceQueue1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[, hi!]" + "'", str8, "[, hi!]");
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        boolean boolean47 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean48 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean49 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean50 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean51 = charSequenceList16.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean52 = charSequenceQueue1.remove((java.lang.Object) boolean51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str55 = charSequenceQueue54.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList62 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.lang.Object obj64 = null;
        boolean boolean65 = charSequenceList62.contains(obj64);
        java.lang.String str66 = charSequenceList62.toString();
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList69 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = charSequenceList69.contains(obj71);
        java.lang.String str73 = charSequenceList69.toString();
        boolean boolean74 = charSequenceList62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean75 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList78 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = charSequenceList78.contains(obj80);
        java.lang.String str82 = charSequenceList78.toString();
        boolean boolean83 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean84 = charSequenceQueue54.contains((java.lang.Object) charSequenceList78);
        int int85 = charSequenceQueue54.maxSize();
        boolean boolean86 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.String str87 = charSequenceQueue54.toString();
        boolean boolean88 = charSequenceQueue54.isEmpty();
        java.lang.String str89 = charSequenceQueue54.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor90 = charSequenceQueue54.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[]" + "'", str55, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!]" + "'", str66, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!]" + "'", str73, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[hi!]" + "'", str82, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[]" + "'", str87, "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[]" + "'", str89, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor90);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.Object[] objArray58 = charSequenceQueue50.toArray();
        java.lang.CharSequence charSequence59 = charSequenceQueue50.element();
        java.lang.CharSequence charSequence61 = charSequenceQueue50.get((int) (short) 1);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue50.stream();
        charSequenceQueue50.clear();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertNotNull(charSequenceStream62);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue49.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue49.parallelStream();
        boolean boolean55 = charSequenceQueue49.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue49.spliterator();
        boolean boolean57 = charSequenceQueue40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        java.lang.CharSequence charSequence58 = charSequenceQueue49.poll();
        int int59 = charSequenceQueue49.size();
        charSequenceQueue49.clear();
        java.lang.Object[] objArray61 = charSequenceQueue49.toArray();
        boolean boolean62 = charSequenceQueue7.remove((java.lang.Object) objArray61);
        java.lang.Object[] objArray63 = charSequenceQueue7.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean13 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue17.stream();
        boolean boolean19 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence23 = charSequenceQueue17.poll();
        java.lang.CharSequence charSequence24 = charSequenceQueue17.peek();
        boolean boolean26 = charSequenceQueue17.offer((java.lang.CharSequence) "[, hi!]");
        int int27 = charSequenceQueue17.size();
        java.lang.CharSequence charSequence28 = charSequenceQueue17.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertNull(charSequence24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "[, hi!]" + "'", charSequence28, "[, hi!]");
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray8 = charSequenceQueue5.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue5.iterator();
        boolean boolean10 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue5);
        java.lang.CharSequence charSequence11 = charSequenceQueue5.remove();
        boolean boolean12 = charSequenceQueue5.isFull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceQueue5.get(32);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor58 = charSequenceQueue1.iterator();
        int int59 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        charSequenceQueue1.clear();
        java.lang.String str9 = charSequenceQueue1.toString();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[]" + "'", str9, "[]");
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean30 = charSequenceQueue1.isEmpty();
        boolean boolean31 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Iterator<java.lang.CharSequence>> charSequenceItorQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Iterator<java.lang.CharSequence>>((int) (byte) 1);
        boolean boolean34 = charSequenceQueue1.remove((java.lang.Object) (byte) 1);
        int int35 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.lang.Object obj51 = null;
        boolean boolean52 = charSequenceList49.contains(obj51);
        java.lang.String str53 = charSequenceList49.toString();
        boolean boolean54 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean55 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean56 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[[[hi!], [, hi!]]]", "[, [hi!]]", "[, [hi!]]", "[, ]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64, charSequenceArray63);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceQueue64.iterator();
        boolean boolean67 = charSequenceList42.remove((java.lang.Object) charSequenceItor66);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[hi!]" + "'", str53, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceItor66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(charSequence7);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence12 = charSequenceQueue7.remove();
        boolean boolean14 = charSequenceQueue7.offer((java.lang.CharSequence) "[, [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.String str7 = charSequenceQueue1.toString();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.CharSequence charSequence20 = charSequenceQueue16.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue16.parallelStream();
        boolean boolean22 = charSequenceQueue16.isEmpty();
        boolean boolean23 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean24 = charSequenceQueue1.contains((java.lang.Object) boolean23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.stream();
        java.lang.Class<?> wildcardClass26 = charSequenceQueue1.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean34 = charSequenceList27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue36.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue36.spliterator();
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue36.isAtFullCapacity();
        java.lang.CharSequence charSequence42 = charSequenceQueue36.element();
        int int43 = charSequenceQueue36.size();
        boolean boolean44 = charSequenceList27.remove((java.lang.Object) charSequenceQueue36);
        java.lang.String str45 = charSequenceList27.toString();
        boolean boolean46 = charSequenceQueue22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue22.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        boolean boolean9 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean10 = charSequenceQueue1.isEmpty();
        boolean boolean12 = charSequenceQueue1.offer((java.lang.CharSequence) "[, , [, ]]");
        int int13 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        int int24 = charSequenceQueue16.size();
        int int25 = charSequenceQueue16.maxSize();
        java.lang.String str26 = charSequenceQueue16.toString();
        int int27 = charSequenceQueue16.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean49 = charSequenceList35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean50 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence55 = charSequenceQueue52.peek();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList58.contains(obj60);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceList64.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean72 = charSequenceList58.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean73 = charSequenceQueue52.remove((java.lang.Object) charSequenceQueue70);
        boolean boolean74 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.lang.CharSequence charSequence78 = charSequenceQueue76.peek();
        boolean boolean79 = charSequenceQueue76.isFull();
        boolean boolean80 = charSequenceQueue70.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue76.spliterator();
        java.util.AbstractList[][] abstractListArray83 = new java.util.AbstractList[0][];
        @SuppressWarnings("unchecked")
        java.util.AbstractList<java.lang.CharSequence>[][] charSequenceListArray84 = (java.util.AbstractList<java.lang.CharSequence>[][]) abstractListArray83;
        java.util.AbstractList<java.lang.CharSequence>[][] charSequenceListArray85 = charSequenceQueue76.toArray(charSequenceListArray84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.CharSequence>[][] charSequenceCollectionArray86 = charSequenceQueue16.toArray((java.util.AbstractCollection<java.lang.CharSequence>[][]) charSequenceListArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[, hi!]" + "'", str26, "[, hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNull(charSequence78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertNotNull(abstractListArray83);
        org.junit.Assert.assertNotNull(charSequenceListArray84);
        org.junit.Assert.assertNotNull(charSequenceListArray85);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue40.spliterator();
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue40.poll();
        boolean boolean46 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.CharSequence charSequence47 = charSequenceQueue35.remove();
        boolean boolean48 = charSequenceQueue35.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue50.parallelStream();
        boolean boolean52 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean53 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        boolean boolean59 = charSequenceQueue55.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue55.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        charSequenceQueue55.clear();
        boolean boolean64 = charSequenceQueue50.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean66 = charSequenceQueue55.offer((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue68.parallelStream();
        boolean boolean71 = charSequenceQueue68.contains((java.lang.Object) 1.0d);
        boolean boolean72 = charSequenceQueue68.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue68.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue68.parallelStream();
        java.lang.CharSequence charSequence75 = charSequenceQueue68.peek();
        boolean boolean76 = charSequenceQueue55.contains((java.lang.Object) charSequenceQueue68);
        boolean boolean78 = charSequenceQueue68.add((java.lang.CharSequence) "[[hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertNull(charSequence75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "hi!");
        int int34 = charSequenceQueue29.maxSize();
        boolean boolean35 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean42 = charSequenceQueue37.add((java.lang.CharSequence) "");
        boolean boolean43 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.CharSequence charSequence44 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = charSequenceQueue45.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean55 = charSequenceQueue48.add((java.lang.CharSequence) "");
        charSequenceQueue48.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue48.stream();
        charSequenceQueue48.clear();
        boolean boolean59 = charSequenceQueue45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean60 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean61 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean62 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence charSequence63 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(charSequence63);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 1);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor2 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.BoundedCollection[] boundedCollectionArray4 = new org.apache.commons.collections4.BoundedCollection[0];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[] charSequenceCollectionArray5 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[]) boundedCollectionArray4;
        org.apache.commons.collections4.BoundedCollection[] boundedCollectionArray7 = new org.apache.commons.collections4.BoundedCollection[0];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[] charSequenceCollectionArray8 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[]) boundedCollectionArray7;
        org.apache.commons.collections4.BoundedCollection[] boundedCollectionArray10 = new org.apache.commons.collections4.BoundedCollection[0];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[] charSequenceCollectionArray11 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[]) boundedCollectionArray10;
        org.apache.commons.collections4.BoundedCollection[] boundedCollectionArray13 = new org.apache.commons.collections4.BoundedCollection[0];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[] charSequenceCollectionArray14 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[]) boundedCollectionArray13;
        org.apache.commons.collections4.BoundedCollection[] boundedCollectionArray16 = new org.apache.commons.collections4.BoundedCollection[0];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[] charSequenceCollectionArray17 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[]) boundedCollectionArray16;
        org.apache.commons.collections4.BoundedCollection[][] boundedCollectionArray19 = new org.apache.commons.collections4.BoundedCollection[5][];
        @SuppressWarnings("unchecked")
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[][] charSequenceCollectionArray20 = (org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[][]) boundedCollectionArray19;
        charSequenceCollectionArray20[0] = boundedCollectionArray4;
        charSequenceCollectionArray20[1] = boundedCollectionArray7;
        charSequenceCollectionArray20[2] = boundedCollectionArray10;
        charSequenceCollectionArray20[3] = charSequenceCollectionArray14;
        charSequenceCollectionArray20[4] = charSequenceCollectionArray17;
        org.apache.commons.collections4.BoundedCollection<java.lang.CharSequence>[][] charSequenceCollectionArray31 = charSequenceQueue1.toArray(charSequenceCollectionArray20);
        org.junit.Assert.assertNotNull(charSequenceItor2);
        org.junit.Assert.assertNotNull(boundedCollectionArray4);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray5);
        org.junit.Assert.assertNotNull(boundedCollectionArray7);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray8);
        org.junit.Assert.assertNotNull(boundedCollectionArray10);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray11);
        org.junit.Assert.assertNotNull(boundedCollectionArray13);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray14);
        org.junit.Assert.assertNotNull(boundedCollectionArray16);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray17);
        org.junit.Assert.assertNotNull(boundedCollectionArray19);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray20);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray31);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.Object[] objArray13 = charSequenceQueue1.toArray();
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceQueue1.contains(obj14);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        boolean boolean25 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence26 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        charSequenceQueue28.clear();
        boolean boolean33 = charSequenceQueue28.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceList42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        charSequenceQueue48.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue48.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray56 = charSequenceQueue53.toArray();
        boolean boolean57 = charSequenceQueue48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.String str62 = charSequenceQueue59.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor63 = charSequenceQueue59.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue59.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence69 = charSequenceQueue66.peek();
        boolean boolean70 = charSequenceQueue59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean71 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean72 = charSequenceList37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean73 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        boolean boolean74 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean75 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[]" + "'", str62, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor63);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.Object[] objArray26 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[, ]");
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceList19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean28 = charSequenceQueue24.isAtFullCapacity();
        int int29 = charSequenceQueue24.maxSize();
        boolean boolean30 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean32 = charSequenceQueue11.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceQueue11.remove();
        boolean boolean34 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean35 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        boolean boolean50 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue51.stream();
        java.lang.CharSequence charSequence53 = charSequenceQueue51.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue51.stream();
        java.lang.Object[] objArray55 = charSequenceQueue51.toArray();
        boolean boolean56 = charSequenceQueue51.isFull();
        boolean boolean57 = charSequenceQueue1.remove((java.lang.Object) boolean56);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.String str7 = charSequenceQueue1.toString();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean10 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue9.parallelStream();
        boolean boolean15 = charSequenceQueue9.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue9.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        int int25 = charSequenceQueue19.size();
        boolean boolean26 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue19);
        java.lang.CharSequence charSequence27 = charSequenceQueue9.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = charSequenceQueue28.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue31.spliterator();
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue31.poll();
        boolean boolean38 = charSequenceQueue31.add((java.lang.CharSequence) "");
        charSequenceQueue31.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue31.stream();
        charSequenceQueue31.clear();
        boolean boolean42 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean43 = charSequenceQueue28.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor44 = charSequenceQueue28.iterator();
        boolean boolean45 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue28);
        boolean boolean46 = charSequenceQueue1.remove((java.lang.Object) boolean45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceStream47);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence28 = charSequenceQueue1.get((int) 'a');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (97) is outside the available range [0, 3)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceList26.contains(obj28);
        java.lang.String str30 = charSequenceList26.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.Object[] objArray34 = charSequenceQueue32.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue36.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean61 = charSequenceList47.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean62 = charSequenceQueue41.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean63 = charSequenceQueue36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.lang.Object[] objArray64 = charSequenceQueue36.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue66.spliterator();
        java.lang.CharSequence charSequence68 = charSequenceQueue66.peek();
        boolean boolean69 = charSequenceQueue66.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue66.stream();
        boolean boolean71 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        java.lang.String str72 = charSequenceQueue36.toString();
        boolean boolean73 = charSequenceQueue32.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.lang.Object[] objArray74 = charSequenceQueue36.toArray();
        boolean boolean75 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue36);
        boolean boolean76 = charSequenceQueue36.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream77 = charSequenceQueue36.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[hi!]" + "'", str30, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(objArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray34), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray34), "[]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertNull(charSequence68);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceStream77);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        int int9 = charSequenceQueue7.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray14 = charSequenceQueue11.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue11.iterator();
        boolean boolean16 = charSequenceQueue7.remove((java.lang.Object) charSequenceQueue11);
        java.lang.CharSequence charSequence17 = charSequenceQueue11.poll();
        boolean boolean18 = charSequenceList2.contains((java.lang.Object) charSequenceQueue11);
        java.lang.Object[] objArray19 = charSequenceQueue11.toArray();
        java.lang.Class<?> wildcardClass20 = charSequenceQueue11.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(objArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray14), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray14), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        charSequenceQueue30.clear();
        boolean boolean35 = charSequenceQueue30.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean42 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean43 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor44 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue46.spliterator();
        java.lang.CharSequence charSequence48 = charSequenceQueue46.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceQueue46.contains((java.lang.Object) charSequenceQueue50);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue55.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue55.parallelStream();
        boolean boolean61 = charSequenceQueue55.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue55.spliterator();
        boolean boolean63 = charSequenceQueue46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        java.lang.CharSequence charSequence64 = charSequenceQueue55.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue55.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue66.iterator();
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.Object obj72 = null;
        boolean boolean73 = charSequenceList70.contains(obj72);
        java.lang.String str74 = charSequenceList70.toString();
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList77 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77, charSequenceArray76);
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceList77.contains(obj79);
        java.lang.String str81 = charSequenceList77.toString();
        boolean boolean82 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList77);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue84 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean86 = charSequenceQueue84.offer((java.lang.CharSequence) "");
        boolean boolean88 = charSequenceQueue84.add((java.lang.CharSequence) "hi!");
        int int89 = charSequenceQueue84.maxSize();
        boolean boolean90 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator91 = charSequenceQueue84.spliterator();
        boolean boolean92 = charSequenceQueue84.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream93 = charSequenceQueue84.stream();
        boolean boolean94 = charSequenceQueue66.contains((java.lang.Object) charSequenceQueue84);
        boolean boolean95 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        java.lang.CharSequence charSequence96 = charSequenceQueue1.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceItor44);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "[hi!]" + "'", str74, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "[hi!]" + "'", str81, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(charSequenceStream93);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertEquals("'" + charSequence96 + "' != '" + "" + "'", charSequence96, "");
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        boolean boolean12 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        int int13 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 10 + "'", int13 == 10);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        java.lang.String str32 = charSequenceQueue1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[]" + "'", str32, "[]");
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        java.lang.Object obj12 = null;
        boolean boolean13 = charSequenceList10.contains(obj12);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean23 = charSequenceList16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean24 = charSequenceList10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceList10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean47 = charSequenceList30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean48 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.String[] strArray52 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray56 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray60 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray64 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.Comparable[][] comparableArray66 = new java.lang.Comparable[4][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray67 = (java.lang.Comparable<java.lang.String>[][]) comparableArray66;
        strComparableArray67[0] = strArray52;
        strComparableArray67[1] = strArray56;
        strComparableArray67[2] = strArray60;
        strComparableArray67[3] = strArray64;
        java.lang.Comparable<java.lang.String>[][] strComparableArray76 = charSequenceQueue46.toArray(strComparableArray67);
        boolean boolean77 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor78 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(comparableArray66);
        org.junit.Assert.assertNotNull(strComparableArray67);
        org.junit.Assert.assertNotNull(strComparableArray76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceItor78);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.stream();
        java.lang.String str31 = charSequenceQueue29.toString();
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue40.iterator();
        boolean boolean49 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        java.lang.CharSequence charSequence72 = charSequenceQueue57.get((int) (short) 0);
        boolean boolean73 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean76 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean77 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean79 = charSequenceQueue7.add((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        boolean boolean81 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!]]");
        boolean boolean82 = charSequenceQueue7.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        boolean boolean45 = charSequenceQueue27.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean46 = charSequenceQueue25.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean47 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean48 = charSequenceList13.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean49 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence50 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.String str30 = charSequenceQueue7.toString();
        boolean boolean32 = charSequenceQueue7.offer((java.lang.CharSequence) "[]");
        boolean boolean33 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceQueue35.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean42 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence charSequence43 = charSequenceQueue7.element();
        boolean boolean45 = charSequenceQueue7.offer((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[, , , hi!]" + "'", str30, "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.Object[] objArray23 = charSequenceQueue16.toArray();
        boolean boolean24 = charSequenceQueue16.isFull();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29, charSequenceArray28);
        boolean boolean31 = charSequenceQueue29.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue34.poll();
        boolean boolean40 = charSequenceQueue29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence charSequence41 = charSequenceQueue29.remove();
        boolean boolean42 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray54 = charSequenceList45.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.String[] strArray55 = charSequenceQueue21.toArray(strArray53);
        java.lang.String[] strArray56 = charSequenceQueue17.toArray(strArray55);
        java.lang.Comparable<java.lang.String>[] strComparableArray57 = charSequenceQueue12.toArray((java.lang.Comparable<java.lang.String>[]) strArray55);
        boolean boolean58 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence63 = charSequenceQueue60.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue60.parallelStream();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList68 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue73.isAtFullCapacity();
        boolean boolean76 = charSequenceList68.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean77 = charSequenceQueue73.isAtFullCapacity();
        int int78 = charSequenceQueue73.maxSize();
        boolean boolean79 = charSequenceQueue60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean81 = charSequenceQueue60.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence82 = charSequenceQueue60.remove();
        boolean boolean83 = charSequenceQueue60.isEmpty();
        boolean boolean84 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean85 = charSequenceQueue12.contains((java.lang.Object) boolean84);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue12.stream();
        int int87 = charSequenceQueue12.size();
        boolean boolean89 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strComparableArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strComparableArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 32 + "'", int78 == 32);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "" + "'", charSequence82, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 2 + "'", int87 == 2);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29, charSequenceArray28);
        boolean boolean31 = charSequenceQueue29.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue34.poll();
        boolean boolean40 = charSequenceQueue29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.Object[] objArray41 = charSequenceQueue34.toArray();
        boolean boolean42 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        int int43 = charSequenceQueue34.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue45.spliterator();
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue45.isAtFullCapacity();
        int int51 = charSequenceQueue45.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue45.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        boolean boolean59 = charSequenceQueue54.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue54.iterator();
        java.lang.Object[] objArray61 = charSequenceQueue54.toArray();
        boolean boolean62 = charSequenceQueue45.remove((java.lang.Object) objArray61);
        java.lang.CharSequence charSequence63 = charSequenceQueue45.remove();
        java.lang.String str64 = charSequenceQueue45.toString();
        boolean boolean65 = charSequenceQueue34.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceQueue34.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10 + "'", int43 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[]" + "'", str64, "[]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceItor66);
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceList22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean40 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue18.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(charSequence41);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.stream();
        boolean boolean27 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        boolean boolean28 = charSequenceQueue1.isEmpty();
        int int29 = charSequenceQueue1.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 52 + "'", int29 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor30);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        boolean boolean33 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue40.spliterator();
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "");
        java.lang.String str45 = charSequenceQueue40.toString();
        java.lang.CharSequence charSequence46 = charSequenceQueue40.element();
        java.lang.CharSequence charSequence47 = charSequenceQueue40.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue49.stream();
        java.lang.Comparable[][][][] comparableArray52 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray53 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray52;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray54 = charSequenceQueue49.toArray(strComparableArray53);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray55 = charSequenceQueue40.toArray(strComparableArray54);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Comparable<java.lang.String>[][][][] strComparableArray56 = charSequenceQueue1.toArray(strComparableArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertNotNull(comparableArray52);
        org.junit.Assert.assertNotNull(strComparableArray53);
        org.junit.Assert.assertNotNull(strComparableArray54);
        org.junit.Assert.assertNotNull(strComparableArray55);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        int int9 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray10 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.String str10 = charSequenceQueue1.toString();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.peek();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[, ]" + "'", str10, "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.Object[] objArray16 = charSequenceList9.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean26 = charSequenceQueue18.isEmpty();
        boolean boolean28 = charSequenceQueue18.remove((java.lang.Object) 10.0d);
        charSequenceQueue18.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int32 = charSequenceQueue31.maxSize();
        boolean boolean33 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue31);
        boolean boolean34 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue18.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue46.parallelStream();
        boolean boolean52 = charSequenceQueue46.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue46.spliterator();
        boolean boolean54 = charSequenceQueue37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean55 = charSequenceQueue46.isFull();
        java.lang.CharSequence charSequence56 = charSequenceQueue46.peek();
        int int57 = charSequenceQueue46.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue59.parallelStream();
        boolean boolean62 = charSequenceQueue59.contains((java.lang.Object) 1.0d);
        boolean boolean63 = charSequenceQueue59.isFull();
        boolean boolean64 = charSequenceQueue59.isFull();
        boolean boolean65 = charSequenceQueue59.isFull();
        boolean boolean66 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean67 = charSequenceQueue59.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue75.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean83 = charSequenceQueue81.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue81.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceQueue81.parallelStream();
        boolean boolean87 = charSequenceQueue81.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceQueue81.spliterator();
        boolean boolean89 = charSequenceQueue81.isAtFullCapacity();
        boolean boolean90 = charSequenceQueue75.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceQueue81.parallelStream();
        boolean boolean92 = charSequenceQueue59.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        boolean boolean93 = charSequenceQueue18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = charSequenceQueue59.get(32);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (32) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 52 + "'", int57 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.size();
        int int7 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 2 + "'", int6 == 2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        charSequenceQueue8.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue34);
        int int38 = charSequenceQueue34.size();
        boolean boolean39 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        int int40 = charSequenceQueue8.size();
        java.lang.CharSequence charSequence41 = charSequenceQueue8.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertNotNull(charSequenceStream42);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        int int11 = charSequenceQueue1.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertNotNull(charSequenceStream12);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        int int11 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue19.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue19.spliterator();
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence37 = charSequenceQueue33.poll();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList48.contains(obj50);
        java.lang.String str52 = charSequenceList48.toString();
        boolean boolean53 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean66 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean67 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean68 = charSequenceList48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.Object[] objArray70 = charSequenceQueue33.toArray();
        boolean boolean71 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence72 = charSequenceQueue33.peek();
        boolean boolean73 = charSequenceQueue1.remove((java.lang.Object) charSequence72);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!]" + "'", str52, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceQueue1.spliterator();
        boolean boolean8 = charSequenceQueue1.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue19.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceQueue25.isAtFullCapacity();
        java.lang.CharSequence charSequence31 = charSequenceQueue25.element();
        int int32 = charSequenceQueue25.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue25.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue25.spliterator();
        boolean boolean35 = charSequenceQueue25.isFull();
        boolean boolean36 = charSequenceQueue25.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor37 = charSequenceQueue25.iterator();
        boolean boolean39 = charSequenceQueue25.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean40 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean41 = charSequenceQueue19.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 1 + "'", int32 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceItor37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence10 = charSequenceQueue1.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "[, hi!]" + "'", charSequence10, "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceItor11);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.CharSequence charSequence23 = charSequenceQueue16.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue16.remove();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "hi!" + "'", charSequence24, "hi!");
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceQueue7.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.remove();
        boolean boolean62 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean66 = charSequenceQueue64.offer((java.lang.CharSequence) "");
        charSequenceQueue64.clear();
        boolean boolean69 = charSequenceQueue64.remove((java.lang.Object) (-1.0d));
        int int70 = charSequenceQueue64.maxSize();
        boolean boolean71 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue64);
        java.lang.CharSequence charSequence72 = charSequenceQueue64.peek();
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceQueue64.remove(obj73);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 10 + "'", int70 == 10);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(charSequence72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        int int28 = charSequenceQueue23.maxSize();
        boolean boolean29 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        boolean boolean36 = charSequenceQueue31.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean38 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue31);
        java.lang.String str39 = charSequenceQueue1.toString();
        boolean boolean40 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean50 = charSequenceQueue42.isEmpty();
        java.lang.CharSequence charSequence51 = charSequenceQueue42.peek();
        java.lang.CharSequence charSequence53 = charSequenceQueue42.get((int) (byte) 1);
        boolean boolean54 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue61.element();
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList67 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList72 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72, charSequenceArray71);
        java.lang.CharSequence[] charSequenceArray76 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77, charSequenceArray76);
        boolean boolean79 = charSequenceQueue77.isAtFullCapacity();
        boolean boolean80 = charSequenceList72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean81 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean82 = charSequenceQueue61.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        boolean boolean83 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList72);
        java.lang.Object[] objArray84 = charSequenceQueue56.toArray();
        java.lang.Object[] objArray85 = charSequenceQueue56.toArray();
        java.lang.CharSequence charSequence86 = charSequenceQueue56.element();
        charSequenceQueue56.clear();
        boolean boolean88 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream89 = charSequenceQueue42.parallelStream();
        java.lang.CharSequence[] charSequenceArray94 = new java.lang.CharSequence[] { "[, [hi!, hi!]]", "[]", "[, [[, , , hi!]]]", "[hi!]" };
        java.lang.CharSequence[] charSequenceArray95 = charSequenceQueue42.toArray(charSequenceArray94);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[, hi!]" + "'", str39, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "hi!" + "'", charSequence53, "hi!");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(objArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray84), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray84), "[]");
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(charSequenceStream89);
        org.junit.Assert.assertNotNull(charSequenceArray94);
        org.junit.Assert.assertNotNull(charSequenceArray95);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "hi!");
        int int34 = charSequenceQueue29.maxSize();
        boolean boolean35 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean42 = charSequenceQueue37.add((java.lang.CharSequence) "");
        boolean boolean43 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.CharSequence charSequence44 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = charSequenceQueue45.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean55 = charSequenceQueue48.add((java.lang.CharSequence) "");
        charSequenceQueue48.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue48.stream();
        charSequenceQueue48.clear();
        boolean boolean59 = charSequenceQueue45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean60 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean61 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.Object[] objArray62 = charSequenceQueue8.toArray();
        boolean boolean63 = charSequenceQueue8.isFull();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 52 + "'", int34 == 52);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(objArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray62), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray62), "[]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        int int13 = charSequenceQueue1.size();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = charSequenceList51.contains(obj53);
        java.lang.String str55 = charSequenceList51.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean58 = charSequenceList51.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean59 = charSequenceList45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean60 = charSequenceQueue39.remove((java.lang.Object) charSequenceQueue57);
        boolean boolean61 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        boolean boolean66 = charSequenceQueue63.isFull();
        boolean boolean67 = charSequenceQueue57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceQueue69.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue69.spliterator();
        boolean boolean73 = charSequenceQueue69.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence74 = charSequenceQueue69.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue69.parallelStream();
        boolean boolean76 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        charSequenceQueue69.clear();
        boolean boolean79 = charSequenceQueue69.add((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceQueue69.parallelStream();
        boolean boolean81 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!]" + "'", str55, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "" + "'", charSequence74, "");
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        boolean boolean14 = charSequenceQueue8.isAtFullCapacity();
        int int15 = charSequenceQueue8.maxSize();
        int int16 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue19.spliterator();
        boolean boolean23 = charSequenceQueue19.add((java.lang.CharSequence) "");
        boolean boolean24 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.Object[] objArray25 = charSequenceQueue19.toArray();
        java.lang.CharSequence charSequence27 = charSequenceQueue19.get((int) (short) 0);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Iterable<java.lang.CharSequence>> charSequenceIterableQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Iterable<java.lang.CharSequence>>();
        java.lang.Class<?> wildcardClass1 = charSequenceIterableQueue0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        charSequenceQueue15.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        charSequenceQueue27.clear();
        boolean boolean32 = charSequenceQueue27.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        boolean boolean38 = charSequenceQueue27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceQueue40.element();
        boolean boolean44 = charSequenceQueue40.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean46 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "[[[hi!], [, hi!]]]", "[, , hi!]", "[[[hi!], [, hi!]]]", "[, [hi!]]", "[, [hi!]]", "[, ]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15, charSequenceArray14);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceQueue15.iterator();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) charSequenceItor17);
        java.lang.Class<?> wildcardClass19 = charSequenceQueue1.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue7.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray19 = charSequenceQueue16.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue16.iterator();
        boolean boolean21 = charSequenceQueue16.isFull();
        boolean boolean23 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceList26.contains(obj28);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean40 = charSequenceList26.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceList52.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean60 = charSequenceList46.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceList46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean64 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean65 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue67.parallelStream();
        boolean boolean70 = charSequenceQueue67.contains((java.lang.Object) 1.0d);
        boolean boolean71 = charSequenceQueue67.isFull();
        boolean boolean72 = charSequenceQueue67.isFull();
        int int73 = charSequenceQueue67.maxSize();
        int int74 = charSequenceQueue67.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean78 = charSequenceQueue76.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray81 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82, charSequenceArray81);
        boolean boolean84 = charSequenceQueue82.isAtFullCapacity();
        boolean boolean85 = charSequenceQueue76.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue76.stream();
        boolean boolean87 = charSequenceQueue67.contains((java.lang.Object) charSequenceStream86);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceQueue67.spliterator();
        int int89 = charSequenceQueue67.maxSize();
        boolean boolean90 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        boolean boolean91 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.Object[] objArray92 = charSequenceQueue62.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(objArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray19), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray19), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 52 + "'", int74 == 52);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 52 + "'", int89 == 52);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[]");
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.peek();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue31.stream();
        boolean boolean36 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.Object[] objArray37 = charSequenceQueue31.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue31.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue40.stream();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.Object obj50 = null;
        boolean boolean51 = charSequenceList48.contains(obj50);
        java.lang.String str52 = charSequenceList48.toString();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.Object obj57 = null;
        boolean boolean58 = charSequenceList55.contains(obj57);
        java.lang.String str59 = charSequenceList55.toString();
        boolean boolean60 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "hi!");
        int int67 = charSequenceQueue62.maxSize();
        boolean boolean68 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence73 = charSequenceQueue70.peek();
        boolean boolean75 = charSequenceQueue70.add((java.lang.CharSequence) "");
        boolean boolean76 = charSequenceList48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean77 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue70);
        java.lang.String str78 = charSequenceQueue40.toString();
        boolean boolean79 = charSequenceQueue40.isEmpty();
        boolean boolean80 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence82 = charSequenceQueue40.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (52) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(objArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray37), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray37), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[hi!]" + "'", str52, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!]" + "'", str59, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "[, hi!]" + "'", str78, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue14.contains((java.lang.Object) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue23.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue23.spliterator();
        boolean boolean31 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence charSequence32 = charSequenceQueue23.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue23.stream();
        java.lang.CharSequence charSequence34 = charSequenceQueue23.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue23.iterator();
        boolean boolean36 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.remove((java.lang.Object) 10.0d);
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int15 = charSequenceQueue14.maxSize();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.lang.CharSequence charSequence20 = charSequenceQueue18.peek();
        java.lang.String str21 = charSequenceQueue18.toString();
        boolean boolean22 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        boolean boolean23 = charSequenceQueue18.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNull(charSequence20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceItor9);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceList8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue21.parallelStream();
        boolean boolean24 = charSequenceQueue21.contains((java.lang.Object) 1.0d);
        boolean boolean25 = charSequenceQueue21.isFull();
        int int26 = charSequenceQueue21.size();
        boolean boolean27 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean28 = charSequenceQueue21.isFull();
        charSequenceQueue21.clear();
        int int30 = charSequenceQueue21.maxSize();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 52 + "'", int30 == 52);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue29.stream();
        java.lang.String str31 = charSequenceQueue29.toString();
        java.lang.CharSequence charSequence32 = charSequenceQueue29.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean38 = charSequenceQueue34.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue40.iterator();
        boolean boolean49 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceQueue51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        boolean boolean68 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        java.lang.CharSequence charSequence72 = charSequenceQueue57.get((int) (short) 0);
        boolean boolean73 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean76 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean77 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue78.spliterator();
        java.lang.CharSequence charSequence80 = charSequenceQueue78.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "hi!" + "'", charSequence32, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "" + "'", charSequence80, "");
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue12.iterator();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        boolean boolean35 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue36.stream();
        java.lang.String str38 = charSequenceQueue36.toString();
        java.lang.CharSequence charSequence39 = charSequenceQueue36.element();
        int int40 = charSequenceQueue36.maxSize();
        boolean boolean41 = charSequenceQueue36.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue36.stream();
        boolean boolean43 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        int int44 = charSequenceQueue12.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.lang.String str43 = charSequenceQueue38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        java.lang.String str47 = charSequenceQueue45.toString();
        boolean boolean49 = charSequenceQueue45.contains((java.lang.Object) 10.0d);
        boolean boolean50 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean51 = charSequenceQueue45.isFull();
        boolean boolean53 = charSequenceQueue45.add((java.lang.CharSequence) "[, ]");
        java.lang.CharSequence charSequence54 = charSequenceQueue45.poll();
        int int55 = charSequenceQueue45.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "[, ]" + "'", charSequence54, "[, ]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 52 + "'", int55 == 52);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        charSequenceQueue10.clear();
        java.lang.Object[] objArray21 = charSequenceQueue10.toArray();
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        charSequenceQueue10.clear();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceQueue27.peek();
        boolean boolean30 = charSequenceQueue8.contains((java.lang.Object) charSequenceQueue27);
        java.lang.String str31 = charSequenceQueue8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "hi!");
        int int38 = charSequenceQueue33.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor39 = charSequenceQueue33.iterator();
        java.lang.CharSequence charSequence40 = charSequenceQueue33.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        charSequenceQueue42.clear();
        boolean boolean47 = charSequenceQueue42.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        boolean boolean53 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.CharSequence charSequence66 = charSequenceQueue62.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue62.parallelStream();
        boolean boolean68 = charSequenceQueue42.contains((java.lang.Object) charSequenceStream67);
        java.lang.CharSequence charSequence69 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue42.parallelStream();
        boolean boolean71 = charSequenceQueue33.contains((java.lang.Object) charSequenceStream70);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean74 = charSequenceQueue33.offer((java.lang.CharSequence) "[[, ]]");
        boolean boolean75 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue33);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[, ]" + "'", str31, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 52 + "'", int38 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor39);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(charSequence69);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        java.lang.Object[] objArray39 = charSequenceQueue35.toArray();
        int int40 = charSequenceQueue35.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10 + "'", int40 == 10);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence19 = charSequenceQueue18.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue21.element();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean42 = charSequenceQueue21.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        boolean boolean57 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue58.stream();
        boolean boolean60 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        java.lang.CharSequence charSequence61 = charSequenceQueue58.element();
        java.lang.CharSequence charSequence62 = charSequenceQueue58.peek();
        java.lang.String str63 = charSequenceQueue58.toString();
        boolean boolean64 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean66 = charSequenceQueue18.add((java.lang.CharSequence) "[]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray73 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue74, charSequenceArray73);
        boolean boolean76 = charSequenceQueue74.isAtFullCapacity();
        boolean boolean77 = charSequenceQueue68.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue74);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceQueue79.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue79.spliterator();
        boolean boolean83 = charSequenceQueue79.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue79.poll();
        boolean boolean85 = charSequenceQueue74.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean86 = charSequenceQueue79.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceQueue79.stream();
        boolean boolean88 = charSequenceQueue79.isEmpty();
        boolean boolean89 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean90 = charSequenceQueue15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor91 = charSequenceQueue15.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "hi!" + "'", charSequence61, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(charSequenceArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceItor91);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue21.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue30.parallelStream();
        boolean boolean36 = charSequenceQueue30.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue30.spliterator();
        boolean boolean38 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.CharSequence charSequence39 = charSequenceQueue30.poll();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        int int44 = charSequenceQueue42.maxSize();
        boolean boolean45 = charSequenceQueue42.isFull();
        java.lang.String str46 = charSequenceQueue42.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.util.Queue[] queueArray67 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray68 = (java.util.Queue<java.lang.CharSequence>[]) queueArray67;
        charSequenceQueueArray68[0] = charSequenceQueue42;
        charSequenceQueueArray68[1] = charSequenceQueue59;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray73 = charSequenceQueue30.toArray(charSequenceQueueArray68);
        java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray74 = charSequenceQueue15.toArray((java.lang.Iterable<java.lang.CharSequence>[]) charSequenceQueueArray73);
        java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray75 = charSequenceQueue1.toArray(charSequenceIterableArray74);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream76 = charSequenceQueue1.parallelStream();
        boolean boolean77 = charSequenceQueue1.isEmpty();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence78 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(queueArray67);
        org.junit.Assert.assertNotNull(charSequenceQueueArray68);
        org.junit.Assert.assertNotNull(charSequenceQueueArray73);
        org.junit.Assert.assertNotNull(charSequenceIterableArray74);
        org.junit.Assert.assertNotNull(charSequenceIterableArray75);
        org.junit.Assert.assertNotNull(charSequenceStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        boolean boolean20 = charSequenceQueue16.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor21 = charSequenceQueue16.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceQueue25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue36.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue36.spliterator();
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue36.poll();
        boolean boolean42 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.lang.CharSequence charSequence43 = charSequenceQueue31.remove();
        boolean boolean44 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean45 = charSequenceQueue16.contains((java.lang.Object) charSequenceQueue23);
        java.lang.CharSequence charSequence46 = charSequenceQueue16.remove();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean59 = charSequenceQueue55.isAtFullCapacity();
        java.lang.Object[] objArray60 = charSequenceQueue55.toArray();
        boolean boolean62 = charSequenceQueue55.contains((java.lang.Object) false);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue55.spliterator();
        java.lang.Object[] objArray64 = charSequenceQueue55.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceQueue55.iterator();
        boolean boolean66 = charSequenceQueue16.contains((java.lang.Object) charSequenceQueue55);
        boolean boolean67 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean68 = charSequenceQueue16.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceItor21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        java.lang.String str13 = charSequenceQueue7.toString();
        boolean boolean14 = charSequenceQueue7.isFull();
        java.lang.Object[] objArray15 = charSequenceQueue7.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[, ]" + "'", str13, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[, ]");
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNull(charSequence54);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor22 = charSequenceQueue21.iterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue21.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceItor22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.String str16 = charSequenceList12.toString();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList19.contains(obj21);
        java.lang.String str23 = charSequenceList19.toString();
        boolean boolean24 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object[] objArray26 = charSequenceList19.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue28.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceQueue28.isEmpty();
        boolean boolean38 = charSequenceQueue28.remove((java.lang.Object) 10.0d);
        charSequenceQueue28.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int42 = charSequenceQueue41.maxSize();
        boolean boolean43 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue41);
        boolean boolean44 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52, charSequenceArray51);
        boolean boolean54 = charSequenceQueue52.isAtFullCapacity();
        boolean boolean55 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue52.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue52.spliterator();
        boolean boolean58 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue52.stream();
        java.lang.CharSequence charSequence60 = charSequenceQueue52.poll();
        boolean boolean61 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue52.stream();
        java.lang.CharSequence charSequence63 = charSequenceQueue52.element();
        boolean boolean65 = charSequenceQueue52.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!]" + "'", str16, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!]" + "'", str23, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        int int24 = charSequenceQueue3.maxSize();
        java.lang.CharSequence charSequence25 = charSequenceQueue3.poll();
        java.lang.String str26 = charSequenceQueue3.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceQueue3.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.lang.Object[] objArray5 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13, charSequenceArray12);
        boolean boolean15 = charSequenceQueue13.isAtFullCapacity();
        boolean boolean16 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor17 = charSequenceQueue13.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue13.spliterator();
        charSequenceQueue13.clear();
        int int20 = charSequenceQueue13.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue13.parallelStream();
        boolean boolean22 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue13.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceItor17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList2);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceList2.parallelStream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceList2.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean6 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.String str7 = charSequenceQueue1.toString();
        charSequenceQueue1.clear();
        java.lang.String[] strArray11 = new java.lang.String[] { "[hi!, hi!]", "[, , , hi!]" };
        java.lang.String[] strArray14 = new java.lang.String[] { "[hi!, hi!]", "[, , , hi!]" };
        java.lang.Comparable[][] comparableArray16 = new java.lang.Comparable[2][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray17 = (java.lang.Comparable<java.lang.String>[][]) comparableArray16;
        strComparableArray17[0] = strArray11;
        strComparableArray17[1] = strArray14;
        java.lang.Comparable<java.lang.String>[][] strComparableArray22 = charSequenceQueue1.toArray(strComparableArray17);
        java.lang.CharSequence charSequence23 = charSequenceQueue1.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[[hi!]]" + "'", str7, "[[hi!]]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(comparableArray16);
        org.junit.Assert.assertNotNull(strComparableArray17);
        org.junit.Assert.assertNotNull(strComparableArray22);
        org.junit.Assert.assertNull(charSequence23);
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence21 = charSequenceQueue12.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue12.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        int int25 = charSequenceQueue24.maxSize();
        java.lang.String str26 = charSequenceQueue24.toString();
        boolean boolean27 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 5 + "'", int25 == 5);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence11 = charSequenceQueue1.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNull(charSequence10);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int20 = charSequenceQueue7.maxSize();
        int int21 = charSequenceQueue7.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 32 + "'", int20 == 32);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2 + "'", int21 == 2);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        boolean boolean14 = charSequenceQueue8.isAtFullCapacity();
        int int15 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        boolean boolean18 = charSequenceQueue17.isAtFullCapacity();
        java.lang.String str19 = charSequenceQueue17.toString();
        boolean boolean20 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean22 = charSequenceQueue8.add((java.lang.CharSequence) "[, , , hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue5.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue5.parallelStream();
        boolean boolean14 = charSequenceQueue1.remove((java.lang.Object) charSequenceStream13);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean38 = charSequenceQueue31.isAtFullCapacity();
        java.lang.CharSequence charSequence39 = charSequenceQueue31.peek();
        boolean boolean40 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue31);
        java.lang.CharSequence charSequence41 = charSequenceQueue31.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue50.stream();
        java.lang.Object[] objArray59 = charSequenceQueue50.toArray();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(objArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray59), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray59), "[, ]");
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = charSequenceQueue11.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean21 = charSequenceQueue14.add((java.lang.CharSequence) "");
        charSequenceQueue14.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue14.stream();
        charSequenceQueue14.clear();
        boolean boolean25 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean26 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        boolean boolean29 = charSequenceQueue1.isAtFullCapacity();
        int int30 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        int int2 = charSequenceQueue1.maxSize();
        java.lang.Comparable[][][][][] comparableArray4 = new java.lang.Comparable[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray5 = (java.lang.Comparable<java.lang.String>[][][][][]) comparableArray4;
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray6 = charSequenceQueue1.toArray(strComparableArray5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue14.get(0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor21 = charSequenceQueue14.iterator();
        boolean boolean22 = charSequenceQueue14.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue14.parallelStream();
        boolean boolean24 = charSequenceQueue14.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue14.spliterator();
        boolean boolean26 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean27 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 5 + "'", int2 == 5);
        org.junit.Assert.assertNotNull(comparableArray4);
        org.junit.Assert.assertNotNull(strComparableArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceItor21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue22.spliterator();
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue22.poll();
        boolean boolean28 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean29 = charSequenceQueue22.isEmpty();
        int int30 = charSequenceQueue22.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        boolean boolean36 = charSequenceQueue32.add((java.lang.CharSequence) "hi!");
        int int37 = charSequenceQueue32.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor38 = charSequenceQueue32.iterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue32.peek();
        boolean boolean40 = charSequenceQueue22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean41 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence charSequence42 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue44.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue44.spliterator();
        boolean boolean48 = charSequenceQueue44.add((java.lang.CharSequence) "");
        boolean boolean49 = charSequenceQueue44.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue44.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue44.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue44.parallelStream();
        boolean boolean53 = charSequenceQueue44.isFull();
        int int54 = charSequenceQueue44.maxSize();
        boolean boolean55 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator58 = charSequenceQueue57.spliterator();
        java.lang.CharSequence charSequence59 = charSequenceQueue57.peek();
        boolean boolean60 = charSequenceQueue57.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68, charSequenceArray67);
        boolean boolean70 = charSequenceQueue68.isAtFullCapacity();
        boolean boolean71 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor72 = charSequenceQueue68.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue68.spliterator();
        charSequenceQueue68.clear();
        int int75 = charSequenceQueue68.maxSize();
        boolean boolean76 = charSequenceQueue57.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        java.lang.CharSequence charSequence77 = charSequenceQueue68.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceQueue68.stream();
        boolean boolean79 = charSequenceQueue1.remove((java.lang.Object) charSequenceStream78);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 52 + "'", int37 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor38);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 10 + "'", int54 == 10);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator58);
        org.junit.Assert.assertNull(charSequence59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceItor72);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 32 + "'", int75 == 32);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(charSequence77);
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.peek();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue31.stream();
        boolean boolean36 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue31.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue31.parallelStream();
        int int39 = charSequenceQueue31.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue12.stream();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceList23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue29.iterator();
        charSequenceQueue29.clear();
        java.lang.CharSequence charSequence33 = charSequenceQueue29.poll();
        boolean boolean34 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceList42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean51 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60, charSequenceArray59);
        boolean boolean62 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean63 = charSequenceList55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean64 = charSequenceQueue60.isAtFullCapacity();
        int int65 = charSequenceQueue60.maxSize();
        boolean boolean66 = charSequenceList42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue60.iterator();
        int int68 = charSequenceQueue60.size();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean78 = charSequenceList71.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        charSequenceQueue77.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator80 = charSequenceQueue77.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean84 = charSequenceQueue82.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray85 = charSequenceQueue82.toArray();
        boolean boolean86 = charSequenceQueue77.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue82);
        boolean boolean87 = charSequenceQueue60.remove((java.lang.Object) charSequenceQueue77);
        java.lang.CharSequence charSequence88 = charSequenceQueue60.poll();
        java.lang.CharSequence charSequence89 = charSequenceQueue60.remove();
        boolean boolean90 = charSequenceQueue12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        int int91 = charSequenceQueue12.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2 + "'", int68 == 2);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator80);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(objArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray85), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray85), "[]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "" + "'", charSequence88, "");
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10 + "'", int91 == 10);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence10 = charSequenceQueue8.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.lang.Object[] objArray16 = charSequenceList9.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean26 = charSequenceQueue18.isEmpty();
        boolean boolean28 = charSequenceQueue18.remove((java.lang.Object) 10.0d);
        charSequenceQueue18.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int32 = charSequenceQueue31.maxSize();
        boolean boolean33 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue31);
        boolean boolean34 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue42.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue42.spliterator();
        boolean boolean48 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence charSequence50 = charSequenceQueue42.get(1);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(objArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray16), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray16), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 100 + "'", int32 == 100);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue11.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue11.spliterator();
        boolean boolean15 = charSequenceQueue11.add((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue11.isAtFullCapacity();
        int int17 = charSequenceQueue11.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue11.spliterator();
        boolean boolean19 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue23.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue23.parallelStream();
        boolean boolean27 = charSequenceQueue23.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.stream();
        java.lang.CharSequence charSequence29 = charSequenceQueue23.peek();
        boolean boolean30 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceQueue32.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue32.parallelStream();
        boolean boolean38 = charSequenceQueue32.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue32.spliterator();
        java.lang.CharSequence charSequence40 = charSequenceQueue32.element();
        boolean boolean41 = charSequenceQueue32.isEmpty();
        boolean boolean42 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.lang.CharSequence charSequence43 = charSequenceQueue32.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence44 = charSequenceQueue32.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean26 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence54 = charSequenceQueue42.remove();
        boolean boolean55 = charSequenceQueue42.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean59 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean60 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        charSequenceQueue62.clear();
        boolean boolean71 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean73 = charSequenceQueue62.offer((java.lang.CharSequence) "[, hi!]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue62.parallelStream();
        boolean boolean75 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue62);
        java.lang.CharSequence charSequence76 = charSequenceQueue62.element();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "[, hi!]" + "'", charSequence76, "[, hi!]");
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Object[] objArray9 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(objArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray9), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray9), "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceItor11);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence30 = charSequenceQueue1.peek();
        int int31 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence32 = charSequenceQueue1.poll();
        java.lang.Object[] objArray33 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(charSequence30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream34);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        boolean boolean24 = charSequenceQueue16.isEmpty();
        java.lang.CharSequence charSequence25 = charSequenceQueue16.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor26 = charSequenceQueue16.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertNotNull(charSequenceItor26);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue26.stream();
        java.lang.String str28 = charSequenceQueue26.toString();
        java.lang.CharSequence charSequence29 = charSequenceQueue26.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.CharSequence charSequence67 = charSequenceQueue54.poll();
        java.lang.CharSequence charSequence69 = charSequenceQueue54.get((int) (short) 0);
        boolean boolean70 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        int int71 = charSequenceQueue54.maxSize();
        boolean boolean72 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue54.stream();
        int int74 = charSequenceQueue54.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 100);
        int int2 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean35 = charSequenceQueue31.isAtFullCapacity();
        java.lang.Object[] objArray36 = charSequenceQueue31.toArray();
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) false);
        boolean boolean39 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceList43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence52 = charSequenceQueue48.poll();
        boolean boolean53 = charSequenceQueue48.isAtFullCapacity();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.element();
        charSequenceQueue48.clear();
        boolean boolean56 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue48.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.Object[] objArray21 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence22 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence29 = charSequenceQueue24.element();
        java.lang.CharSequence charSequence30 = charSequenceQueue24.element();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.lang.CharSequence charSequence43 = charSequenceQueue39.poll();
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue39.isAtFullCapacity();
        int int46 = charSequenceQueue39.maxSize();
        boolean boolean47 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue39.spliterator();
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.Object obj53 = null;
        boolean boolean54 = charSequenceList51.contains(obj53);
        java.lang.String str55 = charSequenceList51.toString();
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.Object obj60 = null;
        boolean boolean61 = charSequenceList58.contains(obj60);
        java.lang.String str62 = charSequenceList58.toString();
        boolean boolean63 = charSequenceList51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList58);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue64.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceQueue64.parallelStream();
        java.lang.Object[] objArray67 = charSequenceQueue64.toArray();
        boolean boolean68 = charSequenceQueue39.contains((java.lang.Object) charSequenceQueue64);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue64.parallelStream();
        boolean boolean70 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[]");
        org.junit.Assert.assertNull(charSequence22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!]" + "'", str55, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "[hi!]" + "'", str62, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        charSequenceQueue35.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue40.contains((java.lang.Object) charSequenceQueue44);
        java.lang.CharSequence charSequence48 = charSequenceQueue40.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue50.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue50.spliterator();
        boolean boolean54 = charSequenceQueue50.add((java.lang.CharSequence) "");
        boolean boolean55 = charSequenceQueue50.isAtFullCapacity();
        int int56 = charSequenceQueue50.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue50.spliterator();
        boolean boolean58 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean60 = charSequenceQueue35.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        org.apache.commons.collections4.queue.CircularFifoQueue<org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>> charSequenceQueueQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>>();
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        int int29 = charSequenceQueue19.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue19.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceQueue19.get(1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor30);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3, charSequenceArray2);
        boolean boolean5 = charSequenceQueue3.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue3.parallelStream();
        boolean boolean7 = charSequenceQueue3.isEmpty();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "[[hi!], [hi!]]", "hi!", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isEmpty();
        java.lang.CharSequence charSequence15 = charSequenceQueue12.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue23.isAtFullCapacity();
        boolean boolean26 = charSequenceQueue17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean27 = charSequenceQueue23.isFull();
        java.lang.CharSequence charSequence28 = charSequenceQueue23.remove();
        boolean boolean29 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue31.parallelStream();
        boolean boolean35 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        boolean boolean40 = charSequenceQueue37.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue37.stream();
        java.lang.CharSequence charSequence42 = charSequenceQueue37.poll();
        java.lang.String str43 = charSequenceQueue37.toString();
        boolean boolean44 = charSequenceQueue12.contains((java.lang.Object) str43);
        boolean boolean45 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue47.isFull();
        charSequenceQueue47.clear();
        boolean boolean55 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "[[hi!], [hi!]]" + "'", charSequence15, "[[hi!], [hi!]]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[]" + "'", str43, "[]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        int int23 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2 + "'", int23 == 2);
        org.junit.Assert.assertNotNull(charSequenceStream24);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        charSequenceQueue7.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue7.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        boolean boolean23 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue19.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue19.stream();
        boolean boolean26 = charSequenceQueue19.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean1 = charSequenceQueue0.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence4 = charSequenceQueue3.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.String str41 = charSequenceList37.toString();
        boolean boolean42 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList37);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue43.stream();
        boolean boolean45 = charSequenceQueue6.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence46 = charSequenceQueue43.element();
        java.lang.CharSequence charSequence47 = charSequenceQueue43.peek();
        java.lang.String str48 = charSequenceQueue43.toString();
        boolean boolean49 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        boolean boolean51 = charSequenceQueue3.add((java.lang.CharSequence) "[]");
        java.lang.Object[] objArray52 = charSequenceQueue3.toArray();
        boolean boolean54 = charSequenceQueue3.add((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence55 = charSequenceQueue3.poll();
        boolean boolean56 = charSequenceQueue0.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "hi!" + "'", charSequence46, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "hi!" + "'", charSequence47, "hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[hi!]" + "'", str48, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[[]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[[]]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "[]" + "'", charSequence55, "[]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean31 = charSequenceQueue1.add((java.lang.CharSequence) "[[hi!]]");
        boolean boolean32 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.Object[] objArray7 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        boolean boolean44 = charSequenceQueue39.add((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceList17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean46 = charSequenceQueue9.contains((java.lang.Object) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue48.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence56 = charSequenceQueue53.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue53.parallelStream();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66, charSequenceArray65);
        boolean boolean68 = charSequenceQueue66.isAtFullCapacity();
        boolean boolean69 = charSequenceList61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean70 = charSequenceQueue66.isAtFullCapacity();
        int int71 = charSequenceQueue66.maxSize();
        boolean boolean72 = charSequenceQueue53.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean73 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean74 = charSequenceQueue39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean75 = charSequenceQueue48.isAtFullCapacity();
        java.util.AbstractList[] abstractListArray77 = new java.util.AbstractList[0];
        @SuppressWarnings("unchecked")
        java.util.AbstractList<java.lang.CharSequence>[] charSequenceListArray78 = (java.util.AbstractList<java.lang.CharSequence>[]) abstractListArray77;
        java.util.AbstractList<java.lang.CharSequence>[] charSequenceListArray79 = charSequenceQueue48.toArray((java.util.AbstractList<java.lang.CharSequence>[]) abstractListArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Object[] objArray80 = charSequenceQueue1.toArray((java.lang.Object[]) charSequenceListArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(abstractListArray77);
        org.junit.Assert.assertNotNull(charSequenceListArray78);
        org.junit.Assert.assertNotNull(charSequenceListArray79);
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.List<java.lang.CharSequence>> charSequenceListQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.List<java.lang.CharSequence>>(1);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceQueue19.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceItor29);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue1.get((int) (byte) 1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29, charSequenceArray28);
        boolean boolean31 = charSequenceQueue29.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean33 = charSequenceQueue29.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.lang.CharSequence charSequence37 = charSequenceQueue35.peek();
        boolean boolean38 = charSequenceQueue35.isEmpty();
        int int39 = charSequenceQueue35.maxSize();
        boolean boolean40 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.String str41 = charSequenceQueue35.toString();
        boolean boolean42 = charSequenceQueue35.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue35.parallelStream();
        boolean boolean44 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 10 + "'", int39 == 10);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[]" + "'", str41, "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray24 = charSequenceList15.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.lang.Comparable<java.lang.String>[] strComparableArray25 = charSequenceQueue3.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue3.stream();
        java.lang.String str27 = charSequenceQueue3.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue3.iterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strComparableArray24);
        org.junit.Assert.assertNotNull(strComparableArray25);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor28);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        java.lang.CharSequence charSequence13 = charSequenceQueue7.element();
        int int14 = charSequenceQueue7.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue7.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue7.spliterator();
        boolean boolean17 = charSequenceQueue7.isFull();
        boolean boolean18 = charSequenceQueue7.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceQueue7.iterator();
        java.lang.CharSequence charSequence20 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        boolean boolean33 = charSequenceQueue28.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence34 = charSequenceQueue28.remove();
        boolean boolean36 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        charSequenceQueue28.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.element();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60, charSequenceArray59);
        boolean boolean62 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean63 = charSequenceList55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean64 = charSequenceList50.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean65 = charSequenceQueue44.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        boolean boolean66 = charSequenceQueue39.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55);
        java.lang.Object[] objArray67 = charSequenceQueue39.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator70 = charSequenceQueue69.spliterator();
        java.lang.CharSequence charSequence71 = charSequenceQueue69.peek();
        boolean boolean72 = charSequenceQueue69.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue69.stream();
        boolean boolean74 = charSequenceQueue39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        java.lang.Object[] objArray75 = charSequenceQueue69.toArray();
        boolean boolean76 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean77 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean78 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(objArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray67), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray67), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator70);
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        boolean boolean45 = charSequenceQueue5.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean57 = charSequenceQueue53.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.lang.CharSequence charSequence61 = charSequenceQueue59.peek();
        boolean boolean62 = charSequenceQueue59.isEmpty();
        int int63 = charSequenceQueue59.maxSize();
        boolean boolean64 = charSequenceQueue53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.lang.CharSequence[] charSequenceArray66 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList67 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList67, charSequenceArray66);
        java.lang.Object obj69 = null;
        boolean boolean70 = charSequenceList67.contains(obj69);
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.Object obj75 = null;
        boolean boolean76 = charSequenceList73.contains(obj75);
        java.lang.String str77 = charSequenceList73.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean80 = charSequenceList73.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean81 = charSequenceList67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean84 = charSequenceList67.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue86 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream87 = charSequenceQueue86.parallelStream();
        boolean boolean89 = charSequenceQueue86.contains((java.lang.Object) 1.0d);
        boolean boolean90 = charSequenceQueue86.isFull();
        int int91 = charSequenceQueue86.size();
        boolean boolean92 = charSequenceList67.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue86);
        boolean boolean93 = charSequenceQueue59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue86);
        boolean boolean94 = charSequenceQueue5.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue86);
        java.lang.CharSequence charSequence95 = charSequenceQueue86.peek();
        boolean boolean96 = charSequenceQueue86.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNull(charSequence61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10 + "'", int63 == 10);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!]" + "'", str77, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceStream87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + true + "'", boolean92 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(charSequence95);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        boolean boolean47 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean48 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean49 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue45.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence52 = charSequenceQueue45.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.lang.String str55 = charSequenceQueue24.toString();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[, , , hi!]" + "'", str55, "[, , , hi!]");
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.parallelStream();
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55, charSequenceArray54);
        boolean boolean57 = charSequenceQueue55.isAtFullCapacity();
        boolean boolean58 = charSequenceList50.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean59 = charSequenceQueue55.isAtFullCapacity();
        int int60 = charSequenceQueue55.maxSize();
        boolean boolean61 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean63 = charSequenceQueue42.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence64 = charSequenceQueue42.peek();
        boolean boolean65 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean67 = charSequenceQueue42.offer((java.lang.CharSequence) "[hi!, hi!]");
        java.lang.CharSequence charSequence69 = charSequenceQueue42.get((int) (short) 1);
        java.lang.CharSequence charSequence70 = charSequenceQueue42.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue45.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue49.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue49.contains((java.lang.Object) charSequenceQueue53);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue49.iterator();
        boolean boolean58 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        int int59 = charSequenceQueue49.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue49.iterator();
        boolean boolean61 = charSequenceQueue25.remove((java.lang.Object) charSequenceItor60);
        boolean boolean63 = charSequenceQueue25.offer((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue65.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue65.spliterator();
        boolean boolean69 = charSequenceQueue65.add((java.lang.CharSequence) "");
        boolean boolean70 = charSequenceQueue65.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor71 = charSequenceQueue65.iterator();
        java.lang.Object[] objArray72 = charSequenceQueue65.toArray();
        boolean boolean73 = charSequenceQueue65.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue65.spliterator();
        boolean boolean76 = charSequenceQueue65.add((java.lang.CharSequence) "");
        boolean boolean77 = charSequenceQueue65.isFull();
        boolean boolean78 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.CharSequence charSequence79 = charSequenceQueue65.remove();
        boolean boolean80 = charSequenceQueue65.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceItor71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + charSequence79 + "' != '" + "" + "'", charSequence79, "");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        java.lang.CharSequence charSequence46 = charSequenceQueue41.poll();
        java.lang.String str47 = charSequenceQueue41.toString();
        boolean boolean48 = charSequenceQueue41.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue41.parallelStream();
        boolean boolean50 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence56 = charSequenceQueue53.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue53.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue53.stream();
        int int59 = charSequenceQueue53.size();
        java.lang.CharSequence charSequence60 = charSequenceQueue53.peek();
        boolean boolean61 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence62 = charSequenceQueue33.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue24.isEmpty();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean50 = charSequenceQueue46.isAtFullCapacity();
        int int51 = charSequenceQueue46.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue53.spliterator();
        java.lang.CharSequence charSequence55 = charSequenceQueue53.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        boolean boolean60 = charSequenceQueue53.contains((java.lang.Object) charSequenceQueue57);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceQueue62.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceQueue62.parallelStream();
        boolean boolean68 = charSequenceQueue62.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue62.spliterator();
        boolean boolean70 = charSequenceQueue53.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean71 = charSequenceQueue62.isFull();
        java.lang.CharSequence charSequence72 = charSequenceQueue62.peek();
        int int73 = charSequenceQueue62.maxSize();
        boolean boolean74 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean75 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        int int76 = charSequenceQueue24.maxSize();
        java.lang.CharSequence charSequence77 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence78 = charSequenceQueue24.peek();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 32 + "'", int51 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertNull(charSequence78);
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue9);
        boolean boolean14 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "[, ]");
        charSequenceQueue17.clear();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[][] strArray35 = new java.lang.String[][] { strArray27, strArray34 };
        java.lang.String[][] strArray36 = charSequenceQueue17.toArray(strArray35);
        java.lang.CharSequence[][] charSequenceArray37 = charSequenceQueue1.toArray((java.lang.CharSequence[][]) strArray36);
        boolean boolean39 = charSequenceQueue1.offer((java.lang.CharSequence) "[[hi!]]");
        java.lang.Object[] objArray40 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.parallelStream();
        boolean boolean48 = charSequenceQueue42.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue42.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence55 = charSequenceQueue52.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue52.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue52.stream();
        int int58 = charSequenceQueue52.size();
        boolean boolean59 = charSequenceQueue42.remove((java.lang.Object) charSequenceQueue52);
        int int60 = charSequenceQueue52.size();
        boolean boolean61 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue63.parallelStream();
        boolean boolean66 = charSequenceQueue63.contains((java.lang.Object) 1.0d);
        boolean boolean67 = charSequenceQueue63.isFull();
        boolean boolean68 = charSequenceQueue63.isFull();
        boolean boolean69 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[[[hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[[[hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int60 = charSequenceQueue1.maxSize();
        boolean boolean61 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence63 = charSequenceQueue1.get((int) (short) 0);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue1.stream();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue67.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue67.spliterator();
        boolean boolean71 = charSequenceQueue67.add((java.lang.CharSequence) "");
        boolean boolean72 = charSequenceQueue67.isAtFullCapacity();
        java.lang.CharSequence charSequence73 = charSequenceQueue67.element();
        int int74 = charSequenceQueue67.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue67.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator76 = charSequenceQueue67.spliterator();
        boolean boolean77 = charSequenceQueue67.isFull();
        boolean boolean79 = charSequenceQueue67.contains((java.lang.Object) ' ');
        boolean boolean81 = charSequenceQueue67.add((java.lang.CharSequence) "[[hi!]]");
        charSequenceQueue67.clear();
        boolean boolean83 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 1 + "'", int74 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertNotNull(charSequenceSpliterator76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.poll();
        boolean boolean18 = charSequenceQueue15.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceQueue15.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "hi!" + "'", charSequence17, "hi!");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceItor19);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        boolean boolean43 = charSequenceQueue38.isFull();
        charSequenceQueue38.clear();
        java.lang.CharSequence charSequence45 = charSequenceQueue38.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(charSequence45);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        boolean boolean25 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence26 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence charSequence28 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue30.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue30.spliterator();
        boolean boolean34 = charSequenceQueue30.add((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue30.isAtFullCapacity();
        java.lang.CharSequence charSequence36 = charSequenceQueue30.element();
        int int37 = charSequenceQueue30.size();
        boolean boolean38 = charSequenceQueue1.remove((java.lang.Object) int37);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        int int11 = charSequenceQueue1.maxSize();
        boolean boolean12 = charSequenceQueue1.isFull();
        int int13 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor25 = charSequenceQueue21.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue21.spliterator();
        charSequenceQueue21.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        boolean boolean33 = charSequenceQueue29.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue29.iterator();
        charSequenceQueue29.clear();
        java.lang.Object[] objArray36 = charSequenceQueue29.toArray();
        boolean boolean37 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue29);
        boolean boolean38 = charSequenceQueue21.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        charSequenceQueue42.clear();
        boolean boolean51 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue40.spliterator();
        int int53 = charSequenceQueue40.size();
        int int54 = charSequenceQueue40.size();
        java.util.Queue[][] queueArray56 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray56;
        java.util.Queue[][] queueArray59 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray60 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray59;
        java.util.Queue[][] queueArray62 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray63 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray62;
        java.util.Queue[][] queueArray65 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray66 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray65;
        java.util.Queue[][][] queueArray68 = new java.util.Queue[4][][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray69 = (java.util.Queue<java.lang.CharSequence>[][][]) queueArray68;
        charSequenceQueueArray69[0] = charSequenceQueueArray57;
        charSequenceQueueArray69[1] = charSequenceQueueArray60;
        charSequenceQueueArray69[2] = charSequenceQueueArray63;
        charSequenceQueueArray69[3] = charSequenceQueueArray66;
        java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray78 = charSequenceQueue40.toArray(charSequenceQueueArray69);
        java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray79 = charSequenceQueue21.toArray(charSequenceQueueArray69);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Iterable<java.lang.CharSequence>[][][] charSequenceIterableArray80 = charSequenceQueue1.toArray((java.lang.Iterable<java.lang.CharSequence>[][][]) charSequenceQueueArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 52 + "'", int11 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 52 + "'", int13 == 52);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceItor25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(queueArray59);
        org.junit.Assert.assertNotNull(charSequenceQueueArray60);
        org.junit.Assert.assertNotNull(queueArray62);
        org.junit.Assert.assertNotNull(charSequenceQueueArray63);
        org.junit.Assert.assertNotNull(queueArray65);
        org.junit.Assert.assertNotNull(charSequenceQueueArray66);
        org.junit.Assert.assertNotNull(queueArray68);
        org.junit.Assert.assertNotNull(charSequenceQueueArray69);
        org.junit.Assert.assertNotNull(charSequenceQueueArray78);
        org.junit.Assert.assertNotNull(charSequenceQueueArray79);
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.get((int) (byte) 0);
        java.lang.CharSequence charSequence12 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence14 = charSequenceQueue1.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.String str50 = charSequenceList46.toString();
        boolean boolean51 = charSequenceList39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue52.stream();
        java.lang.String str54 = charSequenceQueue52.toString();
        java.lang.CharSequence charSequence55 = charSequenceQueue52.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean60 = charSequenceQueue57.contains((java.lang.Object) 1.0d);
        boolean boolean61 = charSequenceQueue57.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        boolean boolean70 = charSequenceQueue63.contains((java.lang.Object) charSequenceQueue67);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor71 = charSequenceQueue63.iterator();
        boolean boolean72 = charSequenceQueue57.remove((java.lang.Object) charSequenceQueue63);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue74 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean76 = charSequenceQueue74.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80, charSequenceArray79);
        boolean boolean82 = charSequenceQueue80.isAtFullCapacity();
        boolean boolean83 = charSequenceQueue74.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue85.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator87 = charSequenceQueue85.spliterator();
        boolean boolean89 = charSequenceQueue85.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence90 = charSequenceQueue85.poll();
        boolean boolean91 = charSequenceQueue80.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean92 = charSequenceQueue63.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        java.lang.CharSequence charSequence93 = charSequenceQueue80.poll();
        java.lang.CharSequence charSequence95 = charSequenceQueue80.get((int) (short) 0);
        boolean boolean96 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean97 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean98 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence99 = charSequenceQueue8.poll();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!]" + "'", str50, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceItor71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertNotNull(charSequenceSpliterator87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "" + "'", charSequence95, "");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + boolean98 + "' != '" + false + "'", boolean98 == false);
        org.junit.Assert.assertEquals("'" + charSequence99 + "' != '" + "" + "'", charSequence99, "");
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        boolean boolean13 = charSequenceQueue7.add((java.lang.CharSequence) "[, []]");
        int int14 = charSequenceQueue7.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.poll();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        boolean boolean12 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.lang.Object[] objArray23 = charSequenceQueue19.toArray();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(objArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray23), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray23), "[]");
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence14 = charSequenceQueue7.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        boolean boolean35 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean36 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue18);
        boolean boolean38 = charSequenceQueue18.isEmpty();
        boolean boolean39 = charSequenceQueue18.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue18.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean53 = charSequenceQueue48.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean54 = charSequenceQueue48.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue56.parallelStream();
        boolean boolean62 = charSequenceQueue56.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue56.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue56.element();
        boolean boolean65 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean66 = charSequenceQueue18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue68.parallelStream();
        boolean boolean71 = charSequenceQueue68.contains((java.lang.Object) 1.0d);
        boolean boolean72 = charSequenceQueue68.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue68.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue68.stream();
        boolean boolean76 = charSequenceQueue68.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence78 = charSequenceQueue68.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        boolean boolean80 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        boolean boolean81 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue79);
        java.lang.Class<?> wildcardClass82 = charSequenceQueue7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "hi!" + "'", charSequence78, "hi!");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean23 = charSequenceQueue9.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean50 = charSequenceList36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean51 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean52 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.Object[] objArray53 = charSequenceQueue25.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue25.parallelStream();
        charSequenceQueue25.clear();
        java.lang.String str56 = charSequenceQueue25.toString();
        boolean boolean57 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.Class<?> wildcardClass58 = charSequenceQueue25.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        boolean boolean12 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        boolean boolean13 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceItor14);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        boolean boolean28 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean30 = charSequenceList8.remove((java.lang.Object) 0);
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean34 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isFull();
        charSequenceQueue37.clear();
        boolean boolean44 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        java.lang.String str45 = charSequenceQueue37.toString();
        int int46 = charSequenceQueue37.maxSize();
        boolean boolean48 = charSequenceQueue37.offer((java.lang.CharSequence) "[, , hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[]" + "'", str45, "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.CharSequence charSequence20 = charSequenceQueue16.poll();
        java.lang.CharSequence charSequence21 = charSequenceQueue16.poll();
        boolean boolean22 = charSequenceQueue16.isAtFullCapacity();
        int int23 = charSequenceQueue16.maxSize();
        boolean boolean24 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue16.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor26 = charSequenceQueue16.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean34 = charSequenceQueue30.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue30.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        charSequenceQueue30.clear();
        boolean boolean39 = charSequenceQueue28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue28.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.parallelStream();
        boolean boolean48 = charSequenceQueue42.contains((java.lang.Object) (short) 100);
        charSequenceQueue42.clear();
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceList52.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue61.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue61.spliterator();
        boolean boolean65 = charSequenceQueue61.add((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue61.isAtFullCapacity();
        java.lang.CharSequence charSequence67 = charSequenceQueue61.element();
        int int68 = charSequenceQueue61.size();
        boolean boolean69 = charSequenceList52.remove((java.lang.Object) charSequenceQueue61);
        boolean boolean70 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean71 = charSequenceQueue28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean72 = charSequenceQueue16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        java.lang.String str3 = charSequenceQueue1.toString();
        boolean boolean5 = charSequenceQueue1.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 1);
        boolean boolean16 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        boolean boolean17 = charSequenceQueue7.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence22 = charSequenceQueue14.get(1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue24.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue24.spliterator();
        boolean boolean28 = charSequenceQueue24.add((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue24.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue24.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue24.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue24.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue34.parallelStream();
        boolean boolean37 = charSequenceQueue34.contains((java.lang.Object) 1.0d);
        boolean boolean39 = charSequenceQueue34.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence40 = charSequenceQueue34.element();
        boolean boolean41 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean42 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.Object[] objArray43 = charSequenceQueue24.toArray();
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.Object obj48 = null;
        boolean boolean49 = charSequenceList46.contains(obj48);
        java.lang.String str50 = charSequenceList46.toString();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = charSequenceList53.contains(obj55);
        java.lang.String str57 = charSequenceList53.toString();
        boolean boolean58 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        boolean boolean64 = charSequenceQueue60.add((java.lang.CharSequence) "hi!");
        int int65 = charSequenceQueue60.maxSize();
        boolean boolean66 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean67 = charSequenceQueue60.isAtFullCapacity();
        charSequenceQueue60.clear();
        java.lang.Object[] objArray69 = charSequenceQueue60.toArray();
        java.lang.Object[] objArray70 = charSequenceQueue60.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue60.spliterator();
        boolean boolean72 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceItor30);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "[hi!]" + "'", charSequence40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[, [hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[hi!]" + "'", str50, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!]" + "'", str57, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 52 + "'", int65 == 52);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean29 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue42.spliterator();
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue42.poll();
        boolean boolean48 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57, charSequenceArray56);
        boolean boolean59 = charSequenceQueue57.isAtFullCapacity();
        boolean boolean60 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean61 = charSequenceQueue57.isAtFullCapacity();
        int int62 = charSequenceQueue57.maxSize();
        boolean boolean63 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean64 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        boolean boolean66 = charSequenceQueue8.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence67 = charSequenceQueue8.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue80.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator82 = charSequenceQueue80.spliterator();
        boolean boolean84 = charSequenceQueue80.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence85 = charSequenceQueue80.poll();
        boolean boolean86 = charSequenceQueue75.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        java.lang.Object[] objArray87 = charSequenceQueue80.toArray();
        boolean boolean88 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue80);
        boolean boolean90 = charSequenceQueue80.offer((java.lang.CharSequence) "hi!");
        boolean boolean91 = charSequenceQueue1.contains((java.lang.Object) boolean90);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence93 = charSequenceQueue1.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (52) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "hi!" + "'", charSequence67, "hi!");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertNotNull(charSequenceSpliterator82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.poll();
        charSequenceQueue43.clear();
        java.lang.CharSequence charSequence48 = charSequenceQueue43.peek();
        boolean boolean49 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        int int50 = charSequenceQueue38.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean6 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.String str7 = charSequenceQueue1.toString();
        charSequenceQueue1.clear();
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray9 = new java.lang.reflect.GenericDeclaration[][] {};
        java.lang.reflect.GenericDeclaration[][] genericDeclarationArray10 = charSequenceQueue1.toArray(genericDeclarationArray9);
        boolean boolean11 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue13.parallelStream();
        boolean boolean16 = charSequenceQueue13.contains((java.lang.Object) 1.0d);
        boolean boolean17 = charSequenceQueue13.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue19.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue19.contains((java.lang.Object) charSequenceQueue23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue19.iterator();
        boolean boolean28 = charSequenceQueue13.remove((java.lang.Object) charSequenceQueue19);
        java.lang.CharSequence charSequence29 = charSequenceQueue19.poll();
        boolean boolean30 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceQueue19.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[[hi!]]" + "'", str7, "[[hi!]]");
        org.junit.Assert.assertNotNull(genericDeclarationArray9);
        org.junit.Assert.assertNotNull(genericDeclarationArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue7.stream();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        boolean boolean52 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        boolean boolean54 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean69 = charSequenceQueue63.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence70 = charSequenceQueue63.element();
        boolean boolean71 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.String str72 = charSequenceQueue7.toString();
        int int73 = charSequenceQueue7.maxSize();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[]" + "'", str72, "[]");
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10 + "'", int73 == 10);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        charSequenceQueue11.clear();
        boolean boolean16 = charSequenceQueue11.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence35 = charSequenceQueue31.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue31.parallelStream();
        boolean boolean37 = charSequenceQueue11.contains((java.lang.Object) charSequenceStream36);
        java.lang.CharSequence charSequence38 = charSequenceQueue11.peek();
        boolean boolean39 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue11);
        int int40 = charSequenceQueue11.size();
        boolean boolean41 = charSequenceQueue11.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue11.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.element();
        int int9 = charSequenceQueue1.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(charSequenceItor10);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence51 = charSequenceQueue46.element();
        java.lang.CharSequence charSequence52 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceList56.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence65 = charSequenceQueue61.poll();
        java.lang.CharSequence charSequence66 = charSequenceQueue61.poll();
        boolean boolean67 = charSequenceQueue61.isAtFullCapacity();
        int int68 = charSequenceQueue61.maxSize();
        boolean boolean69 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean70 = charSequenceQueue61.isEmpty();
        boolean boolean72 = charSequenceQueue61.add((java.lang.CharSequence) "");
        boolean boolean73 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean77 = charSequenceQueue75.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray80 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81, charSequenceArray80);
        boolean boolean83 = charSequenceQueue81.isAtFullCapacity();
        boolean boolean84 = charSequenceQueue75.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor85 = charSequenceQueue81.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator86 = charSequenceQueue81.spliterator();
        boolean boolean87 = charSequenceQueue61.remove((java.lang.Object) charSequenceQueue81);
        charSequenceQueue61.clear();
        java.util.Collection<java.lang.CharSequence> charSequenceCollection89 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean90 = charSequenceQueue61.containsAll(charSequenceCollection89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(charSequenceArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(charSequenceItor85);
        org.junit.Assert.assertNotNull(charSequenceSpliterator86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        boolean boolean24 = charSequenceQueue3.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue3.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean38 = charSequenceQueue33.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean39 = charSequenceQueue33.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.parallelStream();
        boolean boolean47 = charSequenceQueue41.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue41.element();
        boolean boolean50 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean51 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue41.spliterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue16.parallelStream();
        int int24 = charSequenceQueue16.size();
        java.lang.CharSequence charSequence25 = charSequenceQueue16.poll();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        boolean boolean28 = charSequenceQueue23.isFull();
        boolean boolean29 = charSequenceQueue23.isFull();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue32.parallelStream();
        boolean boolean35 = charSequenceQueue32.contains((java.lang.Object) 1.0d);
        boolean boolean36 = charSequenceQueue32.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue38.spliterator();
        java.lang.CharSequence charSequence40 = charSequenceQueue38.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue42);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue38.iterator();
        boolean boolean47 = charSequenceQueue32.remove((java.lang.Object) charSequenceQueue38);
        java.lang.CharSequence charSequence48 = charSequenceQueue38.poll();
        boolean boolean49 = charSequenceQueue38.isEmpty();
        boolean boolean50 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean51 = charSequenceQueue38.isFull();
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceQueue38.contains(obj52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence charSequence14 = charSequenceQueue8.element();
        int int15 = charSequenceQueue8.size();
        boolean boolean17 = charSequenceQueue8.offer((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence18 = charSequenceQueue8.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence23 = charSequenceQueue20.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.element();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41, charSequenceArray40);
        boolean boolean43 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean44 = charSequenceList36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean46 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean47 = charSequenceQueue20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.Object[] objArray48 = charSequenceQueue20.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue20.parallelStream();
        charSequenceQueue20.clear();
        boolean boolean52 = charSequenceQueue20.add((java.lang.CharSequence) "");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue20.spliterator();
        java.lang.Object[] objArray54 = charSequenceQueue20.toArray();
        boolean boolean55 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(objArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray48), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray48), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNotNull(objArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray54), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray54), "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(charSequenceStream15);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceStream7);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean1 = charSequenceQueue0.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator4 = charSequenceQueue3.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue3.spliterator();
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence8 = charSequenceQueue3.poll();
        boolean boolean10 = charSequenceQueue3.add((java.lang.CharSequence) "");
        charSequenceQueue3.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue3.stream();
        charSequenceQueue3.clear();
        boolean boolean14 = charSequenceQueue0.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence charSequence15 = charSequenceQueue0.poll();
        java.lang.String str16 = charSequenceQueue0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence17 = charSequenceQueue0.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean1 + "' != '" + false + "'", boolean1 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator4);
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[]" + "'", str16, "[]");
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.remove((java.lang.Object) 10.0d);
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int15 = charSequenceQueue14.maxSize();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue14);
        boolean boolean17 = charSequenceQueue1.isEmpty();
        boolean boolean18 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence19 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(charSequence19);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue7.spliterator();
        boolean boolean16 = charSequenceQueue7.offer((java.lang.CharSequence) "[, , , hi!]");
        java.lang.CharSequence charSequence18 = charSequenceQueue7.get((int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue10.stream();
        java.lang.Comparable[][][][] comparableArray13 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray14 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray13;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray15 = charSequenceQueue10.toArray(strComparableArray14);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray16 = charSequenceQueue1.toArray(strComparableArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue30.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue30.spliterator();
        boolean boolean34 = charSequenceQueue30.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceQueue30.poll();
        boolean boolean36 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean37 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.String str38 = charSequenceQueue25.toString();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(comparableArray13);
        org.junit.Assert.assertNotNull(strComparableArray14);
        org.junit.Assert.assertNotNull(strComparableArray15);
        org.junit.Assert.assertNotNull(strComparableArray16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[, ]" + "'", str38, "[, ]");
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue8.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        charSequenceQueue47.clear();
        java.lang.CharSequence charSequence51 = charSequenceQueue47.peek();
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList54 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54, charSequenceArray53);
        java.lang.Object obj56 = null;
        boolean boolean57 = charSequenceList54.contains(obj56);
        java.lang.String str58 = charSequenceList54.toString();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        boolean boolean66 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        boolean boolean72 = charSequenceQueue68.add((java.lang.CharSequence) "hi!");
        int int73 = charSequenceQueue68.maxSize();
        boolean boolean74 = charSequenceList54.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        boolean boolean76 = charSequenceList54.remove((java.lang.Object) 0);
        boolean boolean77 = charSequenceQueue47.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean80 = charSequenceQueue47.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator81 = charSequenceQueue47.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean85 = charSequenceQueue83.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence86 = charSequenceQueue83.peek();
        boolean boolean87 = charSequenceQueue83.isAtFullCapacity();
        boolean boolean88 = charSequenceQueue83.isFull();
        charSequenceQueue83.clear();
        boolean boolean90 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceQueue83.stream();
        boolean boolean93 = charSequenceQueue83.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean94 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue83);
        java.lang.CharSequence charSequence95 = charSequenceQueue83.poll();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!]" + "'", str58, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 52 + "'", int73 == 52);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator81);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "" + "'", charSequence86, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "[, hi!]" + "'", charSequence95, "[, hi!]");
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray30 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence32 = charSequenceQueue1.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue34.stream();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceList43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean52 = charSequenceQueue48.isAtFullCapacity();
        java.lang.Object[] objArray53 = charSequenceQueue48.toArray();
        boolean boolean55 = charSequenceQueue48.contains((java.lang.Object) false);
        java.lang.CharSequence charSequence56 = charSequenceQueue48.poll();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean66 = charSequenceList59.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor67 = charSequenceQueue65.iterator();
        boolean boolean68 = charSequenceQueue65.isFull();
        java.lang.CharSequence charSequence69 = charSequenceQueue65.peek();
        java.lang.CharSequence charSequence70 = charSequenceQueue65.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceQueue65.stream();
        java.lang.Object[] objArray72 = charSequenceQueue65.toArray();
        boolean boolean73 = charSequenceQueue48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        boolean boolean74 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue48);
        boolean boolean75 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceItor67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(charSequence69);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertNotNull(charSequenceStream71);
        org.junit.Assert.assertNotNull(objArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray72), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray72), "[]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue15.isFull();
        int int21 = charSequenceQueue15.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue23.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue23.spliterator();
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue23.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor29 = charSequenceQueue23.iterator();
        boolean boolean30 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence charSequence31 = charSequenceQueue15.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue15.parallelStream();
        boolean boolean33 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        boolean boolean34 = charSequenceQueue15.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue15.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceItor29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceStream35);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractCollection<java.lang.CharSequence>> charSequenceCollectionQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractCollection<java.lang.CharSequence>>((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue10.stream();
        java.lang.CharSequence charSequence23 = charSequenceQueue10.poll();
        boolean boolean24 = charSequenceQueue10.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        java.lang.Object[] objArray11 = charSequenceQueue1.toArray();
        boolean boolean12 = charSequenceQueue1.isAtFullCapacity();
        java.lang.Class<?> wildcardClass13 = charSequenceQueue1.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence21 = charSequenceQueue12.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.String str26 = charSequenceQueue23.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue23.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue23);
        java.lang.Class<?> wildcardClass30 = charSequenceQueue12.getClass();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceQueue46.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence51 = charSequenceQueue46.element();
        java.lang.CharSequence charSequence52 = charSequenceQueue46.element();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61, charSequenceArray60);
        boolean boolean63 = charSequenceQueue61.isAtFullCapacity();
        boolean boolean64 = charSequenceList56.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence65 = charSequenceQueue61.poll();
        java.lang.CharSequence charSequence66 = charSequenceQueue61.poll();
        boolean boolean67 = charSequenceQueue61.isAtFullCapacity();
        int int68 = charSequenceQueue61.maxSize();
        boolean boolean69 = charSequenceQueue46.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        boolean boolean70 = charSequenceQueue61.isEmpty();
        boolean boolean72 = charSequenceQueue61.add((java.lang.CharSequence) "");
        boolean boolean73 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        int int74 = charSequenceQueue61.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceQueue75.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue78.stream();
        java.lang.Comparable[][][][] comparableArray81 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray82 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray81;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray83 = charSequenceQueue78.toArray(strComparableArray82);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray84 = charSequenceQueue75.toArray(strComparableArray82);
        boolean boolean85 = charSequenceQueue61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertEquals("'" + charSequence66 + "' != '" + "" + "'", charSequence66, "");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 32 + "'", int68 == 32);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 32 + "'", int74 == 32);
        org.junit.Assert.assertNotNull(charSequenceItor76);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertNotNull(comparableArray81);
        org.junit.Assert.assertNotNull(strComparableArray82);
        org.junit.Assert.assertNotNull(strComparableArray83);
        org.junit.Assert.assertNotNull(strComparableArray84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue10.spliterator();
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "");
        boolean boolean15 = charSequenceQueue10.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue10.iterator();
        java.lang.Object[] objArray17 = charSequenceQueue10.toArray();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) objArray17);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence charSequence31 = charSequenceQueue27.poll();
        boolean boolean32 = charSequenceQueue27.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        boolean boolean47 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList51 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList51, charSequenceArray50);
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56, charSequenceArray55);
        boolean boolean58 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean59 = charSequenceList51.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean60 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue56.isAtFullCapacity();
        boolean boolean62 = charSequenceList42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean63 = charSequenceQueue27.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        java.lang.Object[] objArray64 = charSequenceQueue27.toArray();
        int int65 = charSequenceQueue27.maxSize();
        boolean boolean66 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.CharSequence charSequence67 = charSequenceQueue27.poll();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "[hi!]", "[[hi!], [hi!]]", "[]" };
        java.lang.CharSequence[] charSequenceArray28 = charSequenceQueue14.toArray(charSequenceArray27);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence30 = charSequenceQueue14.get((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertNotNull(charSequenceArray28);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue10.stream();
        java.lang.Comparable[][][][] comparableArray13 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray14 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray13;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray15 = charSequenceQueue10.toArray(strComparableArray14);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray16 = charSequenceQueue1.toArray(strComparableArray15);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue30.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue30.spliterator();
        boolean boolean34 = charSequenceQueue30.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceQueue30.poll();
        boolean boolean36 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean37 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor38 = charSequenceQueue25.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(comparableArray13);
        org.junit.Assert.assertNotNull(strComparableArray14);
        org.junit.Assert.assertNotNull(strComparableArray15);
        org.junit.Assert.assertNotNull(strComparableArray16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceItor38);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        boolean boolean24 = charSequenceQueue3.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue3.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceQueue27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean38 = charSequenceQueue33.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean39 = charSequenceQueue33.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.parallelStream();
        boolean boolean47 = charSequenceQueue41.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence49 = charSequenceQueue41.element();
        boolean boolean50 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean51 = charSequenceQueue3.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue53.parallelStream();
        boolean boolean56 = charSequenceQueue53.contains((java.lang.Object) 1.0d);
        boolean boolean57 = charSequenceQueue53.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue53.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue53.stream();
        boolean boolean61 = charSequenceQueue53.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence63 = charSequenceQueue53.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean65 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean69 = charSequenceQueue67.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73, charSequenceArray72);
        boolean boolean75 = charSequenceQueue73.isAtFullCapacity();
        boolean boolean76 = charSequenceQueue67.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean78 = charSequenceQueue73.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean79 = charSequenceQueue73.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue81 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean83 = charSequenceQueue81.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence84 = charSequenceQueue81.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceQueue81.parallelStream();
        boolean boolean87 = charSequenceQueue81.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator88 = charSequenceQueue81.spliterator();
        java.lang.CharSequence charSequence89 = charSequenceQueue81.element();
        boolean boolean90 = charSequenceQueue73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream91 = charSequenceQueue81.stream();
        java.lang.CharSequence charSequence92 = charSequenceQueue81.remove();
        boolean boolean93 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue81);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor94 = charSequenceQueue3.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream95 = charSequenceQueue3.stream();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "hi!" + "'", charSequence63, "hi!");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator88);
        org.junit.Assert.assertEquals("'" + charSequence89 + "' != '" + "" + "'", charSequence89, "");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertNotNull(charSequenceStream91);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNotNull(charSequenceItor94);
        org.junit.Assert.assertNotNull(charSequenceStream95);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        int int25 = charSequenceQueue23.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray30 = charSequenceQueue27.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue27.iterator();
        boolean boolean32 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceQueue23.remove(obj34);
        java.lang.CharSequence charSequence36 = charSequenceQueue23.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.parallelStream();
        boolean boolean41 = charSequenceQueue38.contains((java.lang.Object) 1.0d);
        boolean boolean42 = charSequenceQueue38.isFull();
        boolean boolean43 = charSequenceQueue38.isFull();
        int int44 = charSequenceQueue38.maxSize();
        int int45 = charSequenceQueue38.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue47.stream();
        boolean boolean58 = charSequenceQueue38.contains((java.lang.Object) charSequenceStream57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue38.spliterator();
        int int60 = charSequenceQueue38.maxSize();
        boolean boolean61 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean65 = charSequenceQueue63.offer((java.lang.CharSequence) "");
        charSequenceQueue63.clear();
        java.lang.CharSequence charSequence67 = charSequenceQueue63.peek();
        boolean boolean68 = charSequenceQueue38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor69 = charSequenceQueue38.iterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNull(charSequence67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceItor69);
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        int int12 = charSequenceQueue7.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        boolean boolean29 = charSequenceQueue26.isEmpty();
        int int30 = charSequenceQueue26.maxSize();
        boolean boolean31 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean32 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        java.lang.CharSequence charSequence33 = charSequenceQueue7.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList44.contains(obj46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList50.contains(obj52);
        java.lang.String str54 = charSequenceList50.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceList50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean58 = charSequenceList44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean59 = charSequenceQueue38.remove((java.lang.Object) charSequenceQueue56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        java.lang.Object[] objArray61 = charSequenceQueue56.toArray();
        boolean boolean62 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.CharSequence charSequence63 = charSequenceQueue56.peek();
        int int64 = charSequenceQueue56.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue56.stream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(charSequenceStream65);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.poll();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence23 = charSequenceQueue20.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.element();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41, charSequenceArray40);
        boolean boolean43 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean44 = charSequenceList36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean45 = charSequenceList31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean46 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean47 = charSequenceQueue20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean48 = charSequenceList11.remove((java.lang.Object) boolean47);
        boolean boolean49 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        boolean boolean50 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNull(charSequence8);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceList19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean28 = charSequenceQueue24.isAtFullCapacity();
        int int29 = charSequenceQueue24.maxSize();
        boolean boolean30 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean32 = charSequenceQueue11.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceQueue11.remove();
        boolean boolean34 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        int int35 = charSequenceQueue1.size();
        boolean boolean36 = charSequenceQueue1.isFull();
        boolean boolean38 = charSequenceQueue1.add((java.lang.CharSequence) "[, [[, ]]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        int int20 = charSequenceQueue12.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        boolean boolean26 = charSequenceQueue22.add((java.lang.CharSequence) "hi!");
        int int27 = charSequenceQueue22.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue22.iterator();
        java.lang.CharSequence charSequence29 = charSequenceQueue22.peek();
        boolean boolean30 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence32 = charSequenceQueue12.get((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10 + "'", int20 == 10);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "" + "'", charSequence29, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.stream();
        java.lang.String str13 = charSequenceQueue7.toString();
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "[, ]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[, ]" + "'", str13, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue12.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean19 = charSequenceQueue12.contains((java.lang.Object) charSequenceQueue16);
        boolean boolean20 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean21 = charSequenceQueue12.isEmpty();
        java.lang.CharSequence charSequence22 = charSequenceQueue12.peek();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence24 = charSequenceQueue12.get((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (0) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        boolean boolean28 = charSequenceQueue23.isFull();
        boolean boolean29 = charSequenceQueue23.isFull();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        charSequenceQueue10.clear();
        int int32 = charSequenceQueue10.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor33 = charSequenceQueue10.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor33);
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean21 = charSequenceQueue12.isEmpty();
        int int22 = charSequenceQueue12.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence23 = charSequenceQueue12.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean23 = charSequenceQueue16.isAtFullCapacity();
        charSequenceQueue16.clear();
        boolean boolean25 = charSequenceQueue16.isFull();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean38 = charSequenceQueue34.isAtFullCapacity();
        java.lang.Object[] objArray39 = charSequenceQueue34.toArray();
        boolean boolean41 = charSequenceQueue34.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean50 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean51 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue49);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence56 = charSequenceQueue53.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue53.parallelStream();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66, charSequenceArray65);
        boolean boolean68 = charSequenceQueue66.isAtFullCapacity();
        boolean boolean69 = charSequenceList61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean70 = charSequenceQueue66.isAtFullCapacity();
        int int71 = charSequenceQueue66.maxSize();
        boolean boolean72 = charSequenceQueue53.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue66);
        boolean boolean74 = charSequenceQueue53.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence75 = charSequenceQueue53.remove();
        boolean boolean76 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence[] charSequenceArray78 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList79 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList79, charSequenceArray78);
        java.lang.Object obj81 = null;
        boolean boolean82 = charSequenceList79.contains(obj81);
        java.lang.String str83 = charSequenceList79.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean86 = charSequenceList79.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor87 = charSequenceQueue85.iterator();
        charSequenceQueue85.clear();
        java.lang.CharSequence charSequence89 = charSequenceQueue85.poll();
        boolean boolean90 = charSequenceQueue34.remove((java.lang.Object) charSequenceQueue85);
        boolean boolean91 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 32 + "'", int71 == 32);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "" + "'", charSequence75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "[hi!]" + "'", str83, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceItor87);
        org.junit.Assert.assertNull(charSequence89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean67 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue54);
        boolean boolean68 = charSequenceQueue1.isFull();
        boolean boolean70 = charSequenceQueue1.add((java.lang.CharSequence) "[[, hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        boolean boolean16 = charSequenceQueue8.offer((java.lang.CharSequence) "[[hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue18.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue18.spliterator();
        boolean boolean22 = charSequenceQueue18.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence23 = charSequenceQueue18.poll();
        boolean boolean25 = charSequenceQueue18.add((java.lang.CharSequence) "");
        charSequenceQueue18.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        boolean boolean47 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean48 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean49 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean50 = charSequenceQueue18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.util.AbstractCollection[] abstractCollectionArray52 = new java.util.AbstractCollection[0];
        @SuppressWarnings("unchecked")
        java.util.AbstractCollection<java.lang.CharSequence>[] charSequenceCollectionArray53 = (java.util.AbstractCollection<java.lang.CharSequence>[]) abstractCollectionArray52;
        java.util.AbstractCollection<java.lang.CharSequence>[] charSequenceCollectionArray54 = charSequenceQueue28.toArray(charSequenceCollectionArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.AbstractCollection<java.lang.CharSequence>[] charSequenceCollectionArray55 = charSequenceQueue8.toArray(charSequenceCollectionArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(abstractCollectionArray52);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray53);
        org.junit.Assert.assertNotNull(charSequenceCollectionArray54);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue61.spliterator();
        java.lang.CharSequence charSequence63 = charSequenceQueue61.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        boolean boolean68 = charSequenceQueue61.contains((java.lang.Object) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence73 = charSequenceQueue70.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue70.parallelStream();
        boolean boolean76 = charSequenceQueue70.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue70.spliterator();
        boolean boolean78 = charSequenceQueue61.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        boolean boolean79 = charSequenceQueue70.isFull();
        boolean boolean80 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence81 = charSequenceQueue70.peek();
        boolean boolean83 = charSequenceQueue70.offer((java.lang.CharSequence) "[, hi!]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream84 = charSequenceQueue70.stream();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(charSequenceStream84);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        boolean boolean47 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean48 = charSequenceQueue39.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean50 = charSequenceQueue45.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence51 = charSequenceQueue45.remove();
        boolean boolean53 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        charSequenceQueue45.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue45.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray64 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65, charSequenceArray64);
        boolean boolean67 = charSequenceQueue65.isAtFullCapacity();
        boolean boolean68 = charSequenceQueue59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue70.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator72 = charSequenceQueue70.spliterator();
        boolean boolean74 = charSequenceQueue70.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence75 = charSequenceQueue70.poll();
        boolean boolean76 = charSequenceQueue65.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence77 = charSequenceQueue65.remove();
        boolean boolean78 = charSequenceQueue57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.CharSequence[] charSequenceArray80 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList81 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList81, charSequenceArray80);
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray90 = charSequenceList81.toArray((java.lang.Comparable<java.lang.String>[]) strArray89);
        java.lang.String[] strArray91 = charSequenceQueue57.toArray(strArray89);
        java.lang.String[] strArray92 = charSequenceQueue45.toArray(strArray89);
        java.lang.CharSequence[] charSequenceArray93 = charSequenceQueue7.toArray((java.lang.CharSequence[]) strArray92);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertNotNull(charSequenceSpliterator72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "" + "'", charSequence75, "");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strComparableArray90);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertNotNull(charSequenceArray93);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.size();
        int int14 = charSequenceQueue7.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue16.parallelStream();
        boolean boolean19 = charSequenceQueue16.contains((java.lang.Object) 1.0d);
        boolean boolean21 = charSequenceQueue16.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence22 = charSequenceQueue16.remove();
        boolean boolean23 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.lang.CharSequence charSequence24 = charSequenceQueue16.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue26.spliterator();
        boolean boolean30 = charSequenceQueue26.add((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue26.isAtFullCapacity();
        java.lang.CharSequence charSequence32 = charSequenceQueue26.element();
        boolean boolean34 = charSequenceQueue26.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean35 = charSequenceQueue26.isEmpty();
        boolean boolean37 = charSequenceQueue26.offer((java.lang.CharSequence) "[, , [, ]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.lang.CharSequence charSequence41 = charSequenceQueue39.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        boolean boolean46 = charSequenceQueue39.contains((java.lang.Object) charSequenceQueue43);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue39.iterator();
        boolean boolean48 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean49 = charSequenceQueue16.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "[hi!]" + "'", charSequence22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNull(charSequence24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNull(charSequence41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceStream7);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence charSequence31 = charSequenceQueue1.remove();
        boolean boolean32 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.lang.Object[] objArray5 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        charSequenceQueue7.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue7.parallelStream();
        boolean boolean17 = charSequenceQueue1.remove((java.lang.Object) charSequenceStream16);
        boolean boolean18 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(objArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray5), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray5), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        boolean boolean14 = charSequenceQueue1.offer((java.lang.CharSequence) "[, hi!]");
        java.lang.Object[] objArray15 = charSequenceQueue1.toArray();
        java.lang.CharSequence charSequence16 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(objArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray15), "[[, hi!]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray15), "[[, hi!]]");
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "[, hi!]" + "'", charSequence16, "[, hi!]");
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue13.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceQueue13.poll();
        boolean boolean16 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence21 = charSequenceQueue18.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.element();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39, charSequenceArray38);
        boolean boolean41 = charSequenceQueue39.isAtFullCapacity();
        boolean boolean42 = charSequenceList34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean43 = charSequenceList29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean44 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        boolean boolean45 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        java.lang.Object[] objArray46 = charSequenceQueue18.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue18.parallelStream();
        java.lang.CharSequence charSequence48 = charSequenceQueue18.remove();
        boolean boolean49 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue18);
        boolean boolean51 = charSequenceQueue18.offer((java.lang.CharSequence) "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean23 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean24 = charSequenceQueue9.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        int int16 = charSequenceQueue15.maxSize();
        java.lang.Object[] objArray17 = charSequenceQueue15.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue15.spliterator();
        java.lang.String str19 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence20 = charSequenceQueue15.element();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(objArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray17), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray17), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "hi!" + "'", charSequence20, "hi!");
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue11.stream();
        int int17 = charSequenceQueue11.size();
        boolean boolean18 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue11);
        java.lang.CharSequence charSequence19 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = charSequenceQueue20.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue23.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue23.spliterator();
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue23.poll();
        boolean boolean30 = charSequenceQueue23.add((java.lang.CharSequence) "");
        charSequenceQueue23.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue23.stream();
        charSequenceQueue23.clear();
        boolean boolean34 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean35 = charSequenceQueue20.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue20.iterator();
        boolean boolean37 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue20);
        int int38 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray24 = charSequenceList15.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.lang.Comparable<java.lang.String>[] strComparableArray25 = charSequenceQueue3.toArray((java.lang.Comparable<java.lang.String>[]) strArray23);
        java.lang.CharSequence charSequence26 = charSequenceQueue3.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue28.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue28.spliterator();
        boolean boolean32 = charSequenceQueue28.add((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue28.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue28.iterator();
        boolean boolean35 = charSequenceQueue3.contains((java.lang.Object) charSequenceItor34);
        boolean boolean37 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        int int38 = charSequenceQueue3.size();
        java.lang.String str39 = charSequenceQueue3.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strComparableArray24);
        org.junit.Assert.assertNotNull(strComparableArray25);
        org.junit.Assert.assertNull(charSequence26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 1 + "'", int38 == 1);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        boolean boolean30 = charSequenceList18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean31 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean32 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue13);
        boolean boolean33 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence charSequence36 = charSequenceQueue1.poll();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        boolean boolean47 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean48 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean49 = charSequenceQueue45.isAtFullCapacity();
        java.lang.Object[] objArray50 = charSequenceQueue45.toArray();
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) false);
        java.lang.CharSequence charSequence53 = charSequenceQueue45.poll();
        java.lang.CharSequence[] charSequenceArray55 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList56 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList56, charSequenceArray55);
        java.lang.Object obj58 = null;
        boolean boolean59 = charSequenceList56.contains(obj58);
        java.lang.String str60 = charSequenceList56.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceList56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor64 = charSequenceQueue62.iterator();
        boolean boolean65 = charSequenceQueue62.isFull();
        java.lang.CharSequence charSequence66 = charSequenceQueue62.peek();
        java.lang.CharSequence charSequence67 = charSequenceQueue62.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue62.stream();
        java.lang.Object[] objArray69 = charSequenceQueue62.toArray();
        boolean boolean70 = charSequenceQueue45.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator71 = charSequenceQueue45.spliterator();
        boolean boolean72 = charSequenceQueue1.contains((java.lang.Object) charSequenceSpliterator71);
        java.lang.Object[] objArray73 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertNotNull(charSequenceArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[hi!]" + "'", str60, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceItor64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(charSequence66);
        org.junit.Assert.assertNull(charSequence67);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[]");
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue11.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue11.spliterator();
        boolean boolean15 = charSequenceQueue11.add((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue11.isAtFullCapacity();
        java.lang.CharSequence charSequence17 = charSequenceQueue11.element();
        int int18 = charSequenceQueue11.size();
        boolean boolean19 = charSequenceList2.remove((java.lang.Object) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        boolean boolean33 = charSequenceQueue28.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int34 = charSequenceQueue28.maxSize();
        boolean boolean35 = charSequenceQueue20.contains((java.lang.Object) int34);
        int int36 = charSequenceQueue20.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 32 + "'", int34 == 32);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 1 + "'", int36 == 1);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean30 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        java.lang.CharSequence charSequence31 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence32 = charSequenceQueue8.poll();
        boolean boolean33 = charSequenceQueue8.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(charSequence31);
        org.junit.Assert.assertNull(charSequence32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream13 = charSequenceQueue9.parallelStream();
        boolean boolean15 = charSequenceQueue9.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue9.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        int int25 = charSequenceQueue19.size();
        boolean boolean26 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue19);
        java.lang.CharSequence charSequence27 = charSequenceQueue9.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = charSequenceQueue28.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator33 = charSequenceQueue31.spliterator();
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue31.poll();
        boolean boolean38 = charSequenceQueue31.add((java.lang.CharSequence) "");
        charSequenceQueue31.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue31.stream();
        charSequenceQueue31.clear();
        boolean boolean42 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean43 = charSequenceQueue28.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor44 = charSequenceQueue28.iterator();
        boolean boolean45 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue28);
        boolean boolean46 = charSequenceQueue1.remove((java.lang.Object) boolean45);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue1.iterator();
        boolean boolean48 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceStream13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceItor44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceItor47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        boolean boolean9 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean10 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue13.spliterator();
        java.lang.CharSequence charSequence15 = charSequenceQueue13.peek();
        boolean boolean16 = charSequenceQueue13.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue24.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator29 = charSequenceQueue24.spliterator();
        charSequenceQueue24.clear();
        int int31 = charSequenceQueue24.maxSize();
        boolean boolean32 = charSequenceQueue13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence33 = charSequenceQueue24.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.String str38 = charSequenceQueue35.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor39 = charSequenceQueue35.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue35.parallelStream();
        boolean boolean41 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44, charSequenceArray43);
        int int46 = charSequenceQueue44.maxSize();
        boolean boolean47 = charSequenceQueue44.isFull();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor48 = charSequenceQueue44.iterator();
        boolean boolean49 = charSequenceQueue35.remove((java.lang.Object) charSequenceQueue44);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        int int51 = charSequenceQueue44.size();
        java.lang.CharSequence charSequence52 = charSequenceQueue44.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNull(charSequence15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertNotNull(charSequenceSpliterator29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[]" + "'", str38, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor39);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceItor48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 1 + "'", int51 == 1);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.AutoCloseable> autoCloseableQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.AutoCloseable>();
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        boolean boolean33 = charSequenceQueue25.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue35.parallelStream();
        boolean boolean38 = charSequenceQueue35.contains((java.lang.Object) 1.0d);
        boolean boolean39 = charSequenceQueue35.isFull();
        boolean boolean40 = charSequenceQueue35.isFull();
        int int41 = charSequenceQueue35.maxSize();
        int int42 = charSequenceQueue35.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceQueue44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue44.stream();
        boolean boolean55 = charSequenceQueue35.contains((java.lang.Object) charSequenceStream54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        int int59 = charSequenceQueue57.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray64 = charSequenceQueue61.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceQueue61.iterator();
        boolean boolean66 = charSequenceQueue57.remove((java.lang.Object) charSequenceQueue61);
        boolean boolean67 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.lang.Object obj68 = null;
        boolean boolean69 = charSequenceQueue57.remove(obj68);
        java.lang.CharSequence charSequence70 = charSequenceQueue57.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean74 = charSequenceQueue72.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray75 = charSequenceQueue72.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor76 = charSequenceQueue72.iterator();
        boolean boolean78 = charSequenceQueue72.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceQueue72.remove(obj79);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceQueue72.stream();
        int int82 = charSequenceQueue72.maxSize();
        boolean boolean83 = charSequenceQueue57.remove((java.lang.Object) charSequenceQueue72);
        boolean boolean84 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator85 = charSequenceQueue25.spliterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(objArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray64), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray64), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(objArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray75), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray75), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator85);
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int2 = charSequenceQueue1.maxSize();
        java.lang.CharSequence[] charSequenceArray4 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList5 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList5, charSequenceArray4);
        java.lang.Object obj7 = null;
        boolean boolean8 = charSequenceList5.contains(obj7);
        java.lang.String str9 = charSequenceList5.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceList5.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.lang.Object[] objArray13 = charSequenceQueue11.toArray();
        boolean boolean14 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue11);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 100 + "'", int2 == 100);
        org.junit.Assert.assertNotNull(charSequenceArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[hi!]" + "'", str9, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean7 = charSequenceQueue1.isFull();
        int int8 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence33 = charSequenceQueue31.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence43 = charSequenceQueue40.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue40.parallelStream();
        boolean boolean46 = charSequenceQueue40.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue40.spliterator();
        boolean boolean48 = charSequenceQueue31.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean49 = charSequenceQueue40.isFull();
        java.lang.CharSequence charSequence50 = charSequenceQueue40.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue40.parallelStream();
        boolean boolean52 = charSequenceQueue40.isFull();
        boolean boolean54 = charSequenceQueue40.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean55 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence43 + "' != '" + "" + "'", charSequence43, "");
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor23 = charSequenceQueue10.iterator();
        boolean boolean25 = charSequenceQueue10.offer((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceItor23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.Object[] objArray40 = charSequenceQueue33.toArray();
        boolean boolean41 = charSequenceQueue33.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor42 = charSequenceQueue33.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue33.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceItor42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue54.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue54.parallelStream();
        boolean boolean61 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean63 = charSequenceQueue42.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.CharSequence charSequence65 = charSequenceQueue42.remove();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "hi!" + "'", charSequence65, "hi!");
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.remove();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        boolean boolean32 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean33 = charSequenceQueue15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean34 = charSequenceQueue13.remove((java.lang.Object) charSequenceQueue15);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62, charSequenceArray61);
        boolean boolean64 = charSequenceQueue62.isAtFullCapacity();
        boolean boolean65 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean66 = charSequenceQueue62.isAtFullCapacity();
        int int67 = charSequenceQueue62.maxSize();
        boolean boolean68 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean69 = charSequenceQueue13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.Object[] objArray70 = charSequenceQueue62.toArray();
        java.lang.CharSequence charSequence71 = charSequenceQueue62.element();
        java.lang.CharSequence charSequence73 = charSequenceQueue62.get((int) (short) 1);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue62.stream();
        boolean boolean76 = charSequenceQueue62.add((java.lang.CharSequence) "[, [hi!]]");
        boolean boolean77 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue62);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 32 + "'", int67 == 32);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(objArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray70), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray70), "[, ]");
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean35 = charSequenceQueue31.isAtFullCapacity();
        java.lang.Object[] objArray36 = charSequenceQueue31.toArray();
        boolean boolean38 = charSequenceQueue31.contains((java.lang.Object) false);
        boolean boolean39 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48, charSequenceArray47);
        boolean boolean50 = charSequenceQueue48.isAtFullCapacity();
        boolean boolean51 = charSequenceList43.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.lang.CharSequence charSequence52 = charSequenceQueue48.poll();
        boolean boolean53 = charSequenceQueue48.isAtFullCapacity();
        java.lang.CharSequence charSequence54 = charSequenceQueue48.element();
        charSequenceQueue48.clear();
        boolean boolean56 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue48.parallelStream();
        charSequenceQueue48.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.lang.CharSequence charSequence16 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue14.contains((java.lang.Object) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue23.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue23.spliterator();
        boolean boolean31 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence charSequence32 = charSequenceQueue23.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue23.stream();
        java.lang.CharSequence charSequence34 = charSequenceQueue23.element();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue23.iterator();
        boolean boolean36 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue23);
        java.lang.CharSequence charSequence37 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNull(charSequence16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceItor35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(charSequence37);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '#');
        boolean boolean4 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.String str11 = charSequenceList7.toString();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList14 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = charSequenceList14.contains(obj16);
        java.lang.String str18 = charSequenceList14.toString();
        boolean boolean19 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList14);
        java.lang.Object[] objArray21 = charSequenceList14.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean31 = charSequenceQueue23.isEmpty();
        boolean boolean33 = charSequenceQueue23.remove((java.lang.Object) 10.0d);
        charSequenceQueue23.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int37 = charSequenceQueue36.maxSize();
        boolean boolean38 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue36);
        boolean boolean39 = charSequenceList14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue47.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator52 = charSequenceQueue47.spliterator();
        boolean boolean53 = charSequenceList14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue47.stream();
        boolean boolean55 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue47);
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!]" + "'", str11, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[hi!]" + "'", str18, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(objArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray21), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray21), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 100 + "'", int37 == 100);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceSpliterator52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        int int6 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray7 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(objArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray7), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray7), "[]");
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue10.contains((java.lang.Object) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue19.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue19.spliterator();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence28 = charSequenceQueue19.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        int int33 = charSequenceQueue31.maxSize();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.lang.String str35 = charSequenceQueue31.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Queue[] queueArray56 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[]) queueArray56;
        charSequenceQueueArray57[0] = charSequenceQueue31;
        charSequenceQueueArray57[1] = charSequenceQueue48;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray62 = charSequenceQueue19.toArray(charSequenceQueueArray57);
        boolean boolean63 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.lang.CharSequence charSequence64 = charSequenceQueue19.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean68 = charSequenceQueue66.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray71 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72, charSequenceArray71);
        boolean boolean74 = charSequenceQueue72.isAtFullCapacity();
        boolean boolean75 = charSequenceQueue66.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        boolean boolean76 = charSequenceQueue72.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue78.spliterator();
        java.lang.CharSequence charSequence80 = charSequenceQueue78.peek();
        boolean boolean81 = charSequenceQueue78.isEmpty();
        int int82 = charSequenceQueue78.maxSize();
        boolean boolean83 = charSequenceQueue72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        java.lang.String str84 = charSequenceQueue78.toString();
        boolean boolean85 = charSequenceQueue78.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream86 = charSequenceQueue78.parallelStream();
        boolean boolean87 = charSequenceQueue19.remove((java.lang.Object) charSequenceStream86);
        boolean boolean89 = charSequenceQueue19.add((java.lang.CharSequence) "[, , hi!]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor90 = charSequenceQueue19.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(charSequenceQueueArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(charSequenceArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertNull(charSequence80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[]" + "'", str84, "[]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(charSequenceStream86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(charSequenceItor90);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue7.stream();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList47 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47, charSequenceArray46);
        java.lang.Object obj49 = null;
        boolean boolean50 = charSequenceList47.contains(obj49);
        java.lang.String str51 = charSequenceList47.toString();
        boolean boolean52 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList47);
        boolean boolean54 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList58 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList58, charSequenceArray57);
        java.lang.CharSequence[] charSequenceArray62 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63, charSequenceArray62);
        boolean boolean65 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean66 = charSequenceList58.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean67 = charSequenceQueue63.isAtFullCapacity();
        boolean boolean69 = charSequenceQueue63.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence70 = charSequenceQueue63.element();
        boolean boolean71 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue73.spliterator();
        java.lang.CharSequence charSequence75 = charSequenceQueue73.peek();
        boolean boolean76 = charSequenceQueue73.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray83 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue84 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84, charSequenceArray83);
        boolean boolean86 = charSequenceQueue84.isAtFullCapacity();
        boolean boolean87 = charSequenceQueue78.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor88 = charSequenceQueue84.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator89 = charSequenceQueue84.spliterator();
        charSequenceQueue84.clear();
        int int91 = charSequenceQueue84.maxSize();
        boolean boolean92 = charSequenceQueue73.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue84);
        java.lang.CharSequence charSequence93 = charSequenceQueue84.poll();
        java.lang.Object[] objArray94 = charSequenceQueue84.toArray();
        boolean boolean95 = charSequenceQueue63.contains((java.lang.Object) charSequenceQueue84);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor96 = charSequenceQueue84.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator97 = charSequenceQueue84.spliterator();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[hi!]" + "'", str51, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertNull(charSequence75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(charSequenceItor88);
        org.junit.Assert.assertNotNull(charSequenceSpliterator89);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 32 + "'", int91 == 32);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNull(charSequence93);
        org.junit.Assert.assertNotNull(objArray94);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray94), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray94), "[]");
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + false + "'", boolean95 == false);
        org.junit.Assert.assertNotNull(charSequenceItor96);
        org.junit.Assert.assertNotNull(charSequenceSpliterator97);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        int int5 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray6 = charSequenceQueue1.toArray();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        boolean boolean17 = charSequenceQueue9.isEmpty();
        boolean boolean19 = charSequenceQueue9.remove((java.lang.Object) 10.0d);
        charSequenceQueue9.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int23 = charSequenceQueue22.maxSize();
        boolean boolean24 = charSequenceQueue9.remove((java.lang.Object) charSequenceQueue22);
        boolean boolean25 = charSequenceQueue9.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]> strArrayQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.String[]>();
        boolean boolean27 = charSequenceQueue9.contains((java.lang.Object) strArrayQueue26);
        java.lang.CharSequence charSequence28 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence29 = charSequenceQueue9.peek();
        boolean boolean30 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean32 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 10 + "'", int5 == 10);
        org.junit.Assert.assertNotNull(objArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray6), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray6), "[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 100 + "'", int23 == 100);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue10.contains((java.lang.Object) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue19.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue19.spliterator();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence28 = charSequenceQueue19.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        int int33 = charSequenceQueue31.maxSize();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.lang.String str35 = charSequenceQueue31.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Queue[] queueArray56 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[]) queueArray56;
        charSequenceQueueArray57[0] = charSequenceQueue31;
        charSequenceQueueArray57[1] = charSequenceQueue48;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray62 = charSequenceQueue19.toArray(charSequenceQueueArray57);
        boolean boolean63 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence64 = charSequenceQueue19.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(charSequenceQueueArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence22 = charSequenceQueue1.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (1) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue12.isAtFullCapacity();
        int int18 = charSequenceQueue12.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        boolean boolean24 = charSequenceQueue20.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue20.stream();
        boolean boolean26 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean27 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        int int28 = charSequenceQueue12.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNull(charSequence10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        boolean boolean15 = charSequenceQueue8.offer((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue23.isAtFullCapacity();
        boolean boolean26 = charSequenceQueue17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean28 = charSequenceQueue23.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean29 = charSequenceQueue23.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue31.parallelStream();
        boolean boolean37 = charSequenceQueue31.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue31.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue31.element();
        boolean boolean40 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49, charSequenceArray48);
        boolean boolean51 = charSequenceQueue49.isAtFullCapacity();
        boolean boolean52 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean53 = charSequenceQueue49.isAtFullCapacity();
        boolean boolean54 = charSequenceQueue49.isAtFullCapacity();
        boolean boolean55 = charSequenceQueue23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        java.lang.Object[] objArray56 = charSequenceQueue49.toArray();
        boolean boolean57 = charSequenceQueue49.isEmpty();
        boolean boolean58 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator5 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        int int7 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence charSequence12 = charSequenceQueue11.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.element();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean34 = charSequenceList20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean35 = charSequenceQueue14.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.Object obj47 = null;
        boolean boolean48 = charSequenceList45.contains(obj47);
        java.lang.String str49 = charSequenceList45.toString();
        boolean boolean50 = charSequenceList38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue51.stream();
        boolean boolean53 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean54 = charSequenceQueue51.isFull();
        boolean boolean55 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue51);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!]" + "'", str49, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        int int19 = charSequenceQueue15.maxSize();
        boolean boolean20 = charSequenceQueue15.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue15.stream();
        boolean boolean22 = charSequenceQueue15.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence35 = charSequenceQueue31.poll();
        boolean boolean36 = charSequenceQueue31.isEmpty();
        boolean boolean37 = charSequenceQueue15.remove((java.lang.Object) boolean36);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        charSequenceQueue18.clear();
        boolean boolean23 = charSequenceQueue18.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceList32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        charSequenceQueue38.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue38.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray46 = charSequenceQueue43.toArray();
        boolean boolean47 = charSequenceQueue38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        java.lang.String str52 = charSequenceQueue49.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue49.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue49.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        boolean boolean60 = charSequenceQueue49.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean61 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean62 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean63 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream64 = charSequenceQueue8.stream();
        int int65 = charSequenceQueue8.maxSize();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[]" + "'", str52, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(charSequenceStream64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue10.spliterator();
        java.lang.CharSequence charSequence12 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue10.contains((java.lang.Object) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue19.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue19.spliterator();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence28 = charSequenceQueue19.poll();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        int int33 = charSequenceQueue31.maxSize();
        boolean boolean34 = charSequenceQueue31.isFull();
        java.lang.String str35 = charSequenceQueue31.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        java.util.Queue[] queueArray56 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[]) queueArray56;
        charSequenceQueueArray57[0] = charSequenceQueue31;
        charSequenceQueueArray57[1] = charSequenceQueue48;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray62 = charSequenceQueue19.toArray(charSequenceQueueArray57);
        boolean boolean63 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.lang.CharSequence charSequence64 = charSequenceQueue19.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue66 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue66.spliterator();
        java.lang.CharSequence charSequence68 = charSequenceQueue66.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        boolean boolean73 = charSequenceQueue66.contains((java.lang.Object) charSequenceQueue70);
        java.lang.CharSequence charSequence74 = charSequenceQueue66.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceQueue76.spliterator();
        boolean boolean80 = charSequenceQueue76.add((java.lang.CharSequence) "");
        boolean boolean81 = charSequenceQueue76.isAtFullCapacity();
        int int82 = charSequenceQueue76.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator83 = charSequenceQueue76.spliterator();
        boolean boolean84 = charSequenceQueue66.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        boolean boolean86 = charSequenceQueue76.offer((java.lang.CharSequence) "[, hi!]");
        boolean boolean88 = charSequenceQueue76.offer((java.lang.CharSequence) "[]");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor89 = charSequenceQueue76.iterator();
        boolean boolean90 = charSequenceQueue19.contains((java.lang.Object) charSequenceItor89);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 32 + "'", int33 == 32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(charSequenceQueueArray62);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertNull(charSequence68);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNull(charSequence74);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 10 + "'", int82 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(charSequenceItor89);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        int int14 = charSequenceQueue12.maxSize();
        boolean boolean15 = charSequenceQueue12.isFull();
        boolean boolean17 = charSequenceQueue12.add((java.lang.CharSequence) "[hi!]");
        boolean boolean18 = charSequenceQueue12.isFull();
        int int19 = charSequenceQueue12.maxSize();
        java.lang.CharSequence charSequence20 = charSequenceQueue12.peek();
        boolean boolean21 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence22 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 32 + "'", int14 == 32);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(charSequence22);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue7.isEmpty();
        boolean boolean39 = charSequenceQueue7.offer((java.lang.CharSequence) "[, [, ]]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.String str49 = charSequenceQueue46.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor50 = charSequenceQueue46.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator51 = charSequenceQueue46.spliterator();
        boolean boolean52 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.Object[] objArray53 = charSequenceQueue46.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[]" + "'", str49, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor50);
        org.junit.Assert.assertNotNull(charSequenceSpliterator51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        boolean boolean27 = charSequenceQueue25.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.peek();
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceQueue25.contains(obj29);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        java.lang.CharSequence charSequence44 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.CharSequence charSequence57 = charSequenceQueue53.poll();
        boolean boolean58 = charSequenceQueue53.isAtFullCapacity();
        java.lang.CharSequence charSequence59 = charSequenceQueue53.element();
        charSequenceQueue53.clear();
        boolean boolean61 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator62 = charSequenceQueue38.spliterator();
        int int63 = charSequenceQueue38.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "hi!" + "'", charSequence44, "hi!");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.Object obj41 = null;
        boolean boolean42 = charSequenceList39.contains(obj41);
        java.lang.String str43 = charSequenceList39.toString();
        boolean boolean44 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList39);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue45.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue49.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue49.contains((java.lang.Object) charSequenceQueue53);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue49.iterator();
        boolean boolean58 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        int int59 = charSequenceQueue49.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue49.iterator();
        boolean boolean61 = charSequenceQueue25.remove((java.lang.Object) charSequenceItor60);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue25.parallelStream();
        charSequenceQueue25.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue67 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator68 = charSequenceQueue67.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue67.spliterator();
        boolean boolean71 = charSequenceQueue67.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence72 = charSequenceQueue67.poll();
        boolean boolean74 = charSequenceQueue67.add((java.lang.CharSequence) "");
        charSequenceQueue67.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream76 = charSequenceQueue67.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence81 = charSequenceQueue78.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream82 = charSequenceQueue78.parallelStream();
        boolean boolean84 = charSequenceQueue78.contains((java.lang.Object) (short) 100);
        boolean boolean85 = charSequenceQueue67.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean86 = charSequenceQueue65.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue67);
        boolean boolean87 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue67);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[hi!]" + "'", str43, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertNotNull(charSequenceSpliterator68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "" + "'", charSequence72, "");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceStream76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + charSequence81 + "' != '" + "" + "'", charSequence81, "");
        org.junit.Assert.assertNotNull(charSequenceStream82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence14 = charSequenceQueue7.element();
        java.lang.CharSequence charSequence15 = charSequenceQueue7.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.String str22 = charSequenceList18.toString();
        boolean boolean23 = charSequenceList11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18);
        boolean boolean24 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList34 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34, charSequenceArray33);
        java.lang.Object obj36 = null;
        boolean boolean37 = charSequenceList34.contains(obj36);
        java.lang.String str38 = charSequenceList34.toString();
        boolean boolean39 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceQueue41.add((java.lang.CharSequence) "hi!");
        int int46 = charSequenceQueue41.maxSize();
        boolean boolean47 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean48 = charSequenceList11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean50 = charSequenceQueue41.remove((java.lang.Object) 100);
        boolean boolean51 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.Object[] objArray52 = charSequenceQueue41.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator53 = charSequenceQueue41.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor54 = charSequenceQueue41.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue41.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[hi!]" + "'", str22, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 52 + "'", int46 == 52);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator53);
        org.junit.Assert.assertNotNull(charSequenceItor54);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.lang.String str7 = charSequenceQueue1.toString();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[]" + "'", str7, "[]");
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.element();
        boolean boolean21 = charSequenceQueue10.add((java.lang.CharSequence) "[[hi!], [hi!]]");
        java.lang.Object[] objArray22 = charSequenceQueue10.toArray();
        java.lang.CharSequence charSequence23 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.Object obj28 = null;
        boolean boolean29 = charSequenceList26.contains(obj28);
        java.lang.String str30 = charSequenceList26.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceList26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        charSequenceQueue32.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue32.spliterator();
        boolean boolean36 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean37 = charSequenceQueue10.isEmpty();
        boolean boolean38 = charSequenceQueue10.isFull();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.Object obj43 = null;
        boolean boolean44 = charSequenceList41.contains(obj43);
        java.lang.String str45 = charSequenceList41.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceList41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        charSequenceQueue47.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue47.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceQueue52.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceQueue52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        int int62 = charSequenceQueue58.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue58.stream();
        int int64 = charSequenceQueue58.maxSize();
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean66 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, [[hi!], [hi!]]]");
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[hi!]" + "'", str30, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!]" + "'", str45, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 32 + "'", int62 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 32 + "'", int64 == 32);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue15.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue19.spliterator();
        boolean boolean23 = charSequenceQueue19.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue19.poll();
        boolean boolean26 = charSequenceQueue19.add((java.lang.CharSequence) "");
        charSequenceQueue19.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList43.contains(obj45);
        java.lang.String str47 = charSequenceList43.toString();
        boolean boolean48 = charSequenceList36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43);
        boolean boolean49 = charSequenceQueue31.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        boolean boolean50 = charSequenceQueue29.remove((java.lang.Object) charSequenceQueue31);
        boolean boolean51 = charSequenceQueue19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean53 = charSequenceQueue19.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean54 = charSequenceQueue15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean55 = charSequenceQueue19.isEmpty();
        charSequenceQueue19.clear();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!]" + "'", str47, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        int int12 = charSequenceQueue7.size();
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        java.lang.Class<?> wildcardClass14 = charSequenceQueue7.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2 + "'", int12 == 2);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean9 = charSequenceQueue5.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue5.stream();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        boolean boolean31 = charSequenceQueue27.add((java.lang.CharSequence) "hi!");
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.peek();
        boolean boolean40 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean41 = charSequenceList13.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean42 = charSequenceQueue5.contains((java.lang.Object) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue5.stream();
        boolean boolean44 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue5);
        charSequenceQueue5.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue5.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor47 = charSequenceQueue5.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 52 + "'", int32 == 52);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertNotNull(charSequenceItor47);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        charSequenceQueue8.clear();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean30 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        boolean boolean32 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        int int33 = charSequenceQueue1.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue44.parallelStream();
        boolean boolean50 = charSequenceQueue44.contains((java.lang.Object) (short) 100);
        charSequenceQueue44.clear();
        boolean boolean52 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean54 = charSequenceQueue53.isFull();
        java.lang.CharSequence charSequence55 = charSequenceQueue53.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.remove((java.lang.Object) 10.0d);
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int15 = charSequenceQueue14.maxSize();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue14);
        boolean boolean17 = charSequenceQueue1.isEmpty();
        boolean boolean18 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue20.spliterator();
        boolean boolean24 = charSequenceQueue20.add((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue20.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor26 = charSequenceQueue20.iterator();
        java.lang.Object[] objArray27 = charSequenceQueue20.toArray();
        boolean boolean28 = charSequenceQueue20.isAtFullCapacity();
        java.lang.CharSequence charSequence30 = charSequenceQueue20.get((int) (byte) 0);
        java.lang.CharSequence charSequence31 = charSequenceQueue20.poll();
        boolean boolean32 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        java.util.Collection<java.lang.CharSequence> charSequenceCollection33 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean34 = charSequenceQueue1.retainAll(charSequenceCollection33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertNotNull(objArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray27), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray27), "[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        java.lang.String str21 = charSequenceQueue7.toString();
        int int22 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence24 = charSequenceQueue7.get((int) (byte) 0);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue7.stream();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence27 = charSequenceQueue7.get(5);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (5) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 32 + "'", int22 == 32);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        java.lang.Comparable[][][][] comparableArray4 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray5 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray4;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray6 = charSequenceQueue1.toArray(strComparableArray5);
        java.lang.Class<?> wildcardClass7 = strComparableArray5.getClass();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertNotNull(comparableArray4);
        org.junit.Assert.assertNotNull(strComparableArray5);
        org.junit.Assert.assertNotNull(strComparableArray6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceList25.toArray((java.lang.Comparable<java.lang.String>[]) strArray33);
        java.lang.String[] strArray35 = charSequenceQueue1.toArray(strArray33);
        java.lang.CharSequence charSequence36 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList44.contains(obj46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList50.contains(obj52);
        java.lang.String str54 = charSequenceList50.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceList50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean58 = charSequenceList44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean59 = charSequenceQueue38.remove((java.lang.Object) charSequenceQueue56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        boolean boolean61 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue56);
        java.lang.Class<?> wildcardClass62 = charSequenceQueue56.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (byte) 10);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue4.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue4.stream();
        boolean boolean10 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue4);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList14 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean22 = charSequenceList14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence23 = charSequenceQueue19.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.parallelStream();
        boolean boolean25 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.lang.CharSequence charSequence26 = charSequenceQueue1.element();
        java.lang.String str27 = charSequenceQueue1.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue34.element();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean55 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean56 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        java.lang.Object[] objArray57 = charSequenceQueue29.toArray();
        java.lang.Object[] objArray58 = charSequenceQueue29.toArray();
        java.lang.CharSequence charSequence59 = charSequenceQueue29.element();
        int int60 = charSequenceQueue29.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        int int65 = charSequenceQueue62.maxSize();
        int int66 = charSequenceQueue62.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean70 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        boolean boolean72 = charSequenceQueue68.offer((java.lang.CharSequence) "");
        boolean boolean74 = charSequenceQueue68.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator77 = charSequenceQueue76.spliterator();
        java.lang.CharSequence charSequence78 = charSequenceQueue76.peek();
        boolean boolean79 = charSequenceQueue76.isEmpty();
        boolean boolean80 = charSequenceQueue68.remove((java.lang.Object) boolean79);
        boolean boolean82 = charSequenceQueue68.add((java.lang.CharSequence) "[]");
        boolean boolean83 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        boolean boolean84 = charSequenceQueue29.contains((java.lang.Object) charSequenceQueue68);
        java.lang.CharSequence charSequence85 = charSequenceQueue29.element();
        boolean boolean86 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[]" + "'", str27, "[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 10 + "'", int65 == 10);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 10 + "'", int66 == 10);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator77);
        org.junit.Assert.assertNull(charSequence78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][][][]> charSequenceQueueArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.Queue<java.lang.CharSequence>[][][][]>((int) '4');
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence15 = charSequenceQueue12.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue12.parallelStream();
        boolean boolean18 = charSequenceQueue12.contains((java.lang.Object) (short) 100);
        boolean boolean19 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue21.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue30.parallelStream();
        boolean boolean36 = charSequenceQueue30.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue30.spliterator();
        boolean boolean38 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.CharSequence charSequence39 = charSequenceQueue30.element();
        java.lang.CharSequence charSequence40 = charSequenceQueue30.poll();
        boolean boolean41 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue12.parallelStream();
        boolean boolean43 = charSequenceQueue12.isFull();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence45 = charSequenceQueue12.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        int int24 = charSequenceQueue22.maxSize();
        boolean boolean25 = charSequenceQueue22.isFull();
        java.lang.String str26 = charSequenceQueue22.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Queue[] queueArray47 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray48 = (java.util.Queue<java.lang.CharSequence>[]) queueArray47;
        charSequenceQueueArray48[0] = charSequenceQueue22;
        charSequenceQueueArray48[1] = charSequenceQueue39;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray53 = charSequenceQueue10.toArray(charSequenceQueueArray48);
        java.lang.CharSequence charSequence54 = charSequenceQueue10.poll();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(queueArray47);
        org.junit.Assert.assertNotNull(charSequenceQueueArray48);
        org.junit.Assert.assertNotNull(charSequenceQueueArray53);
        org.junit.Assert.assertNull(charSequence54);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        java.lang.Object[] objArray43 = charSequenceQueue38.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue45.parallelStream();
        boolean boolean48 = charSequenceQueue45.contains((java.lang.Object) 1.0d);
        boolean boolean49 = charSequenceQueue45.isFull();
        boolean boolean50 = charSequenceQueue45.isFull();
        int int51 = charSequenceQueue45.maxSize();
        int int52 = charSequenceQueue45.maxSize();
        java.lang.CharSequence charSequence53 = charSequenceQueue45.peek();
        boolean boolean54 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue38.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue38.parallelStream();
        java.lang.Object[] objArray57 = charSequenceQueue38.toArray();
        int int58 = charSequenceQueue38.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(objArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray43), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray43), "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 52 + "'", int51 == 52);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 52 + "'", int52 == 52);
        org.junit.Assert.assertNull(charSequence53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 1 + "'", int55 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[hi!]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence12 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence13 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "hi!" + "'", charSequence13, "hi!");
        org.junit.Assert.assertNotNull(charSequenceItor14);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence21 = charSequenceQueue12.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.String str26 = charSequenceQueue23.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor27 = charSequenceQueue23.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.parallelStream();
        boolean boolean29 = charSequenceQueue12.remove((java.lang.Object) charSequenceQueue23);
        java.lang.String str30 = charSequenceQueue12.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence33 = charSequenceQueue32.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean37 = charSequenceQueue35.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue35.element();
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList46 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46, charSequenceArray45);
        java.lang.CharSequence[] charSequenceArray50 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51, charSequenceArray50);
        boolean boolean53 = charSequenceQueue51.isAtFullCapacity();
        boolean boolean54 = charSequenceList46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean55 = charSequenceList41.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        boolean boolean56 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList46);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList66 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = charSequenceList66.contains(obj68);
        java.lang.String str70 = charSequenceList66.toString();
        boolean boolean71 = charSequenceList59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream73 = charSequenceQueue72.stream();
        boolean boolean74 = charSequenceQueue35.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        java.lang.CharSequence charSequence75 = charSequenceQueue72.element();
        java.lang.CharSequence charSequence76 = charSequenceQueue72.peek();
        java.lang.String str77 = charSequenceQueue72.toString();
        boolean boolean78 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue72);
        boolean boolean79 = charSequenceQueue32.isFull();
        boolean boolean80 = charSequenceQueue12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean81 = charSequenceQueue12.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(charSequence21);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor27);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[]" + "'", str30, "[]");
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[hi!]" + "'", str70, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceStream73);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "hi!" + "'", charSequence75, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence76 + "' != '" + "hi!" + "'", charSequence76, "hi!");
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!]" + "'", str77, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64, charSequenceArray63);
        boolean boolean66 = charSequenceQueue64.isAtFullCapacity();
        boolean boolean67 = charSequenceList59.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        boolean boolean68 = charSequenceQueue64.isAtFullCapacity();
        java.lang.Object[] objArray69 = charSequenceQueue64.toArray();
        boolean boolean71 = charSequenceQueue64.add((java.lang.CharSequence) "[, ]");
        boolean boolean72 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        java.lang.String str73 = charSequenceQueue64.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue64.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[, , [, ]]" + "'", str73, "[, , [, ]]");
        org.junit.Assert.assertNotNull(charSequenceStream74);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str6 = charSequenceQueue1.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue1.offer((java.lang.CharSequence) "[[]]");
        java.lang.CharSequence charSequence13 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[, ]" + "'", str6, "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence13 = charSequenceQueue7.remove();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor14 = charSequenceQueue7.iterator();
        charSequenceQueue7.clear();
        int int16 = charSequenceQueue7.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceItor14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 32 + "'", int16 == 32);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        charSequenceQueue36.clear();
        boolean boolean45 = charSequenceQueue34.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue34.spliterator();
        int int47 = charSequenceQueue34.size();
        int int48 = charSequenceQueue34.size();
        java.util.Queue[][] queueArray50 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray51 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray50;
        java.util.Queue[][] queueArray53 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray54 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray53;
        java.util.Queue[][] queueArray56 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray57 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray56;
        java.util.Queue[][] queueArray59 = new java.util.Queue[0][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][] charSequenceQueueArray60 = (java.util.Queue<java.lang.CharSequence>[][]) queueArray59;
        java.util.Queue[][][] queueArray62 = new java.util.Queue[4][][];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray63 = (java.util.Queue<java.lang.CharSequence>[][][]) queueArray62;
        charSequenceQueueArray63[0] = charSequenceQueueArray51;
        charSequenceQueueArray63[1] = charSequenceQueueArray54;
        charSequenceQueueArray63[2] = charSequenceQueueArray57;
        charSequenceQueueArray63[3] = charSequenceQueueArray60;
        java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray72 = charSequenceQueue34.toArray(charSequenceQueueArray63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.Queue<java.lang.CharSequence>[][][] charSequenceQueueArray73 = charSequenceQueue25.toArray(charSequenceQueueArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(queueArray50);
        org.junit.Assert.assertNotNull(charSequenceQueueArray51);
        org.junit.Assert.assertNotNull(queueArray53);
        org.junit.Assert.assertNotNull(charSequenceQueueArray54);
        org.junit.Assert.assertNotNull(queueArray56);
        org.junit.Assert.assertNotNull(charSequenceQueueArray57);
        org.junit.Assert.assertNotNull(queueArray59);
        org.junit.Assert.assertNotNull(charSequenceQueueArray60);
        org.junit.Assert.assertNotNull(queueArray62);
        org.junit.Assert.assertNotNull(charSequenceQueueArray63);
        org.junit.Assert.assertNotNull(charSequenceQueueArray72);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue7.isEmpty();
        boolean boolean39 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue7.isAtFullCapacity();
        int int41 = charSequenceQueue7.maxSize();
        int int42 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue7.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertNotNull(charSequenceStream43);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        java.lang.CharSequence charSequence13 = charSequenceQueue7.get(0);
        boolean boolean15 = charSequenceQueue7.offer((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int60 = charSequenceQueue1.maxSize();
        boolean boolean61 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence62 = charSequenceQueue1.peek();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10 + "'", int60 == 10);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + charSequence62 + "' != '" + "hi!" + "'", charSequence62, "hi!");
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceItor6);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        java.lang.CharSequence charSequence46 = charSequenceQueue41.poll();
        java.lang.String str47 = charSequenceQueue41.toString();
        boolean boolean48 = charSequenceQueue41.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue41.parallelStream();
        boolean boolean50 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        charSequenceQueue33.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        boolean boolean64 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean66 = charSequenceQueue45.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean67 = charSequenceList6.remove((java.lang.Object) charSequenceQueue45);
        boolean boolean68 = charSequenceQueue45.isFull();
        int int69 = charSequenceQueue45.maxSize();
        boolean boolean70 = charSequenceQueue45.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 10 + "'", int69 == 10);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator28 = charSequenceQueue27.spliterator();
        java.lang.CharSequence charSequence29 = charSequenceQueue27.peek();
        boolean boolean30 = charSequenceQueue8.contains((java.lang.Object) charSequenceQueue27);
        java.lang.String str31 = charSequenceQueue8.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.remove();
        boolean boolean39 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue41.element();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue41.spliterator();
        boolean boolean46 = charSequenceQueue8.contains((java.lang.Object) charSequenceSpliterator45);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator28);
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[, ]" + "'", str31, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue12.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue12.spliterator();
        charSequenceQueue12.clear();
        int int19 = charSequenceQueue12.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue22.spliterator();
        java.lang.CharSequence charSequence24 = charSequenceQueue22.peek();
        boolean boolean25 = charSequenceQueue22.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue22.stream();
        java.lang.CharSequence charSequence27 = charSequenceQueue22.poll();
        java.lang.String str28 = charSequenceQueue22.toString();
        boolean boolean29 = charSequenceQueue22.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue22.parallelStream();
        boolean boolean31 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean32 = charSequenceQueue22.isAtFullCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence33 = charSequenceQueue22.element();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNull(charSequence24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[]" + "'", str28, "[]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        charSequenceQueue11.clear();
        boolean boolean16 = charSequenceQueue11.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList26 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList26, charSequenceArray25);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31, charSequenceArray30);
        boolean boolean33 = charSequenceQueue31.isAtFullCapacity();
        boolean boolean34 = charSequenceList26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        java.lang.CharSequence charSequence35 = charSequenceQueue31.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue31.parallelStream();
        boolean boolean37 = charSequenceQueue11.contains((java.lang.Object) charSequenceStream36);
        java.lang.CharSequence charSequence38 = charSequenceQueue11.peek();
        boolean boolean39 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue11);
        charSequenceQueue11.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue42.spliterator();
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.Object[] objArray50 = charSequenceQueue48.toArray();
        boolean boolean51 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean52 = charSequenceQueue11.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean53 = charSequenceQueue11.isFull();
        charSequenceQueue11.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue11.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue11.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertNotNull(charSequenceStream36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceItor56);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>> charSequenceListQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.AbstractList<java.lang.CharSequence>>((int) 'a');
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        boolean boolean7 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.lang.CharSequence charSequence11 = charSequenceQueue9.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue9.poll();
        boolean boolean13 = charSequenceQueue9.isFull();
        java.lang.CharSequence charSequence14 = charSequenceQueue9.poll();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        int int22 = charSequenceQueue17.maxSize();
        boolean boolean23 = charSequenceQueue17.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue25.spliterator();
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "");
        boolean boolean30 = charSequenceQueue25.isAtFullCapacity();
        int int31 = charSequenceQueue25.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator32 = charSequenceQueue25.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        boolean boolean39 = charSequenceQueue34.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor40 = charSequenceQueue34.iterator();
        java.lang.Object[] objArray41 = charSequenceQueue34.toArray();
        boolean boolean42 = charSequenceQueue25.remove((java.lang.Object) objArray41);
        boolean boolean43 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.CharSequence charSequence44 = charSequenceQueue25.peek();
        java.lang.CharSequence charSequence45 = charSequenceQueue25.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray50 = charSequenceQueue47.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue47.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        boolean boolean60 = charSequenceQueue56.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean63 = charSequenceQueue56.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        charSequenceQueue56.clear();
        boolean boolean65 = charSequenceQueue54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean66 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        java.lang.Class<?> wildcardClass67 = charSequenceQueue47.getClass();
        boolean boolean68 = charSequenceQueue25.remove((java.lang.Object) wildcardClass67);
        boolean boolean69 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue25.stream();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNull(charSequence11);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 52 + "'", int22 == 52);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(charSequenceItor40);
        org.junit.Assert.assertNotNull(objArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray41), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray41), "[]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor51);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceStream70);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        boolean boolean15 = charSequenceQueue8.contains((java.lang.Object) false);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean24 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean25 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue23);
        java.lang.CharSequence charSequence26 = charSequenceQueue8.peek();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        int int24 = charSequenceQueue22.maxSize();
        boolean boolean25 = charSequenceQueue22.isFull();
        java.lang.String str26 = charSequenceQueue22.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Queue[] queueArray47 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray48 = (java.util.Queue<java.lang.CharSequence>[]) queueArray47;
        charSequenceQueueArray48[0] = charSequenceQueue22;
        charSequenceQueueArray48[1] = charSequenceQueue39;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray53 = charSequenceQueue10.toArray(charSequenceQueueArray48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue10.stream();
        boolean boolean55 = charSequenceQueue10.isFull();
        java.lang.Object[] objArray56 = charSequenceQueue10.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue10.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue10.stream();
        java.lang.String str59 = charSequenceQueue10.toString();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(queueArray47);
        org.junit.Assert.assertNotNull(charSequenceQueueArray48);
        org.junit.Assert.assertNotNull(charSequenceQueueArray53);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray56), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray56), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[]" + "'", str59, "[]");
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue12.iterator();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.String str34 = charSequenceList30.toString();
        boolean boolean35 = charSequenceList23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue36.stream();
        java.lang.String str38 = charSequenceQueue36.toString();
        java.lang.CharSequence charSequence39 = charSequenceQueue36.element();
        int int40 = charSequenceQueue36.maxSize();
        boolean boolean41 = charSequenceQueue36.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue36.stream();
        boolean boolean43 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue36.parallelStream();
        java.lang.Object[] objArray45 = charSequenceQueue36.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[hi!]" + "'", str34, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[hi!]" + "'", str38, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "hi!" + "'", charSequence39, "hi!");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 1 + "'", int40 == 1);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[hi!]");
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.Class<?> wildcardClass13 = charSequenceQueue7.getClass();
        boolean boolean14 = charSequenceQueue2.remove((java.lang.Object) charSequenceQueue7);
        int int15 = charSequenceQueue2.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue2.parallelStream();
        int int17 = charSequenceQueue2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29, charSequenceArray28);
        boolean boolean31 = charSequenceQueue29.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue34.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue34.spliterator();
        boolean boolean38 = charSequenceQueue34.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence39 = charSequenceQueue34.poll();
        boolean boolean40 = charSequenceQueue29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence charSequence41 = charSequenceQueue29.remove();
        boolean boolean42 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray54 = charSequenceList45.toArray((java.lang.Comparable<java.lang.String>[]) strArray53);
        java.lang.String[] strArray55 = charSequenceQueue21.toArray(strArray53);
        java.lang.String[] strArray56 = charSequenceQueue17.toArray(strArray55);
        java.lang.Comparable<java.lang.String>[] strComparableArray57 = charSequenceQueue12.toArray((java.lang.Comparable<java.lang.String>[]) strArray55);
        boolean boolean58 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        int int60 = charSequenceQueue59.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(strComparableArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strComparableArray57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 3 + "'", int60 == 3);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        charSequenceQueue8.clear();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceList25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean40 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean41 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.Object[] objArray42 = charSequenceQueue14.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue14.parallelStream();
        charSequenceQueue14.clear();
        boolean boolean46 = charSequenceQueue14.add((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence48 = charSequenceQueue14.peek();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean30 = charSequenceQueue1.isEmpty();
        boolean boolean31 = charSequenceQueue1.isAtFullCapacity();
        int int32 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray33 = charSequenceQueue1.toArray();
        boolean boolean34 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        charSequenceQueue1.clear();
        int int9 = charSequenceQueue1.maxSize();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 52 + "'", int9 == 52);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue41.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.lang.CharSequence charSequence47 = charSequenceQueue45.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue45.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue45.iterator();
        boolean boolean57 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue25.stream();
        boolean boolean60 = charSequenceQueue25.offer((java.lang.CharSequence) "[, [[, ]]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue62.spliterator();
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "");
        boolean boolean67 = charSequenceQueue62.isAtFullCapacity();
        int int68 = charSequenceQueue62.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue70.offer((java.lang.CharSequence) "");
        boolean boolean74 = charSequenceQueue70.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream75 = charSequenceQueue70.stream();
        boolean boolean76 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence77 = charSequenceQueue62.peek();
        boolean boolean78 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceStream75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + charSequence77 + "' != '" + "" + "'", charSequence77, "");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue14.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue14.stream();
        boolean boolean22 = charSequenceQueue14.add((java.lang.CharSequence) "hi!");
        boolean boolean23 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue33.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence40 = charSequenceQueue33.element();
        boolean boolean41 = charSequenceQueue33.isEmpty();
        boolean boolean42 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        charSequenceQueue33.clear();
        java.lang.Object[] objArray44 = charSequenceQueue33.toArray();
        java.lang.CharSequence charSequence45 = charSequenceQueue33.peek();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNull(charSequence45);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray8 = charSequenceQueue5.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue5.iterator();
        boolean boolean10 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue5);
        int int11 = charSequenceQueue5.size();
        java.lang.CharSequence charSequence12 = charSequenceQueue5.remove();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        boolean boolean21 = charSequenceQueue15.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue23.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue23.parallelStream();
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36, charSequenceArray35);
        boolean boolean38 = charSequenceQueue36.isAtFullCapacity();
        boolean boolean39 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean40 = charSequenceQueue36.isAtFullCapacity();
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceQueue23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean44 = charSequenceQueue23.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence45 = charSequenceQueue23.remove();
        java.lang.CharSequence charSequence46 = charSequenceQueue23.remove();
        boolean boolean47 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean49 = charSequenceQueue15.add((java.lang.CharSequence) "[, []]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 32 + "'", int41 == 32);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.offer((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        charSequenceQueue10.clear();
        java.lang.CharSequence charSequence14 = charSequenceQueue10.peek();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean39 = charSequenceList17.remove((java.lang.Object) 0);
        boolean boolean40 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceQueue10.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue10.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.peek();
        boolean boolean50 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue46.isFull();
        charSequenceQueue46.clear();
        boolean boolean53 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue46.stream();
        boolean boolean56 = charSequenceQueue46.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean57 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.String str58 = charSequenceQueue1.toString();
        java.lang.Object obj59 = null;
        boolean boolean60 = charSequenceQueue1.remove(obj59);
        boolean boolean62 = charSequenceQueue1.offer((java.lang.CharSequence) "[[, hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[, [, ]]" + "'", str58, "[, [, ]]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(52);
        boolean boolean62 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.CharSequence charSequence63 = charSequenceQueue61.poll();
        boolean boolean64 = charSequenceQueue61.isFull();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue1.spliterator();
        boolean boolean22 = charSequenceQueue1.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue1.spliterator();
        boolean boolean24 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue26.parallelStream();
        boolean boolean29 = charSequenceQueue26.contains((java.lang.Object) 1.0d);
        boolean boolean30 = charSequenceQueue26.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue26.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue26.stream();
        boolean boolean34 = charSequenceQueue26.add((java.lang.CharSequence) "hi!");
        boolean boolean36 = charSequenceQueue26.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean37 = charSequenceQueue26.isFull();
        boolean boolean38 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue26.spliterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue11.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue11.spliterator();
        boolean boolean15 = charSequenceQueue11.add((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue11.isAtFullCapacity();
        java.lang.CharSequence charSequence17 = charSequenceQueue11.element();
        int int18 = charSequenceQueue11.size();
        boolean boolean19 = charSequenceList2.remove((java.lang.Object) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        boolean boolean33 = charSequenceQueue28.offer((java.lang.CharSequence) "[hi!]");
        boolean boolean34 = charSequenceQueue28.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        charSequenceQueue36.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        boolean boolean48 = charSequenceQueue41.contains((java.lang.Object) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue50.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue50.parallelStream();
        boolean boolean56 = charSequenceQueue50.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue50.spliterator();
        boolean boolean58 = charSequenceQueue41.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.CharSequence charSequence59 = charSequenceQueue50.poll();
        int int60 = charSequenceQueue50.size();
        boolean boolean61 = charSequenceQueue36.contains((java.lang.Object) int60);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean65 = charSequenceQueue63.offer((java.lang.CharSequence) "");
        charSequenceQueue63.clear();
        int int67 = charSequenceQueue63.size();
        boolean boolean68 = charSequenceQueue36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean78 = charSequenceList71.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        java.lang.Object[] objArray79 = charSequenceQueue77.toArray();
        boolean boolean80 = charSequenceQueue63.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceQueue77.stream();
        boolean boolean82 = charSequenceQueue28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean83 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean84 = charSequenceQueue77.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream85 = charSequenceQueue77.stream();
        java.lang.String str86 = charSequenceQueue77.toString();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(objArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray79), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray79), "[]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceStream85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "[]" + "'", str86, "[]");
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        boolean boolean23 = charSequenceQueue3.isEmpty();
        int int24 = charSequenceQueue3.maxSize();
        boolean boolean26 = charSequenceQueue3.offer((java.lang.CharSequence) "[, [, hi!]]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10 + "'", int24 == 10);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32, charSequenceArray31);
        boolean boolean34 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean35 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        int int36 = charSequenceQueue32.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue32.stream();
        java.lang.String str38 = charSequenceQueue32.toString();
        boolean boolean39 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream40 = charSequenceQueue32.parallelStream();
        java.lang.Class<?> wildcardClass41 = charSequenceQueue32.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[, ]" + "'", str38, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceStream40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence11 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.parallelStream();
        boolean boolean13 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        int int11 = charSequenceQueue7.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence25 = charSequenceQueue21.poll();
        boolean boolean26 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean28 = charSequenceQueue21.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 32 + "'", int11 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceList19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean28 = charSequenceQueue24.isAtFullCapacity();
        int int29 = charSequenceQueue24.maxSize();
        boolean boolean30 = charSequenceQueue11.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean32 = charSequenceQueue11.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence33 = charSequenceQueue11.remove();
        boolean boolean34 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        int int35 = charSequenceQueue1.size();
        int int36 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 32 + "'", int29 == 32);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 3 + "'", int35 == 3);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue9.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue9.spliterator();
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue9.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue9.iterator();
        boolean boolean16 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence charSequence17 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        boolean boolean32 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue33.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue33.parallelStream();
        java.lang.Object[] objArray36 = charSequenceQueue33.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        boolean boolean42 = charSequenceQueue38.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        boolean boolean46 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.Object[] objArray47 = charSequenceQueue38.toArray();
        boolean boolean48 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertNotNull(objArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray36), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray36), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(objArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray47), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray47), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue8.spliterator();
        java.util.RandomAccess[] randomAccessArray15 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray16 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray17 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray18 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[] randomAccessArray19 = new java.util.RandomAccess[] {};
        java.util.RandomAccess[][] randomAccessArray20 = new java.util.RandomAccess[][] { randomAccessArray15, randomAccessArray16, randomAccessArray17, randomAccessArray18, randomAccessArray19 };
        java.util.RandomAccess[][] randomAccessArray21 = charSequenceQueue8.toArray(randomAccessArray20);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertNotNull(randomAccessArray15);
        org.junit.Assert.assertNotNull(randomAccessArray16);
        org.junit.Assert.assertNotNull(randomAccessArray17);
        org.junit.Assert.assertNotNull(randomAccessArray18);
        org.junit.Assert.assertNotNull(randomAccessArray19);
        org.junit.Assert.assertNotNull(randomAccessArray20);
        org.junit.Assert.assertNotNull(randomAccessArray21);
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.element();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32, charSequenceArray31);
        boolean boolean34 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean35 = charSequenceList27.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean37 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean38 = charSequenceQueue11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        java.lang.Object[] objArray39 = charSequenceQueue11.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        boolean boolean46 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.String str47 = charSequenceQueue11.toString();
        boolean boolean48 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue1.stream();
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor51 = charSequenceQueue1.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(objArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray39), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray39), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertNotNull(charSequenceItor51);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        boolean boolean30 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean31 = charSequenceQueue10.remove((java.lang.Object) charSequenceQueue12);
        boolean boolean32 = charSequenceQueue12.isEmpty();
        boolean boolean33 = charSequenceQueue12.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue12.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean47 = charSequenceQueue42.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean48 = charSequenceQueue42.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue50.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue50.parallelStream();
        boolean boolean56 = charSequenceQueue50.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue50.spliterator();
        java.lang.CharSequence charSequence58 = charSequenceQueue50.element();
        boolean boolean59 = charSequenceQueue42.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean60 = charSequenceQueue12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream63 = charSequenceQueue62.parallelStream();
        boolean boolean65 = charSequenceQueue62.contains((java.lang.Object) 1.0d);
        boolean boolean66 = charSequenceQueue62.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue62.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream68 = charSequenceQueue62.stream();
        boolean boolean70 = charSequenceQueue62.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence72 = charSequenceQueue62.get(0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        boolean boolean74 = charSequenceQueue12.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        boolean boolean75 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(charSequenceStream63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertNotNull(charSequenceStream68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence72 + "' != '" + "hi!" + "'", charSequence72, "hi!");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue8.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue8.spliterator();
        boolean boolean12 = charSequenceQueue8.add((java.lang.CharSequence) "");
        java.lang.String str13 = charSequenceQueue8.toString();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue8.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[]" + "'", str13, "[]");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        boolean boolean30 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean33 = charSequenceQueue32.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean42 = charSequenceQueue35.add((java.lang.CharSequence) "");
        charSequenceQueue35.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue35.stream();
        charSequenceQueue35.clear();
        boolean boolean46 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean47 = charSequenceQueue32.isAtFullCapacity();
        boolean boolean48 = charSequenceQueue32.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue50.stream();
        java.lang.Comparable[][][][] comparableArray53 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray54 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray53;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray55 = charSequenceQueue50.toArray(strComparableArray54);
        java.lang.Object[][] objArray56 = charSequenceQueue32.toArray((java.lang.Object[][]) strComparableArray54);
        boolean boolean57 = charSequenceQueue1.remove((java.lang.Object) objArray56);
        boolean boolean59 = charSequenceQueue1.offer((java.lang.CharSequence) "[, [hi!]]");
        boolean boolean61 = charSequenceQueue1.offer((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        boolean boolean69 = charSequenceQueue65.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean72 = charSequenceQueue65.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        charSequenceQueue65.clear();
        boolean boolean74 = charSequenceQueue63.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        boolean boolean75 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean77 = charSequenceQueue63.offer((java.lang.CharSequence) "[, [hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceStream44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertNotNull(comparableArray53);
        org.junit.Assert.assertNotNull(strComparableArray54);
        org.junit.Assert.assertNotNull(strComparableArray55);
        org.junit.Assert.assertNotNull(objArray56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        boolean boolean7 = charSequenceQueue2.add((java.lang.CharSequence) "[hi!]");
        int int8 = charSequenceQueue2.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        charSequenceQueue10.clear();
        java.lang.CharSequence charSequence14 = charSequenceQueue10.peek();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.String str21 = charSequenceList17.toString();
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        boolean boolean29 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue31.add((java.lang.CharSequence) "hi!");
        int int36 = charSequenceQueue31.maxSize();
        boolean boolean37 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean39 = charSequenceList17.remove((java.lang.Object) 0);
        boolean boolean40 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean42 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        boolean boolean43 = charSequenceQueue10.isEmpty();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue10.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence49 = charSequenceQueue46.peek();
        boolean boolean50 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue46.isFull();
        charSequenceQueue46.clear();
        boolean boolean53 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.String str54 = charSequenceQueue46.toString();
        java.lang.CharSequence charSequence55 = charSequenceQueue46.peek();
        boolean boolean56 = charSequenceQueue2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean58 = charSequenceQueue2.offer((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 2 + "'", int8 == 2);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence14);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[hi!]" + "'", str21, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        int int56 = charSequenceQueue24.size();
        java.lang.CharSequence charSequence57 = charSequenceQueue24.peek();
        boolean boolean58 = charSequenceQueue24.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue62.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean69 = charSequenceQueue62.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        charSequenceQueue62.clear();
        boolean boolean71 = charSequenceQueue60.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue73.parallelStream();
        boolean boolean76 = charSequenceQueue73.contains((java.lang.Object) 1.0d);
        boolean boolean77 = charSequenceQueue73.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceQueue73.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue73.stream();
        boolean boolean81 = charSequenceQueue73.add((java.lang.CharSequence) "hi!");
        boolean boolean82 = charSequenceQueue60.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue83 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean84 = charSequenceQueue24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "" + "'", charSequence57, "");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceStream74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Cloneable> cloneableQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Cloneable>((int) 'a');
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean6 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!]");
        java.lang.String str7 = charSequenceQueue1.toString();
        charSequenceQueue1.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence9 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[[hi!]]" + "'", str7, "[[hi!]]");
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        int int9 = charSequenceQueue1.size();
        boolean boolean10 = charSequenceQueue1.isFull();
        boolean boolean11 = charSequenceQueue1.isFull();
        int int12 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        charSequenceQueue14.clear();
        boolean boolean19 = charSequenceQueue14.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        boolean boolean25 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue27.element();
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean32 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue27.parallelStream();
        boolean boolean34 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue27);
        int int35 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream36 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream36);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean42 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean43 = charSequenceList23.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean44 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue8.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue8.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.Object obj55 = null;
        boolean boolean56 = charSequenceList53.contains(obj55);
        java.lang.String str57 = charSequenceList53.toString();
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList60 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60, charSequenceArray59);
        java.lang.Object obj62 = null;
        boolean boolean63 = charSequenceList60.contains(obj62);
        java.lang.String str64 = charSequenceList60.toString();
        boolean boolean65 = charSequenceList53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList60);
        boolean boolean66 = charSequenceQueue48.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean67 = charSequenceQueue8.remove((java.lang.Object) boolean66);
        boolean boolean68 = charSequenceQueue8.isAtFullCapacity();
        java.lang.CharSequence charSequence69 = charSequenceQueue8.remove();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[hi!]" + "'", str57, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[hi!]" + "'", str64, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        int int6 = charSequenceQueue1.size();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.peek();
        boolean boolean8 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray10 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList11 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList11, charSequenceArray10);
        java.lang.Object obj13 = null;
        boolean boolean14 = charSequenceList11.contains(obj13);
        java.lang.String str15 = charSequenceList11.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceList11.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor19 = charSequenceQueue17.iterator();
        boolean boolean20 = charSequenceQueue17.isFull();
        boolean boolean21 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue17);
        java.lang.Object[] objArray22 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[hi!]" + "'", str15, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceItor19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[]");
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.poll();
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence charSequence10 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence12 = charSequenceQueue1.get((int) (byte) 1);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.String str21 = charSequenceQueue14.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "hi!" + "'", charSequence12, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[]" + "'", str21, "[]");
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        int int21 = charSequenceQueue7.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type> typeQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type>(4);
        boolean boolean24 = charSequenceQueue7.remove((java.lang.Object) 4);
        boolean boolean25 = charSequenceQueue7.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "[, [[, , , hi!]]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue19.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator26 = charSequenceQueue25.spliterator();
        java.lang.CharSequence charSequence27 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue25.contains((java.lang.Object) charSequenceQueue29);
        java.lang.CharSequence charSequence33 = charSequenceQueue25.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue35.isAtFullCapacity();
        int int41 = charSequenceQueue35.maxSize();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue35.spliterator();
        boolean boolean43 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream50 = charSequenceQueue47.parallelStream();
        boolean boolean51 = charSequenceQueue47.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream52 = charSequenceQueue47.stream();
        java.lang.CharSequence charSequence53 = charSequenceQueue47.peek();
        boolean boolean54 = charSequenceQueue35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue56.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue56.parallelStream();
        boolean boolean62 = charSequenceQueue56.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue56.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue56.element();
        boolean boolean65 = charSequenceQueue56.isEmpty();
        boolean boolean66 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean67 = charSequenceQueue19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence68 = charSequenceQueue35.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertNotNull(charSequenceSpliterator26);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(charSequence33);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceStream50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(charSequenceStream52);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        int int4 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.String str6 = charSequenceQueue1.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 10 + "'", int4 == 10);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[]" + "'", str6, "[]");
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue10.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean18 = charSequenceQueue10.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceQueue10.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean28 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean29 = charSequenceQueue21.isEmpty();
        boolean boolean30 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean31 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue10.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceItor32);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean37 = charSequenceQueue7.isEmpty();
        boolean boolean39 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue7.isAtFullCapacity();
        int int41 = charSequenceQueue7.maxSize();
        int int42 = charSequenceQueue7.maxSize();
        boolean boolean43 = charSequenceQueue7.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 10 + "'", int41 == 10);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 10 + "'", int42 == 10);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean11 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean38 = charSequenceQueue20.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25);
        boolean boolean39 = charSequenceQueue18.remove((java.lang.Object) charSequenceQueue20);
        boolean boolean40 = charSequenceQueue14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        int int41 = charSequenceQueue14.maxSize();
        java.lang.CharSequence charSequence42 = charSequenceQueue14.poll();
        boolean boolean43 = charSequenceQueue1.remove((java.lang.Object) charSequence42);
        int int44 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean11 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) boolean11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.lang.CharSequence charSequence22 = charSequenceQueue20.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue20.contains((java.lang.Object) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue29.parallelStream();
        boolean boolean35 = charSequenceQueue29.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue29.spliterator();
        boolean boolean37 = charSequenceQueue20.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        java.lang.CharSequence charSequence38 = charSequenceQueue29.element();
        charSequenceQueue29.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        charSequenceQueue41.clear();
        java.lang.CharSequence charSequence45 = charSequenceQueue41.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue47.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue47.parallelStream();
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.CharSequence[] charSequenceArray59 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60, charSequenceArray59);
        boolean boolean62 = charSequenceQueue60.isAtFullCapacity();
        boolean boolean63 = charSequenceList55.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean64 = charSequenceQueue60.isAtFullCapacity();
        int int65 = charSequenceQueue60.maxSize();
        boolean boolean66 = charSequenceQueue47.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean68 = charSequenceQueue47.offer((java.lang.CharSequence) "hi!");
        boolean boolean69 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.String str70 = charSequenceQueue47.toString();
        boolean boolean72 = charSequenceQueue47.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence73 = charSequenceQueue47.poll();
        java.lang.Object[] objArray74 = charSequenceQueue47.toArray();
        boolean boolean75 = charSequenceQueue29.contains((java.lang.Object) charSequenceQueue47);
        boolean boolean76 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNull(charSequence22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNull(charSequence45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 32 + "'", int65 == 32);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[, , , hi!]" + "'", str70, "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "" + "'", charSequence73, "");
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[, , hi!, []]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[, , hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence7 = charSequenceQueue1.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean22 = charSequenceList15.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        charSequenceQueue21.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue21.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean28 = charSequenceQueue26.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray29 = charSequenceQueue26.toArray();
        boolean boolean30 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.String str35 = charSequenceQueue32.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue32.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream37 = charSequenceQueue32.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence42 = charSequenceQueue39.peek();
        boolean boolean43 = charSequenceQueue32.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean44 = charSequenceQueue21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        boolean boolean45 = charSequenceList10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.lang.Object[] objArray46 = charSequenceList10.toArray();
        java.lang.Class<?> wildcardClass47 = objArray46.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[]" + "'", str35, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertNotNull(charSequenceStream37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(objArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray46), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray46), "[]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        boolean boolean7 = charSequenceQueue2.add((java.lang.CharSequence) "[hi!]");
        boolean boolean8 = charSequenceQueue2.isFull();
        int int9 = charSequenceQueue2.maxSize();
        java.lang.CharSequence charSequence10 = charSequenceQueue2.peek();
        charSequenceQueue2.clear();
        boolean boolean12 = charSequenceQueue2.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue14.parallelStream();
        boolean boolean17 = charSequenceQueue14.contains((java.lang.Object) 1.0d);
        boolean boolean18 = charSequenceQueue14.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.lang.CharSequence charSequence22 = charSequenceQueue20.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue20.contains((java.lang.Object) charSequenceQueue24);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue20.iterator();
        boolean boolean29 = charSequenceQueue14.remove((java.lang.Object) charSequenceQueue20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator44 = charSequenceQueue42.spliterator();
        boolean boolean46 = charSequenceQueue42.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue42.poll();
        boolean boolean48 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean49 = charSequenceQueue20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean50 = charSequenceQueue20.isEmpty();
        boolean boolean52 = charSequenceQueue20.offer((java.lang.CharSequence) "");
        boolean boolean53 = charSequenceQueue20.isFull();
        java.lang.CharSequence charSequence54 = charSequenceQueue20.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream55 = charSequenceQueue20.stream();
        boolean boolean56 = charSequenceQueue2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean58 = charSequenceQueue2.offer((java.lang.CharSequence) "[hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        java.lang.String str63 = charSequenceQueue60.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor64 = charSequenceQueue60.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue60.parallelStream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor66 = charSequenceQueue60.iterator();
        int int67 = charSequenceQueue60.maxSize();
        boolean boolean69 = charSequenceQueue60.offer((java.lang.CharSequence) "[[[hi!], [, hi!]]]");
        boolean boolean70 = charSequenceQueue2.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNull(charSequence22);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertNotNull(charSequenceStream55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[]" + "'", str63, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor64);
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertNotNull(charSequenceItor66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 52 + "'", int67 == 52);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        int int25 = charSequenceQueue23.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray30 = charSequenceQueue27.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue27.iterator();
        boolean boolean32 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceQueue23.remove(obj34);
        java.lang.CharSequence charSequence36 = charSequenceQueue23.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.parallelStream();
        boolean boolean41 = charSequenceQueue38.contains((java.lang.Object) 1.0d);
        boolean boolean42 = charSequenceQueue38.isFull();
        boolean boolean43 = charSequenceQueue38.isFull();
        int int44 = charSequenceQueue38.maxSize();
        int int45 = charSequenceQueue38.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue47.stream();
        boolean boolean58 = charSequenceQueue38.contains((java.lang.Object) charSequenceStream57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue38.spliterator();
        int int60 = charSequenceQueue38.maxSize();
        boolean boolean61 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean65 = charSequenceQueue63.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69, charSequenceArray68);
        boolean boolean71 = charSequenceQueue69.isAtFullCapacity();
        boolean boolean72 = charSequenceQueue63.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean74 = charSequenceQueue69.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean75 = charSequenceQueue69.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean79 = charSequenceQueue77.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceQueue77.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceQueue77.parallelStream();
        boolean boolean83 = charSequenceQueue77.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator84 = charSequenceQueue77.spliterator();
        java.lang.CharSequence charSequence85 = charSequenceQueue77.element();
        boolean boolean86 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean87 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean88 = charSequenceQueue77.isAtFullCapacity();
        charSequenceQueue77.clear();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "" + "'", charSequence80, "");
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator84);
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        boolean boolean24 = charSequenceQueue1.add((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        boolean boolean40 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream42 = charSequenceQueue41.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue41.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.lang.CharSequence charSequence47 = charSequenceQueue45.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) charSequenceQueue49);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor53 = charSequenceQueue45.iterator();
        boolean boolean54 = charSequenceQueue41.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        int int55 = charSequenceQueue45.size();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue45.iterator();
        boolean boolean57 = charSequenceQueue25.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.lang.CharSequence charSequence59 = charSequenceQueue25.get((int) (short) 0);
        java.lang.CharSequence charSequence60 = charSequenceQueue25.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue25.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean65 = charSequenceQueue63.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue25.contains((java.lang.Object) boolean65);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceStream42);
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNull(charSequence47);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceItor53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.isEmpty();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.Object obj37 = null;
        boolean boolean38 = charSequenceList35.contains(obj37);
        java.lang.String str39 = charSequenceList35.toString();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList42 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42, charSequenceArray41);
        java.lang.Object obj44 = null;
        boolean boolean45 = charSequenceList42.contains(obj44);
        java.lang.String str46 = charSequenceList42.toString();
        boolean boolean47 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList42);
        boolean boolean48 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35);
        boolean boolean49 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean50 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean51 = charSequenceList16.remove((java.lang.Object) charSequenceQueue30);
        boolean boolean52 = charSequenceQueue1.remove((java.lang.Object) boolean51);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(10);
        java.lang.String str55 = charSequenceQueue54.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray61 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList62 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62, charSequenceArray61);
        java.lang.Object obj64 = null;
        boolean boolean65 = charSequenceList62.contains(obj64);
        java.lang.String str66 = charSequenceList62.toString();
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList69 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69, charSequenceArray68);
        java.lang.Object obj71 = null;
        boolean boolean72 = charSequenceList69.contains(obj71);
        java.lang.String str73 = charSequenceList69.toString();
        boolean boolean74 = charSequenceList62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList69);
        boolean boolean75 = charSequenceQueue57.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList62);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList78 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78, charSequenceArray77);
        java.lang.Object obj80 = null;
        boolean boolean81 = charSequenceList78.contains(obj80);
        java.lang.String str82 = charSequenceList78.toString();
        boolean boolean83 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList78);
        boolean boolean84 = charSequenceQueue54.contains((java.lang.Object) charSequenceList78);
        int int85 = charSequenceQueue54.maxSize();
        boolean boolean86 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.String str87 = charSequenceQueue54.toString();
        boolean boolean88 = charSequenceQueue54.isEmpty();
        java.lang.String str89 = charSequenceQueue54.toString();
        java.lang.Object[] objArray90 = charSequenceQueue54.toArray();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[hi!]" + "'", str39, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[hi!]" + "'", str46, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[]" + "'", str55, "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(charSequenceArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[hi!]" + "'", str66, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[hi!]" + "'", str73, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "[hi!]" + "'", str82, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 10 + "'", int85 == 10);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[]" + "'", str87, "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[]" + "'", str89, "[]");
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[]");
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.String str41 = charSequenceQueue38.toString();
        int int42 = charSequenceQueue38.size();
        int int43 = charSequenceQueue38.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[hi!]" + "'", str41, "[hi!]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 1 + "'", int43 == 1);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue38.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream44 = charSequenceQueue38.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNotNull(charSequenceStream44);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue6.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence9 = charSequenceQueue6.element();
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceList17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean26 = charSequenceList12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean27 = charSequenceQueue6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue1.parallelStream();
        charSequenceQueue1.clear();
        boolean boolean33 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean35 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence37 = charSequenceQueue1.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean41 = charSequenceQueue39.offer((java.lang.CharSequence) "");
        charSequenceQueue39.clear();
        boolean boolean44 = charSequenceQueue39.remove((java.lang.Object) (-1.0d));
        int int45 = charSequenceQueue39.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue47.peek();
        boolean boolean51 = charSequenceQueue39.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue39.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream53 = charSequenceQueue39.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "[, ]");
        charSequenceQueue55.clear();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "[, ]", "[[hi!], [, hi!]]", "[hi!]", "[hi!]", "[[hi!], [hi!]]" };
        java.lang.String[][] strArray73 = new java.lang.String[][] { strArray65, strArray72 };
        java.lang.String[][] strArray74 = charSequenceQueue55.toArray(strArray73);
        java.lang.CharSequence[][] charSequenceArray75 = charSequenceQueue39.toArray((java.lang.CharSequence[][]) strArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][] strArray76 = charSequenceQueue1.toArray(strArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertEquals("'" + charSequence9 + "' != '" + "" + "'", charSequence9, "");
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 10 + "'", int45 == 10);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceStream53);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(charSequenceArray75);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        boolean boolean21 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean25 = charSequenceQueue23.offer((java.lang.CharSequence) "");
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        int int28 = charSequenceQueue23.maxSize();
        boolean boolean29 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        boolean boolean36 = charSequenceQueue31.add((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceList9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue31);
        boolean boolean38 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue31);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor43 = charSequenceQueue40.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence48 = charSequenceQueue45.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue45.parallelStream();
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceList53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceQueue58.isAtFullCapacity();
        int int63 = charSequenceQueue58.maxSize();
        boolean boolean64 = charSequenceQueue45.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean65 = charSequenceQueue40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean66 = charSequenceQueue31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        int int67 = charSequenceQueue40.maxSize();
        charSequenceQueue40.clear();
        int int69 = charSequenceQueue40.size();
        boolean boolean71 = charSequenceQueue40.add((java.lang.CharSequence) "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 52 + "'", int28 == 52);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNull(charSequence42);
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + charSequence48 + "' != '" + "" + "'", charSequence48, "");
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 32 + "'", int63 == 32);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 10 + "'", int67 == 10);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        int int24 = charSequenceQueue16.size();
        int int25 = charSequenceQueue16.maxSize();
        java.lang.String str26 = charSequenceQueue16.toString();
        int int27 = charSequenceQueue16.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2 + "'", int24 == 2);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 52 + "'", int25 == 52);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[, hi!]" + "'", str26, "[, hi!]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream43 = charSequenceQueue38.parallelStream();
        boolean boolean44 = charSequenceQueue38.isEmpty();
        boolean boolean45 = charSequenceQueue38.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isEmpty();
        boolean boolean11 = charSequenceQueue1.remove((java.lang.Object) 10.0d);
        charSequenceQueue1.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = charSequenceQueue14.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue17.spliterator();
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue17.poll();
        boolean boolean24 = charSequenceQueue17.add((java.lang.CharSequence) "");
        charSequenceQueue17.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue17.stream();
        charSequenceQueue17.clear();
        boolean boolean28 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean34 = charSequenceQueue30.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue30.stream();
        java.lang.Class<?> wildcardClass36 = charSequenceStream35.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.lang.Class<?> wildcardClass39 = charSequenceQueue38.getClass();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(100);
        java.lang.Class<?> wildcardClass42 = charSequenceQueue41.getClass();
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray43 = new java.lang.reflect.GenericDeclaration[] { wildcardClass36, wildcardClass39, wildcardClass42 };
        java.lang.reflect.GenericDeclaration[] genericDeclarationArray44 = charSequenceQueue17.toArray(genericDeclarationArray43);
        boolean boolean45 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue1.parallelStream();
        int int47 = charSequenceQueue1.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(genericDeclarationArray43);
        org.junit.Assert.assertNotNull(genericDeclarationArray44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue58.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue58.spliterator();
        boolean boolean62 = charSequenceQueue58.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence63 = charSequenceQueue58.poll();
        boolean boolean65 = charSequenceQueue58.add((java.lang.CharSequence) "");
        charSequenceQueue58.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue58.stream();
        boolean boolean68 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean70 = charSequenceQueue58.offer((java.lang.CharSequence) "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence5 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence10 = charSequenceQueue7.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue7.parallelStream();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20, charSequenceArray19);
        boolean boolean22 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean23 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean24 = charSequenceQueue20.isAtFullCapacity();
        int int25 = charSequenceQueue20.maxSize();
        boolean boolean26 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        boolean boolean28 = charSequenceQueue7.offer((java.lang.CharSequence) "hi!");
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean67 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue69.parallelStream();
        boolean boolean72 = charSequenceQueue69.contains((java.lang.Object) 1.0d);
        boolean boolean73 = charSequenceQueue69.isFull();
        boolean boolean74 = charSequenceQueue69.isFull();
        boolean boolean75 = charSequenceQueue69.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator78 = charSequenceQueue77.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue77.spliterator();
        boolean boolean81 = charSequenceQueue77.add((java.lang.CharSequence) "");
        boolean boolean82 = charSequenceQueue69.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean83 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean85 = charSequenceQueue1.offer((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean89 = charSequenceQueue87.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence90 = charSequenceQueue87.peek();
        boolean boolean91 = charSequenceQueue87.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor92 = charSequenceQueue87.iterator();
        boolean boolean93 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue87);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type> typeQueue95 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.Type>(10);
        boolean boolean96 = charSequenceQueue1.remove((java.lang.Object) 10);
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNull(charSequence5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertEquals("'" + charSequence10 + "' != '" + "" + "'", charSequence10, "");
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator78);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + charSequence90 + "' != '" + "" + "'", charSequence90, "");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(charSequenceItor92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        boolean boolean10 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue1.parallelStream();
        java.lang.Object[] objArray12 = charSequenceQueue1.toArray();
        boolean boolean13 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceStream11);
        org.junit.Assert.assertNotNull(objArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray12), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray12), "[]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue8.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence15 = charSequenceQueue8.element();
        boolean boolean16 = charSequenceQueue8.isEmpty();
        int int17 = charSequenceQueue8.size();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue8.spliterator();
        java.lang.Class<?> wildcardClass19 = charSequenceSpliterator18.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 3 + "'", int17 == 3);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue38.spliterator();
        java.lang.CharSequence charSequence40 = charSequenceQueue38.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        boolean boolean45 = charSequenceQueue38.contains((java.lang.Object) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue47.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue47.parallelStream();
        boolean boolean53 = charSequenceQueue47.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator54 = charSequenceQueue47.spliterator();
        boolean boolean55 = charSequenceQueue38.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence56 = charSequenceQueue47.element();
        charSequenceQueue47.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean61 = charSequenceQueue59.offer((java.lang.CharSequence) "");
        charSequenceQueue59.clear();
        java.lang.CharSequence charSequence63 = charSequenceQueue59.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean67 = charSequenceQueue65.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence68 = charSequenceQueue65.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream69 = charSequenceQueue65.parallelStream();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.CharSequence[] charSequenceArray77 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78, charSequenceArray77);
        boolean boolean80 = charSequenceQueue78.isAtFullCapacity();
        boolean boolean81 = charSequenceList73.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean82 = charSequenceQueue78.isAtFullCapacity();
        int int83 = charSequenceQueue78.maxSize();
        boolean boolean84 = charSequenceQueue65.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean86 = charSequenceQueue65.offer((java.lang.CharSequence) "hi!");
        boolean boolean87 = charSequenceQueue59.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.String str88 = charSequenceQueue65.toString();
        boolean boolean90 = charSequenceQueue65.offer((java.lang.CharSequence) "[]");
        java.lang.CharSequence charSequence91 = charSequenceQueue65.poll();
        java.lang.Object[] objArray92 = charSequenceQueue65.toArray();
        boolean boolean93 = charSequenceQueue47.contains((java.lang.Object) charSequenceQueue65);
        boolean boolean94 = charSequenceQueue24.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        java.lang.CharSequence charSequence95 = charSequenceQueue65.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
        org.junit.Assert.assertNull(charSequence40);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNull(charSequence63);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertNotNull(charSequenceStream69);
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(charSequenceArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 32 + "'", int83 == 32);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "[, , , hi!]" + "'", str88, "[, , , hi!]");
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + true + "'", boolean90 == true);
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "" + "'", charSequence91, "");
        org.junit.Assert.assertNotNull(objArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray92), "[, , hi!, []]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray92), "[, , hi!, []]");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertEquals("'" + charSequence95 + "' != '" + "" + "'", charSequence95, "");
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        charSequenceQueue8.clear();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        boolean boolean13 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean15 = charSequenceQueue8.add((java.lang.CharSequence) "[]");
        boolean boolean17 = charSequenceQueue8.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean18 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue20.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue20.spliterator();
        boolean boolean24 = charSequenceQueue20.add((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue20.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue20.offer((java.lang.CharSequence) "[, ]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        boolean boolean34 = charSequenceQueue29.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue36.spliterator();
        java.lang.CharSequence charSequence38 = charSequenceQueue36.peek();
        boolean boolean39 = charSequenceQueue29.contains((java.lang.Object) charSequence38);
        boolean boolean40 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        int int41 = charSequenceQueue20.size();
        boolean boolean42 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        java.lang.CharSequence charSequence44 = charSequenceQueue8.get((int) (byte) 1);
        boolean boolean46 = charSequenceQueue8.offer((java.lang.CharSequence) "hi!");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNull(charSequence38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "[, hi!]" + "'", charSequence44, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        boolean boolean43 = charSequenceList6.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList52 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52, charSequenceArray51);
        java.lang.Object obj54 = null;
        boolean boolean55 = charSequenceList52.contains(obj54);
        java.lang.String str56 = charSequenceList52.toString();
        java.lang.CharSequence[] charSequenceArray58 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList59 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59, charSequenceArray58);
        java.lang.Object obj61 = null;
        boolean boolean62 = charSequenceList59.contains(obj61);
        java.lang.String str63 = charSequenceList59.toString();
        boolean boolean64 = charSequenceList52.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList59);
        boolean boolean65 = charSequenceQueue47.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList52);
        boolean boolean66 = charSequenceQueue45.remove((java.lang.Object) charSequenceQueue47);
        boolean boolean67 = charSequenceList6.remove((java.lang.Object) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean71 = charSequenceQueue69.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue69.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue45.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object> objQueue80 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean82 = charSequenceQueue69.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence83 = charSequenceQueue69.remove();
        int int84 = charSequenceQueue69.size();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[hi!]" + "'", str56, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[hi!]" + "'", str63, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "" + "'", charSequence83, "");
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 1 + "'", int84 == 1);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence12 = charSequenceQueue8.poll();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        boolean boolean14 = charSequenceQueue8.isAtFullCapacity();
        int int15 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        boolean boolean18 = charSequenceQueue17.isAtFullCapacity();
        java.lang.String str19 = charSequenceQueue17.toString();
        boolean boolean20 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray25 = charSequenceQueue22.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor26 = charSequenceQueue22.iterator();
        boolean boolean28 = charSequenceQueue22.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceQueue22.remove(obj29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue32 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean34 = charSequenceQueue32.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence35 = charSequenceQueue32.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.element();
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceList48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean57 = charSequenceList43.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean58 = charSequenceQueue37.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        boolean boolean59 = charSequenceQueue32.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48);
        java.lang.Object[] objArray60 = charSequenceQueue32.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator63 = charSequenceQueue62.spliterator();
        java.lang.CharSequence charSequence64 = charSequenceQueue62.peek();
        boolean boolean65 = charSequenceQueue62.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceQueue62.stream();
        boolean boolean67 = charSequenceQueue32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue62);
        java.lang.String str68 = charSequenceQueue32.toString();
        boolean boolean69 = charSequenceQueue22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream70 = charSequenceQueue22.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean74 = charSequenceQueue72.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence75 = charSequenceQueue72.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream76 = charSequenceQueue72.parallelStream();
        java.lang.CharSequence[] charSequenceArray79 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList80 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList80, charSequenceArray79);
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue85 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85, charSequenceArray84);
        boolean boolean87 = charSequenceQueue85.isAtFullCapacity();
        boolean boolean88 = charSequenceList80.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean89 = charSequenceQueue85.isAtFullCapacity();
        int int90 = charSequenceQueue85.maxSize();
        boolean boolean91 = charSequenceQueue72.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        java.lang.CharSequence charSequence93 = charSequenceQueue85.get(1);
        boolean boolean94 = charSequenceQueue85.isEmpty();
        boolean boolean95 = charSequenceQueue22.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue85);
        boolean boolean96 = charSequenceQueue17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 32 + "'", int15 == 32);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[]" + "'", str19, "[]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(objArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray25), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray25), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(objArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray60), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray60), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator63);
        org.junit.Assert.assertNull(charSequence64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[]" + "'", str68, "[]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceStream70);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertEquals("'" + charSequence75 + "' != '" + "" + "'", charSequence75, "");
        org.junit.Assert.assertNotNull(charSequenceStream76);
        org.junit.Assert.assertNotNull(charSequenceArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 32 + "'", int90 == 32);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertEquals("'" + charSequence93 + "' != '" + "" + "'", charSequence93, "");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean95 + "' != '" + true + "'", boolean95 == true);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        int int33 = charSequenceQueue25.size();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceList37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue42.isAtFullCapacity();
        int int47 = charSequenceQueue42.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue49.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue49.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean55 = charSequenceQueue53.offer((java.lang.CharSequence) "");
        boolean boolean56 = charSequenceQueue49.contains((java.lang.Object) charSequenceQueue53);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean60 = charSequenceQueue58.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence61 = charSequenceQueue58.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue58.parallelStream();
        boolean boolean64 = charSequenceQueue58.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator65 = charSequenceQueue58.spliterator();
        boolean boolean66 = charSequenceQueue49.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean67 = charSequenceQueue58.isFull();
        java.lang.CharSequence charSequence68 = charSequenceQueue58.peek();
        int int69 = charSequenceQueue58.maxSize();
        boolean boolean70 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean73 = charSequenceQueue58.offer((java.lang.CharSequence) "[]");
        int int74 = charSequenceQueue58.size();
        boolean boolean75 = charSequenceQueue25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2 + "'", int33 == 2);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertEquals("'" + charSequence61 + "' != '" + "" + "'", charSequence61, "");
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence68 + "' != '" + "" + "'", charSequence68, "");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 52 + "'", int69 == 52);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2 + "'", int74 == 2);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][]> strComparableArrayQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Comparable<java.lang.String>[][][]>();
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean53 = charSequenceQueue48.isFull();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        charSequenceQueue1.clear();
        boolean boolean10 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream11 = charSequenceQueue1.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceStream11);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean62 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue64 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean66 = charSequenceQueue64.offer((java.lang.CharSequence) "");
        java.lang.String str67 = charSequenceQueue64.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor68 = charSequenceQueue64.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue64.spliterator();
        boolean boolean70 = charSequenceQueue43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue64);
        java.lang.CharSequence charSequence71 = charSequenceQueue64.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream72 = charSequenceQueue64.stream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "[]" + "'", str67, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor68);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertEquals("'" + charSequence71 + "' != '" + "" + "'", charSequence71, "");
        org.junit.Assert.assertNotNull(charSequenceStream72);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean22 = charSequenceQueue1.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.CharSequence charSequence24 = charSequenceQueue1.remove();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue1.stream();
        boolean boolean27 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        boolean boolean28 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor4 = charSequenceQueue1.iterator();
        boolean boolean6 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNotNull(charSequenceItor4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue8.parallelStream();
        boolean boolean11 = charSequenceQueue8.contains((java.lang.Object) 1.0d);
        boolean boolean12 = charSequenceQueue8.isFull();
        boolean boolean13 = charSequenceQueue8.isFull();
        int int14 = charSequenceQueue8.maxSize();
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList17 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList17, charSequenceArray16);
        java.lang.Object obj19 = null;
        boolean boolean20 = charSequenceList17.contains(obj19);
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceList23.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean31 = charSequenceList17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean34 = charSequenceList17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList43.contains(obj45);
        java.lang.String str47 = charSequenceList43.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceList43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean51 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean54 = charSequenceList37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        boolean boolean55 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.lang.String[] strArray59 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray63 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray67 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.String[] strArray71 = new java.lang.String[] { "[[hi!], [hi!]]", "hi!", "hi!" };
        java.lang.Comparable[][] comparableArray73 = new java.lang.Comparable[4][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][] strComparableArray74 = (java.lang.Comparable<java.lang.String>[][]) comparableArray73;
        strComparableArray74[0] = strArray59;
        strComparableArray74[1] = strArray63;
        strComparableArray74[2] = strArray67;
        strComparableArray74[3] = strArray71;
        java.lang.Comparable<java.lang.String>[][] strComparableArray83 = charSequenceQueue53.toArray(strComparableArray74);
        boolean boolean84 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator85 = charSequenceQueue53.spliterator();
        java.lang.CharSequence charSequence86 = charSequenceQueue53.peek();
        java.lang.Object[] objArray87 = charSequenceQueue53.toArray();
        boolean boolean88 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue53);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue89 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 52 + "'", int14 == 52);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!]" + "'", str47, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(comparableArray73);
        org.junit.Assert.assertNotNull(strComparableArray74);
        org.junit.Assert.assertNotNull(strComparableArray83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator85);
        org.junit.Assert.assertNull(charSequence86);
        org.junit.Assert.assertNotNull(objArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray87), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray87), "[]");
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue9);
        boolean boolean14 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue1.parallelStream();
        boolean boolean16 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.lang.Object[] objArray13 = charSequenceQueue8.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.Object obj29 = null;
        boolean boolean30 = charSequenceList27.contains(obj29);
        java.lang.String str31 = charSequenceList27.toString();
        boolean boolean32 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27);
        boolean boolean33 = charSequenceQueue15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue15.spliterator();
        boolean boolean36 = charSequenceQueue15.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45, charSequenceArray44);
        boolean boolean47 = charSequenceQueue45.isAtFullCapacity();
        boolean boolean48 = charSequenceList40.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean49 = charSequenceQueue45.isAtFullCapacity();
        java.lang.Object[] objArray50 = charSequenceQueue45.toArray();
        boolean boolean52 = charSequenceQueue45.contains((java.lang.Object) false);
        boolean boolean53 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean54 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.lang.CharSequence charSequence55 = charSequenceQueue8.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean59 = charSequenceQueue57.offer((java.lang.CharSequence) "");
        charSequenceQueue57.clear();
        java.lang.CharSequence charSequence61 = charSequenceQueue57.peek();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList71 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71, charSequenceArray70);
        java.lang.Object obj73 = null;
        boolean boolean74 = charSequenceList71.contains(obj73);
        java.lang.String str75 = charSequenceList71.toString();
        boolean boolean76 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList71);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue78 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean80 = charSequenceQueue78.offer((java.lang.CharSequence) "");
        boolean boolean82 = charSequenceQueue78.add((java.lang.CharSequence) "hi!");
        int int83 = charSequenceQueue78.maxSize();
        boolean boolean84 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue78);
        boolean boolean86 = charSequenceList64.remove((java.lang.Object) 0);
        boolean boolean87 = charSequenceQueue57.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue88 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean89 = charSequenceQueue57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue88);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator90 = charSequenceQueue88.spliterator();
        boolean boolean91 = charSequenceQueue8.remove((java.lang.Object) charSequenceSpliterator90);
        java.lang.CharSequence charSequence92 = charSequenceQueue8.remove();
        java.lang.CharSequence charSequence93 = charSequenceQueue8.poll();
        charSequenceQueue8.clear();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence95 = charSequenceQueue8.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(objArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray13), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray13), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[hi!]" + "'", str31, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "" + "'", charSequence55, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(charSequence61);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 52 + "'", int83 == 52);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertNull(charSequence93);
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator6 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue8.iterator();
        charSequenceQueue8.clear();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue17.spliterator();
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue17.poll();
        boolean boolean24 = charSequenceQueue17.add((java.lang.CharSequence) "");
        charSequenceQueue17.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence30 = charSequenceQueue27.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream31 = charSequenceQueue27.parallelStream();
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList35 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList35, charSequenceArray34);
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40, charSequenceArray39);
        boolean boolean42 = charSequenceQueue40.isAtFullCapacity();
        boolean boolean43 = charSequenceList35.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean44 = charSequenceQueue40.isAtFullCapacity();
        int int45 = charSequenceQueue40.maxSize();
        boolean boolean46 = charSequenceQueue27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        boolean boolean48 = charSequenceQueue27.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence49 = charSequenceQueue27.remove();
        boolean boolean50 = charSequenceQueue17.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        int int51 = charSequenceQueue17.size();
        boolean boolean52 = charSequenceQueue17.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean56 = charSequenceQueue54.offer((java.lang.CharSequence) "");
        int int57 = charSequenceQueue54.maxSize();
        int int58 = charSequenceQueue54.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean62 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        boolean boolean64 = charSequenceQueue60.offer((java.lang.CharSequence) "");
        boolean boolean66 = charSequenceQueue60.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator69 = charSequenceQueue68.spliterator();
        java.lang.CharSequence charSequence70 = charSequenceQueue68.peek();
        boolean boolean71 = charSequenceQueue68.isEmpty();
        boolean boolean72 = charSequenceQueue60.remove((java.lang.Object) boolean71);
        boolean boolean74 = charSequenceQueue60.add((java.lang.CharSequence) "[]");
        boolean boolean75 = charSequenceQueue54.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue60);
        boolean boolean76 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean77 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceSpliterator6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "" + "'", charSequence30, "");
        org.junit.Assert.assertNotNull(charSequenceStream31);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 32 + "'", int45 == 32);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 3 + "'", int51 == 3);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 10 + "'", int57 == 10);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10 + "'", int58 == 10);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator69);
        org.junit.Assert.assertNull(charSequence70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess> randomAccessQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.util.RandomAccess>(5);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        charSequenceQueue10.clear();
        boolean boolean15 = charSequenceQueue10.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.CharSequence charSequence34 = charSequenceQueue30.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue30.parallelStream();
        boolean boolean36 = charSequenceQueue10.contains((java.lang.Object) charSequenceStream35);
        java.lang.CharSequence charSequence37 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue10.parallelStream();
        boolean boolean39 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        int int41 = charSequenceQueue40.maxSize();
        java.lang.CharSequence charSequence42 = charSequenceQueue40.poll();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2 + "'", int41 == 2);
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "" + "'", charSequence42, "");
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean34 = charSequenceQueue7.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.String str11 = charSequenceQueue8.toString();
        boolean boolean12 = charSequenceQueue1.remove((java.lang.Object) str11);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean16 = charSequenceQueue14.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue14.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence22 = charSequenceQueue19.element();
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceList30.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        boolean boolean39 = charSequenceList25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean40 = charSequenceQueue19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        boolean boolean41 = charSequenceQueue14.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30);
        java.lang.Object[] objArray42 = charSequenceQueue14.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue44.spliterator();
        java.lang.CharSequence charSequence46 = charSequenceQueue44.peek();
        boolean boolean47 = charSequenceQueue44.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue44.stream();
        boolean boolean49 = charSequenceQueue14.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        boolean boolean50 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence51 = charSequenceQueue1.peek();
        boolean boolean52 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[]" + "'", str11, "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(objArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray42), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray42), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(charSequence51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean6 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        charSequenceQueue12.clear();
        boolean boolean21 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        boolean boolean26 = charSequenceQueue23.contains((java.lang.Object) 1.0d);
        boolean boolean27 = charSequenceQueue23.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue23.stream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue23.stream();
        boolean boolean31 = charSequenceQueue23.add((java.lang.CharSequence) "hi!");
        boolean boolean32 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        boolean boolean33 = charSequenceQueue10.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue10.parallelStream();
        boolean boolean35 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor36 = charSequenceQueue10.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceItor36);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence14 = charSequenceQueue11.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue11.parallelStream();
        boolean boolean17 = charSequenceQueue11.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue11.spliterator();
        boolean boolean19 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean21 = charSequenceQueue11.add((java.lang.CharSequence) "hi!");
        boolean boolean22 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.lang.CharSequence charSequence23 = charSequenceQueue1.remove();
        java.lang.Class<?> wildcardClass24 = charSequence23.getClass();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        int int24 = charSequenceQueue22.maxSize();
        boolean boolean25 = charSequenceQueue22.isFull();
        java.lang.String str26 = charSequenceQueue22.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray33 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34, charSequenceArray33);
        boolean boolean36 = charSequenceQueue34.isAtFullCapacity();
        boolean boolean37 = charSequenceQueue28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue39.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue39.spliterator();
        boolean boolean43 = charSequenceQueue39.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence44 = charSequenceQueue39.poll();
        boolean boolean45 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        java.util.Queue[] queueArray47 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray48 = (java.util.Queue<java.lang.CharSequence>[]) queueArray47;
        charSequenceQueueArray48[0] = charSequenceQueue22;
        charSequenceQueueArray48[1] = charSequenceQueue39;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray53 = charSequenceQueue10.toArray(charSequenceQueueArray48);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue10.stream();
        java.lang.Object[] objArray55 = charSequenceQueue10.toArray();
        java.lang.CharSequence charSequence56 = charSequenceQueue10.peek();
        java.lang.Object[] objArray57 = charSequenceQueue10.toArray();
        java.lang.Object[] objArray58 = charSequenceQueue10.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 32 + "'", int24 == 32);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[]" + "'", str26, "[]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(charSequenceArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertEquals("'" + charSequence44 + "' != '" + "" + "'", charSequence44, "");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(queueArray47);
        org.junit.Assert.assertNotNull(charSequenceQueueArray48);
        org.junit.Assert.assertNotNull(charSequenceQueueArray53);
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertNotNull(objArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray55), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray55), "[]");
        org.junit.Assert.assertNull(charSequence56);
        org.junit.Assert.assertNotNull(objArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray57), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray57), "[]");
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence55 = charSequenceQueue54.peek();
        boolean boolean56 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.CharSequence charSequence57 = charSequenceQueue38.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(charSequence55);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertEquals("'" + charSequence57 + "' != '" + "hi!" + "'", charSequence57, "hi!");
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence60 = charSequenceQueue15.poll();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.CharSequence[] charSequenceArray68 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue69 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69, charSequenceArray68);
        boolean boolean71 = charSequenceQueue69.isAtFullCapacity();
        boolean boolean72 = charSequenceList64.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        boolean boolean73 = charSequenceQueue69.isAtFullCapacity();
        java.lang.Object[] objArray74 = charSequenceQueue69.toArray();
        boolean boolean76 = charSequenceQueue69.add((java.lang.CharSequence) "[, ]");
        boolean boolean77 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue69);
        int int78 = charSequenceQueue15.maxSize();
        java.lang.Object obj79 = null;
        boolean boolean80 = charSequenceQueue15.contains(obj79);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNull(charSequence60);
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(charSequenceArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(objArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray74), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray74), "[, ]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue17.stream();
        boolean boolean19 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue21.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream25 = charSequenceQueue21.parallelStream();
        charSequenceQueue21.clear();
        java.lang.CharSequence charSequence27 = charSequenceQueue21.peek();
        boolean boolean29 = charSequenceQueue21.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence30 = charSequenceQueue21.remove();
        boolean boolean31 = charSequenceQueue9.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        boolean boolean32 = charSequenceQueue21.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40, charSequenceArray39);
        boolean boolean42 = charSequenceQueue40.isAtFullCapacity();
        boolean boolean43 = charSequenceQueue34.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator46 = charSequenceQueue45.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator47 = charSequenceQueue45.spliterator();
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence50 = charSequenceQueue45.poll();
        boolean boolean51 = charSequenceQueue40.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        java.lang.CharSequence charSequence52 = charSequenceQueue40.remove();
        boolean boolean53 = charSequenceQueue40.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream56 = charSequenceQueue55.parallelStream();
        boolean boolean57 = charSequenceQueue40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        int int58 = charSequenceQueue40.maxSize();
        java.lang.CharSequence charSequence59 = charSequenceQueue40.poll();
        boolean boolean60 = charSequenceQueue40.isFull();
        boolean boolean61 = charSequenceQueue21.remove((java.lang.Object) boolean60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceStream25);
        org.junit.Assert.assertNull(charSequence27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + charSequence30 + "' != '" + "[, hi!]" + "'", charSequence30, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator46);
        org.junit.Assert.assertNotNull(charSequenceSpliterator47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertEquals("'" + charSequence50 + "' != '" + "" + "'", charSequence50, "");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(charSequenceStream56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 32 + "'", int58 == 32);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor6 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue21.spliterator();
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence26 = charSequenceQueue21.poll();
        boolean boolean27 = charSequenceQueue16.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence28 = charSequenceQueue16.remove();
        boolean boolean29 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        boolean boolean30 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue8);
        java.lang.CharSequence charSequence31 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue33.element();
        java.lang.CharSequence[] charSequenceArray38 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList39 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList39, charSequenceArray38);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49, charSequenceArray48);
        boolean boolean51 = charSequenceQueue49.isAtFullCapacity();
        boolean boolean52 = charSequenceList44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean53 = charSequenceList39.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        boolean boolean54 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44);
        java.lang.CharSequence[] charSequenceArray56 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList57 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList57, charSequenceArray56);
        java.lang.Object obj59 = null;
        boolean boolean60 = charSequenceList57.contains(obj59);
        java.lang.String str61 = charSequenceList57.toString();
        java.lang.CharSequence[] charSequenceArray63 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList64 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64, charSequenceArray63);
        java.lang.Object obj66 = null;
        boolean boolean67 = charSequenceList64.contains(obj66);
        java.lang.String str68 = charSequenceList64.toString();
        boolean boolean69 = charSequenceList57.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue70 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList64);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream71 = charSequenceQueue70.stream();
        boolean boolean72 = charSequenceQueue33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue70);
        java.lang.CharSequence charSequence73 = charSequenceQueue70.element();
        java.lang.CharSequence charSequence74 = charSequenceQueue70.peek();
        java.lang.String str75 = charSequenceQueue70.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream78 = charSequenceQueue77.parallelStream();
        java.lang.String str79 = charSequenceQueue77.toString();
        boolean boolean81 = charSequenceQueue77.contains((java.lang.Object) 10.0d);
        boolean boolean82 = charSequenceQueue70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue77);
        boolean boolean83 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue77);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceItor6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertNotNull(charSequenceArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(charSequenceArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[hi!]" + "'", str61, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[hi!]" + "'", str68, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(charSequenceStream71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + charSequence73 + "' != '" + "hi!" + "'", charSequence73, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence74 + "' != '" + "hi!" + "'", charSequence74, "hi!");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "[hi!]" + "'", str75, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream78);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[]" + "'", str79, "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int13 = charSequenceQueue7.size();
        boolean boolean14 = charSequenceQueue7.isFull();
        java.lang.String str15 = charSequenceQueue7.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 3 + "'", int13 == 3);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[, , [[hi!], [hi!]]]" + "'", str15, "[, , [[hi!], [hi!]]]");
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray11 = charSequenceQueue8.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor12 = charSequenceQueue8.iterator();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.peek();
        boolean boolean14 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean15 = charSequenceQueue8.isFull();
        int int16 = charSequenceQueue8.size();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor12);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean59 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence60 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue68 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68, charSequenceArray67);
        boolean boolean70 = charSequenceQueue68.isAtFullCapacity();
        boolean boolean71 = charSequenceQueue62.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue68);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue73 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator74 = charSequenceQueue73.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator75 = charSequenceQueue73.spliterator();
        boolean boolean77 = charSequenceQueue73.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence78 = charSequenceQueue73.poll();
        boolean boolean79 = charSequenceQueue68.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        java.lang.Object[] objArray80 = charSequenceQueue73.toArray();
        boolean boolean81 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue73);
        charSequenceQueue73.clear();
        boolean boolean83 = charSequenceQueue73.isFull();
        java.lang.CharSequence charSequence84 = charSequenceQueue73.poll();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "hi!" + "'", charSequence60, "hi!");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator74);
        org.junit.Assert.assertNotNull(charSequenceSpliterator75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertEquals("'" + charSequence78 + "' != '" + "" + "'", charSequence78, "");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(objArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray80), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray80), "[]");
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNull(charSequence84);
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        boolean boolean7 = charSequenceQueue1.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue1.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue12.offer((java.lang.CharSequence) "[, ]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue12.parallelStream();
        boolean boolean21 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.String str22 = charSequenceQueue12.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[, [, ]]" + "'", str22, "[, [, ]]");
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue0 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor1 = charSequenceQueue0.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream4 = charSequenceQueue3.stream();
        java.lang.Comparable[][][][] comparableArray6 = new java.lang.Comparable[0][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray7 = (java.lang.Comparable<java.lang.String>[][][][]) comparableArray6;
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray8 = charSequenceQueue3.toArray(strComparableArray7);
        java.lang.Comparable<java.lang.String>[][][][] strComparableArray9 = charSequenceQueue0.toArray(strComparableArray7);
        java.lang.Class<?> wildcardClass10 = strComparableArray9.getClass();
        org.junit.Assert.assertNotNull(charSequenceItor1);
        org.junit.Assert.assertNotNull(charSequenceStream4);
        org.junit.Assert.assertNotNull(comparableArray6);
        org.junit.Assert.assertNotNull(strComparableArray7);
        org.junit.Assert.assertNotNull(strComparableArray8);
        org.junit.Assert.assertNotNull(strComparableArray9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        charSequenceQueue8.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator11 = charSequenceQueue8.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue19.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        int int23 = charSequenceQueue19.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue19.stream();
        int int25 = charSequenceQueue19.maxSize();
        boolean boolean26 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue27.iterator();
        boolean boolean29 = charSequenceQueue19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator11);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, , , hi!]");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.String str16 = charSequenceList12.toString();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList19.contains(obj21);
        java.lang.String str23 = charSequenceList19.toString();
        boolean boolean24 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.Object[] objArray26 = charSequenceList19.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean30 = charSequenceQueue28.offer((java.lang.CharSequence) "");
        boolean boolean32 = charSequenceQueue28.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceQueue28.isEmpty();
        boolean boolean38 = charSequenceQueue28.remove((java.lang.Object) 10.0d);
        charSequenceQueue28.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        int int42 = charSequenceQueue41.maxSize();
        boolean boolean43 = charSequenceQueue28.remove((java.lang.Object) charSequenceQueue41);
        boolean boolean44 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean48 = charSequenceQueue46.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray51 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue52 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52, charSequenceArray51);
        boolean boolean54 = charSequenceQueue52.isAtFullCapacity();
        boolean boolean55 = charSequenceQueue46.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor56 = charSequenceQueue52.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator57 = charSequenceQueue52.spliterator();
        boolean boolean58 = charSequenceList19.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue52.stream();
        java.lang.CharSequence charSequence60 = charSequenceQueue52.poll();
        boolean boolean61 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue52);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream62 = charSequenceQueue52.stream();
        java.lang.CharSequence charSequence63 = charSequenceQueue52.peek();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!]" + "'", str16, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!]" + "'", str23, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(objArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray26), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray26), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 100 + "'", int42 == 100);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceItor56);
        org.junit.Assert.assertNotNull(charSequenceSpliterator57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceStream62);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean11 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceQueue13.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue13.parallelStream();
        boolean boolean19 = charSequenceQueue13.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue13.spliterator();
        boolean boolean21 = charSequenceQueue13.isAtFullCapacity();
        boolean boolean22 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue13);
        java.lang.String str23 = charSequenceQueue7.toString();
        boolean boolean25 = charSequenceQueue7.add((java.lang.CharSequence) "[[hi!], [, hi!]]");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[, ]" + "'", str23, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.Object[] objArray10 = charSequenceQueue8.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence15 = charSequenceQueue12.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue17.element();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceList23.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean38 = charSequenceQueue17.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        boolean boolean39 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28);
        java.lang.Object[] objArray40 = charSequenceQueue12.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator43 = charSequenceQueue42.spliterator();
        java.lang.CharSequence charSequence44 = charSequenceQueue42.peek();
        boolean boolean45 = charSequenceQueue42.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream46 = charSequenceQueue42.stream();
        boolean boolean47 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        java.lang.String str48 = charSequenceQueue12.toString();
        boolean boolean49 = charSequenceQueue8.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.Object[] objArray50 = charSequenceQueue12.toArray();
        boolean boolean51 = charSequenceQueue12.isEmpty();
        java.lang.Object[] objArray52 = charSequenceQueue12.toArray();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(objArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray10), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray10), "[]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(objArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray40), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray40), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator43);
        org.junit.Assert.assertNull(charSequence44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceStream46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[]" + "'", str48, "[]");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(objArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray50), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray50), "[]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(objArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray52), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray52), "[]");
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue16.spliterator();
        boolean boolean24 = charSequenceQueue16.isAtFullCapacity();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence26 = charSequenceQueue16.get((int) '4');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (52) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue60 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: The size must be greater than 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue8.offer((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue21.element();
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList27 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList27, charSequenceArray26);
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37, charSequenceArray36);
        boolean boolean39 = charSequenceQueue37.isAtFullCapacity();
        boolean boolean40 = charSequenceList32.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean41 = charSequenceList27.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean42 = charSequenceQueue21.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        boolean boolean43 = charSequenceQueue16.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.lang.Object[] objArray44 = charSequenceQueue16.toArray();
        java.lang.Object[] objArray45 = charSequenceQueue16.toArray();
        java.lang.CharSequence charSequence46 = charSequenceQueue16.element();
        int int47 = charSequenceQueue16.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean51 = charSequenceQueue49.offer((java.lang.CharSequence) "");
        int int52 = charSequenceQueue49.maxSize();
        int int53 = charSequenceQueue49.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        boolean boolean59 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        boolean boolean61 = charSequenceQueue55.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        boolean boolean66 = charSequenceQueue63.isEmpty();
        boolean boolean67 = charSequenceQueue55.remove((java.lang.Object) boolean66);
        boolean boolean69 = charSequenceQueue55.add((java.lang.CharSequence) "[]");
        boolean boolean70 = charSequenceQueue49.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue55);
        boolean boolean71 = charSequenceQueue16.contains((java.lang.Object) charSequenceQueue55);
        int int72 = charSequenceQueue16.maxSize();
        boolean boolean73 = charSequenceQueue8.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream74 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(objArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray44), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray44), "[]");
        org.junit.Assert.assertNotNull(objArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray45), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray45), "[]");
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 10 + "'", int52 == 10);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10 + "'", int53 == 10);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 52 + "'", int72 == 52);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(charSequenceStream74);
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean19 = charSequenceQueue12.isEmpty();
        boolean boolean21 = charSequenceQueue12.add((java.lang.CharSequence) "[, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) 'a');
        boolean boolean24 = charSequenceQueue23.isAtFullCapacity();
        boolean boolean25 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        java.lang.Object[] objArray28 = charSequenceQueue27.toArray();
        java.lang.CharSequence charSequence29 = charSequenceQueue27.poll();
        boolean boolean30 = charSequenceQueue12.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        java.lang.Class<?> wildcardClass31 = charSequenceQueue12.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(objArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray28), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray28), "[]");
        org.junit.Assert.assertNull(charSequence29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        boolean boolean5 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean6 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        int int9 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream12 = charSequenceQueue11.parallelStream();
        boolean boolean14 = charSequenceQueue11.contains((java.lang.Object) 1.0d);
        boolean boolean15 = charSequenceQueue11.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue17.parallelStream();
        boolean boolean20 = charSequenceQueue17.contains((java.lang.Object) 1.0d);
        boolean boolean21 = charSequenceQueue17.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue17.stream();
        boolean boolean23 = charSequenceQueue11.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean24 = charSequenceQueue11.isEmpty();
        boolean boolean25 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue11.stream();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(charSequenceStream12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceStream26);
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray4 = charSequenceQueue1.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        boolean boolean7 = charSequenceQueue1.offer((java.lang.CharSequence) "[]");
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceQueue1.remove(obj8);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        int int11 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence16 = charSequenceQueue13.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue13.parallelStream();
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList21 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList21, charSequenceArray20);
        java.lang.CharSequence[] charSequenceArray25 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26, charSequenceArray25);
        boolean boolean28 = charSequenceQueue26.isAtFullCapacity();
        boolean boolean29 = charSequenceList21.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean30 = charSequenceQueue26.isAtFullCapacity();
        int int31 = charSequenceQueue26.maxSize();
        boolean boolean32 = charSequenceQueue13.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean34 = charSequenceQueue13.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence35 = charSequenceQueue13.remove();
        java.lang.CharSequence charSequence36 = charSequenceQueue13.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44, charSequenceArray43);
        boolean boolean46 = charSequenceQueue44.isAtFullCapacity();
        boolean boolean47 = charSequenceQueue38.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        int int48 = charSequenceQueue44.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue44.stream();
        java.lang.String str50 = charSequenceQueue44.toString();
        boolean boolean51 = charSequenceQueue13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.Class<?> wildcardClass52 = charSequenceQueue44.getClass();
        boolean boolean53 = charSequenceQueue1.remove((java.lang.Object) wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(objArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray4), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray4), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 10 + "'", int11 == 10);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(charSequenceArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 32 + "'", int31 == 32);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + charSequence35 + "' != '" + "" + "'", charSequence35, "");
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 32 + "'", int48 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[, ]" + "'", str50, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean14 = charSequenceQueue12.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18, charSequenceArray17);
        boolean boolean20 = charSequenceQueue18.isAtFullCapacity();
        boolean boolean21 = charSequenceQueue12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue18);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator24 = charSequenceQueue23.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator25 = charSequenceQueue23.spliterator();
        boolean boolean27 = charSequenceQueue23.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue23.poll();
        boolean boolean29 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38, charSequenceArray37);
        boolean boolean40 = charSequenceQueue38.isAtFullCapacity();
        boolean boolean41 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean42 = charSequenceQueue38.isAtFullCapacity();
        int int43 = charSequenceQueue38.maxSize();
        boolean boolean44 = charSequenceQueue18.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator45 = charSequenceQueue38.spliterator();
        boolean boolean46 = charSequenceQueue1.remove((java.lang.Object) charSequenceSpliterator45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean59 = charSequenceQueue54.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int60 = charSequenceQueue54.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor61 = charSequenceQueue54.iterator();
        boolean boolean63 = charSequenceQueue54.add((java.lang.CharSequence) "[[, , , hi!]]");
        boolean boolean64 = charSequenceQueue1.remove((java.lang.Object) "[[, , , hi!]]");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream65 = charSequenceQueue1.parallelStream();
        int int66 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator24);
        org.junit.Assert.assertNotNull(charSequenceSpliterator25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 32 + "'", int43 == 32);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 32 + "'", int60 == 32);
        org.junit.Assert.assertNotNull(charSequenceItor61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceStream65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence4 = charSequenceQueue1.poll();
        boolean boolean5 = charSequenceQueue1.isFull();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        boolean boolean9 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        boolean boolean11 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue1.remove();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        boolean boolean15 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator18 = charSequenceQueue17.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator19 = charSequenceQueue17.spliterator();
        boolean boolean21 = charSequenceQueue17.add((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue17.isAtFullCapacity();
        int int23 = charSequenceQueue17.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean29 = charSequenceQueue25.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream30 = charSequenceQueue25.stream();
        boolean boolean31 = charSequenceQueue17.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue33.stream();
        boolean boolean35 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue37.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue37.parallelStream();
        charSequenceQueue37.clear();
        java.lang.CharSequence charSequence43 = charSequenceQueue37.peek();
        boolean boolean45 = charSequenceQueue37.add((java.lang.CharSequence) "[, hi!]");
        java.lang.CharSequence charSequence46 = charSequenceQueue37.remove();
        boolean boolean47 = charSequenceQueue25.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue37);
        boolean boolean48 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertNull(charSequence4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "[, ]" + "'", charSequence12, "[, ]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator18);
        org.junit.Assert.assertNotNull(charSequenceSpliterator19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceStream30);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "[, hi!]" + "'", charSequence46, "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor10 = charSequenceQueue8.iterator();
        boolean boolean11 = charSequenceQueue8.isFull();
        java.lang.CharSequence charSequence12 = charSequenceQueue8.peek();
        java.lang.CharSequence charSequence13 = charSequenceQueue8.poll();
        charSequenceQueue8.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue16.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.Object obj30 = null;
        boolean boolean31 = charSequenceList28.contains(obj30);
        java.lang.String str32 = charSequenceList28.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList28.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean36 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        boolean boolean37 = charSequenceQueue16.remove((java.lang.Object) charSequenceQueue34);
        int int38 = charSequenceQueue34.size();
        boolean boolean39 = charSequenceQueue8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        int int40 = charSequenceQueue8.size();
        boolean boolean42 = charSequenceQueue8.offer((java.lang.CharSequence) "[, hi!, , hi!, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceItor10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(charSequence12);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[hi!]" + "'", str32, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence charSequence19 = charSequenceQueue7.remove();
        boolean boolean20 = charSequenceQueue7.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue22.parallelStream();
        boolean boolean24 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        int int25 = charSequenceQueue7.maxSize();
        java.lang.CharSequence charSequence26 = charSequenceQueue7.poll();
        int int27 = charSequenceQueue7.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        int int32 = charSequenceQueue29.maxSize();
        int int33 = charSequenceQueue29.maxSize();
        boolean boolean34 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceQueue36.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator48 = charSequenceQueue47.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue47.spliterator();
        boolean boolean51 = charSequenceQueue47.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence52 = charSequenceQueue47.poll();
        boolean boolean53 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        java.lang.CharSequence charSequence54 = charSequenceQueue42.remove();
        boolean boolean55 = charSequenceQueue42.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue57 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream58 = charSequenceQueue57.parallelStream();
        boolean boolean59 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue57);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue57.iterator();
        boolean boolean61 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue57);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence62 = charSequenceQueue57.remove();
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: queue is empty");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 32 + "'", int25 == 32);
        org.junit.Assert.assertEquals("'" + charSequence26 + "' != '" + "" + "'", charSequence26, "");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 32 + "'", int27 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10 + "'", int32 == 10);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator48);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertEquals("'" + charSequence52 + "' != '" + "" + "'", charSequence52, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(charSequenceStream58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.peek();
        int int21 = charSequenceQueue10.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue10.stream();
        java.lang.CharSequence charSequence23 = charSequenceQueue10.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue10.stream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertNotNull(charSequenceStream24);
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceList2.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue11.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue11.spliterator();
        boolean boolean15 = charSequenceQueue11.add((java.lang.CharSequence) "");
        boolean boolean16 = charSequenceQueue11.isAtFullCapacity();
        java.lang.CharSequence charSequence17 = charSequenceQueue11.element();
        int int18 = charSequenceQueue11.size();
        boolean boolean19 = charSequenceList2.remove((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor20 = charSequenceQueue11.iterator();
        java.lang.CharSequence charSequence21 = charSequenceQueue11.remove();
        boolean boolean23 = charSequenceQueue11.add((java.lang.CharSequence) "[[, hi!]]");
        boolean boolean25 = charSequenceQueue11.offer((java.lang.CharSequence) "[, hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceItor20);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue9);
        boolean boolean14 = charSequenceQueue1.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream15 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray17 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList18 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList18, charSequenceArray17);
        java.lang.Object obj20 = null;
        boolean boolean21 = charSequenceList18.contains(obj20);
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList24 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList24, charSequenceArray23);
        java.lang.Object obj26 = null;
        boolean boolean27 = charSequenceList24.contains(obj26);
        java.lang.String str28 = charSequenceList24.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceList24.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        boolean boolean32 = charSequenceList18.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean35 = charSequenceList18.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue34);
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean45 = charSequenceList38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor46 = charSequenceQueue44.iterator();
        charSequenceQueue44.clear();
        java.lang.CharSequence charSequence48 = charSequenceQueue44.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean52 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue50.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue55 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean57 = charSequenceQueue55.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence58 = charSequenceQueue55.element();
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList66 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.lang.CharSequence[] charSequenceArray70 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue71 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71, charSequenceArray70);
        boolean boolean73 = charSequenceQueue71.isAtFullCapacity();
        boolean boolean74 = charSequenceList66.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue71);
        boolean boolean75 = charSequenceList61.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean76 = charSequenceQueue55.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        boolean boolean77 = charSequenceQueue50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66);
        java.lang.Object[] objArray78 = charSequenceQueue50.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream79 = charSequenceQueue50.parallelStream();
        charSequenceQueue50.clear();
        boolean boolean82 = charSequenceQueue50.add((java.lang.CharSequence) "");
        boolean boolean83 = charSequenceQueue44.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue50.clear();
        boolean boolean85 = charSequenceQueue34.contains((java.lang.Object) charSequenceQueue50);
        boolean boolean87 = charSequenceQueue50.add((java.lang.CharSequence) "[, , [[hi!], [hi!]]]");
        boolean boolean89 = charSequenceQueue50.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray90 = charSequenceQueue50.toArray();
        boolean boolean91 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator92 = charSequenceQueue1.spliterator();
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream15);
        org.junit.Assert.assertNotNull(charSequenceArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceItor46);
        org.junit.Assert.assertNull(charSequence48);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(charSequenceArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream79);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(objArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray90), "[[, , [[hi!], [hi!]]], ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray90), "[[, , [[hi!], [hi!]]], ]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator92);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 100);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        boolean boolean7 = charSequenceQueue3.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue3.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        charSequenceQueue3.clear();
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue3);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue1.spliterator();
        int int14 = charSequenceQueue1.size();
        java.lang.String str15 = charSequenceQueue1.toString();
        int int16 = charSequenceQueue1.maxSize();
        boolean boolean17 = charSequenceQueue1.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue19.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator21 = charSequenceQueue19.spliterator();
        boolean boolean23 = charSequenceQueue19.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence24 = charSequenceQueue19.poll();
        boolean boolean26 = charSequenceQueue19.add((java.lang.CharSequence) "");
        charSequenceQueue19.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream33 = charSequenceQueue29.parallelStream();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        boolean boolean44 = charSequenceQueue42.isAtFullCapacity();
        boolean boolean45 = charSequenceList37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue42.isAtFullCapacity();
        int int47 = charSequenceQueue42.maxSize();
        boolean boolean48 = charSequenceQueue29.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean50 = charSequenceQueue29.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence51 = charSequenceQueue29.remove();
        boolean boolean52 = charSequenceQueue19.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean53 = charSequenceQueue19.isEmpty();
        boolean boolean54 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[]" + "'", str15, "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 100 + "'", int16 == 100);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertNotNull(charSequenceStream33);
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 32 + "'", int47 == 32);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceList25.toArray((java.lang.Comparable<java.lang.String>[]) strArray33);
        java.lang.String[] strArray35 = charSequenceQueue1.toArray(strArray33);
        java.lang.CharSequence charSequence36 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.peek();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.Object obj46 = null;
        boolean boolean47 = charSequenceList44.contains(obj46);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList50 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList50, charSequenceArray49);
        java.lang.Object obj52 = null;
        boolean boolean53 = charSequenceList50.contains(obj52);
        java.lang.String str54 = charSequenceList50.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean57 = charSequenceList50.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean58 = charSequenceList44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue56);
        boolean boolean59 = charSequenceQueue38.remove((java.lang.Object) charSequenceQueue56);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor60 = charSequenceQueue56.iterator();
        boolean boolean61 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue56);
        java.lang.CharSequence charSequence62 = charSequenceQueue1.poll();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[hi!]" + "'", str54, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(charSequenceItor60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(charSequence62);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        java.lang.String str3 = charSequenceQueue1.toString();
        boolean boolean5 = charSequenceQueue1.contains((java.lang.Object) 10.0d);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator9 = charSequenceQueue7.spliterator();
        boolean boolean11 = charSequenceQueue7.add((java.lang.CharSequence) "");
        boolean boolean12 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue28 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28, charSequenceArray27);
        boolean boolean30 = charSequenceQueue28.isAtFullCapacity();
        boolean boolean31 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator34 = charSequenceQueue33.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator35 = charSequenceQueue33.spliterator();
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.poll();
        boolean boolean39 = charSequenceQueue28.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.CharSequence charSequence40 = charSequenceQueue28.remove();
        boolean boolean41 = charSequenceQueue20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue28);
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray53 = charSequenceList44.toArray((java.lang.Comparable<java.lang.String>[]) strArray52);
        java.lang.String[] strArray54 = charSequenceQueue20.toArray(strArray52);
        java.lang.String[] strArray55 = charSequenceQueue16.toArray(strArray54);
        java.lang.String[] strArray56 = charSequenceQueue1.toArray(strArray54);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue1.iterator();
        boolean boolean58 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "[]" + "'", str3, "[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNotNull(charSequenceSpliterator9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator34);
        org.junit.Assert.assertNotNull(charSequenceSpliterator35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strComparableArray53);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(charSequenceItor57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceList15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        boolean boolean28 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        java.lang.CharSequence[] charSequenceArray30 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList31 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList31, charSequenceArray30);
        java.lang.Object obj33 = null;
        boolean boolean34 = charSequenceList31.contains(obj33);
        java.lang.String str35 = charSequenceList31.toString();
        java.lang.CharSequence[] charSequenceArray37 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList38 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38, charSequenceArray37);
        java.lang.Object obj40 = null;
        boolean boolean41 = charSequenceList38.contains(obj40);
        java.lang.String str42 = charSequenceList38.toString();
        boolean boolean43 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue45 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue45.offer((java.lang.CharSequence) "");
        boolean boolean49 = charSequenceQueue45.add((java.lang.CharSequence) "hi!");
        int int50 = charSequenceQueue45.maxSize();
        boolean boolean51 = charSequenceList31.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        boolean boolean52 = charSequenceList15.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue45);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue56 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean58 = charSequenceQueue56.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray60 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList61 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61, charSequenceArray60);
        java.lang.Object obj63 = null;
        boolean boolean64 = charSequenceList61.contains(obj63);
        java.lang.String str65 = charSequenceList61.toString();
        java.lang.CharSequence[] charSequenceArray67 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList68 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68, charSequenceArray67);
        java.lang.Object obj70 = null;
        boolean boolean71 = charSequenceList68.contains(obj70);
        java.lang.String str72 = charSequenceList68.toString();
        boolean boolean73 = charSequenceList61.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList68);
        boolean boolean74 = charSequenceQueue56.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList61);
        boolean boolean75 = charSequenceQueue54.remove((java.lang.Object) charSequenceQueue56);
        boolean boolean76 = charSequenceList15.remove((java.lang.Object) charSequenceQueue54);
        boolean boolean77 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean78 = charSequenceQueue54.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator79 = charSequenceQueue54.spliterator();
        boolean boolean80 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue82 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream83 = charSequenceQueue82.parallelStream();
        int int84 = charSequenceQueue82.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue86 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean88 = charSequenceQueue86.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray89 = charSequenceQueue86.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor90 = charSequenceQueue86.iterator();
        boolean boolean91 = charSequenceQueue82.remove((java.lang.Object) charSequenceQueue86);
        java.lang.CharSequence charSequence92 = charSequenceQueue86.remove();
        boolean boolean93 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue86);
        boolean boolean94 = charSequenceQueue1.isFull();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(charSequenceArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[hi!]" + "'", str35, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[hi!]" + "'", str42, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 52 + "'", int50 == 52);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(charSequenceArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[hi!]" + "'", str65, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[hi!]" + "'", str72, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator79);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(charSequenceStream83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(objArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray89), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray89), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + charSequence92 + "' != '" + "" + "'", charSequence92, "");
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.parallelStream();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14, charSequenceArray13);
        boolean boolean16 = charSequenceQueue14.isAtFullCapacity();
        boolean boolean17 = charSequenceList9.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean18 = charSequenceQueue14.isAtFullCapacity();
        int int19 = charSequenceQueue14.maxSize();
        boolean boolean20 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean21 = charSequenceQueue1.isEmpty();
        java.lang.Object[] objArray22 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 32 + "'", int19 == 32);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(objArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray22), "[, , ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray22), "[, , ]");
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "[hi!]" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        boolean boolean4 = charSequenceQueue2.isFull();
        java.lang.CharSequence charSequence5 = charSequenceQueue2.element();
        java.lang.CharSequence charSequence6 = charSequenceQueue2.remove();
        int int7 = charSequenceQueue2.size();
        int int8 = charSequenceQueue2.size();
        java.lang.Class<?> wildcardClass9 = charSequenceQueue2.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + charSequence5 + "' != '" + "[hi!]" + "'", charSequence5, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "[hi!]" + "'", charSequence6, "[hi!]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.Object[] objArray8 = charSequenceQueue1.toArray();
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        charSequenceQueue1.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean12 = charSequenceQueue11.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean21 = charSequenceQueue14.add((java.lang.CharSequence) "");
        charSequenceQueue14.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream23 = charSequenceQueue14.stream();
        charSequenceQueue14.clear();
        boolean boolean25 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        boolean boolean26 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue11.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue11);
        java.lang.Object[] objArray29 = charSequenceQueue1.toArray();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence31 = charSequenceQueue1.get((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (1) is outside the available range [0, 0)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceStream23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(objArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray29), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray29), "[]");
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.Object[] objArray58 = charSequenceQueue50.toArray();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue50.spliterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence32 = charSequenceQueue29.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue34 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean36 = charSequenceQueue34.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence37 = charSequenceQueue34.element();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceList40.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean55 = charSequenceQueue34.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean56 = charSequenceQueue29.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45);
        boolean boolean57 = charSequenceList20.remove((java.lang.Object) boolean56);
        boolean boolean58 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean59 = charSequenceQueue15.isEmpty();
        java.lang.Class<?> wildcardClass60 = charSequenceQueue15.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.lang.CharSequence charSequence37 = charSequenceQueue24.poll();
        java.lang.CharSequence charSequence39 = charSequenceQueue24.get((int) (short) 0);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray46 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47, charSequenceArray46);
        boolean boolean49 = charSequenceQueue47.isAtFullCapacity();
        boolean boolean50 = charSequenceQueue41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue47);
        boolean boolean52 = charSequenceQueue47.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        int int53 = charSequenceQueue47.size();
        boolean boolean54 = charSequenceQueue24.contains((java.lang.Object) charSequenceQueue47);
        int int55 = charSequenceQueue47.size();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + charSequence37 + "' != '" + "" + "'", charSequence37, "");
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(charSequenceArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 3 + "'", int53 == 3);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 3 + "'", int55 == 3);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue6 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceQueue6.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue6.spliterator();
        boolean boolean10 = charSequenceQueue6.add((java.lang.CharSequence) "");
        boolean boolean11 = charSequenceQueue6.isAtFullCapacity();
        java.lang.CharSequence charSequence12 = charSequenceQueue6.element();
        int int13 = charSequenceQueue6.size();
        int int14 = charSequenceQueue6.size();
        boolean boolean15 = charSequenceQueue6.isFull();
        boolean boolean16 = charSequenceQueue6.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream17 = charSequenceQueue6.parallelStream();
        boolean boolean18 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue6);
        charSequenceQueue1.clear();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator20 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceStream17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator20);
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        int int6 = charSequenceQueue1.maxSize();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor7 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence8 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        charSequenceQueue10.clear();
        boolean boolean15 = charSequenceQueue10.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        boolean boolean21 = charSequenceQueue10.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.CharSequence charSequence34 = charSequenceQueue30.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream35 = charSequenceQueue30.parallelStream();
        boolean boolean36 = charSequenceQueue10.contains((java.lang.Object) charSequenceStream35);
        java.lang.CharSequence charSequence37 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue10.parallelStream();
        boolean boolean39 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream38);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence42 = charSequenceQueue1.get((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (-1) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 52 + "'", int6 == 52);
        org.junit.Assert.assertNotNull(charSequenceItor7);
        org.junit.Assert.assertEquals("'" + charSequence8 + "' != '" + "" + "'", charSequence8, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceStream35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(charSequence37);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[[hi!], [hi!]]");
        boolean boolean13 = charSequenceQueue7.isEmpty();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean17 = charSequenceQueue15.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence18 = charSequenceQueue15.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue15.parallelStream();
        boolean boolean21 = charSequenceQueue15.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue15.element();
        boolean boolean24 = charSequenceQueue7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence[] charSequenceArray27 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList28 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList28, charSequenceArray27);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33, charSequenceArray32);
        boolean boolean35 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean36 = charSequenceList28.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        boolean boolean37 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue33.isAtFullCapacity();
        boolean boolean39 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue41.spliterator();
        java.lang.CharSequence charSequence43 = charSequenceQueue41.peek();
        boolean boolean44 = charSequenceQueue41.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream45 = charSequenceQueue41.stream();
        java.lang.CharSequence charSequence46 = charSequenceQueue41.poll();
        java.lang.String str47 = charSequenceQueue41.toString();
        boolean boolean48 = charSequenceQueue41.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream49 = charSequenceQueue41.parallelStream();
        boolean boolean50 = charSequenceQueue41.isAtFullCapacity();
        boolean boolean51 = charSequenceQueue33.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue41);
        java.lang.CharSequence charSequence53 = charSequenceQueue33.get((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence55 = charSequenceQueue33.get((int) '#');
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (35) is outside the available range [0, 2)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
        org.junit.Assert.assertNotNull(charSequenceStream19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertEquals("'" + charSequence23 + "' != '" + "" + "'", charSequence23, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(charSequenceArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertNull(charSequence43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceStream45);
        org.junit.Assert.assertNull(charSequence46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[]" + "'", str47, "[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(charSequenceStream49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        boolean boolean10 = charSequenceQueue1.add((java.lang.CharSequence) "[, hi!]");
        boolean boolean11 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue13 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean15 = charSequenceQueue13.offer((java.lang.CharSequence) "");
        boolean boolean17 = charSequenceQueue13.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean20 = charSequenceQueue13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue13.parallelStream();
        java.lang.CharSequence charSequence22 = charSequenceQueue13.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator23 = charSequenceQueue13.spliterator();
        java.lang.CharSequence charSequence24 = charSequenceQueue13.remove();
        boolean boolean25 = charSequenceQueue1.remove((java.lang.Object) charSequence24);
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator23);
        org.junit.Assert.assertEquals("'" + charSequence24 + "' != '" + "" + "'", charSequence24, "");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence charSequence42 = charSequenceQueue38.peek();
        boolean boolean43 = charSequenceQueue38.isFull();
        charSequenceQueue38.clear();
        int int45 = charSequenceQueue38.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence42 + "' != '" + "hi!" + "'", charSequence42, "hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 1 + "'", int45 == 1);
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor16 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence18 = charSequenceQueue1.get(0);
        java.lang.String[][][] strArray19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String[][][] strArray20 = charSequenceQueue1.toArray(strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(charSequenceItor16);
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "" + "'", charSequence18, "");
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        boolean boolean19 = charSequenceQueue10.isFull();
        java.lang.CharSequence charSequence20 = charSequenceQueue10.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean24 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        charSequenceQueue22.clear();
        java.lang.CharSequence charSequence26 = charSequenceQueue22.peek();
        int int27 = charSequenceQueue22.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue22.stream();
        boolean boolean29 = charSequenceQueue10.contains((java.lang.Object) charSequenceStream28);
        boolean boolean30 = charSequenceQueue10.isAtFullCapacity();
        java.lang.CharSequence charSequence31 = charSequenceQueue10.remove();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(charSequence26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "[hi!]", "[hi!]" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList10 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList10);
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence25 = charSequenceQueue21.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue21.parallelStream();
        boolean boolean27 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream26);
        java.lang.CharSequence charSequence28 = charSequenceQueue1.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream29 = charSequenceQueue1.parallelStream();
        int int30 = charSequenceQueue1.size();
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList33.contains(obj35);
        java.lang.String str37 = charSequenceList33.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue39 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean40 = charSequenceList33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue39);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean44 = charSequenceQueue42.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue42.element();
        java.lang.CharSequence[] charSequenceArray47 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList48 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList48, charSequenceArray47);
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList53 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53, charSequenceArray52);
        java.lang.CharSequence[] charSequenceArray57 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue58 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58, charSequenceArray57);
        boolean boolean60 = charSequenceQueue58.isAtFullCapacity();
        boolean boolean61 = charSequenceList53.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue58);
        boolean boolean62 = charSequenceList48.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        boolean boolean63 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList53);
        java.lang.CharSequence[] charSequenceArray65 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList66 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList66, charSequenceArray65);
        java.lang.Object obj68 = null;
        boolean boolean69 = charSequenceList66.contains(obj68);
        java.lang.String str70 = charSequenceList66.toString();
        java.lang.CharSequence[] charSequenceArray72 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList73 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73, charSequenceArray72);
        java.lang.Object obj75 = null;
        boolean boolean76 = charSequenceList73.contains(obj75);
        java.lang.String str77 = charSequenceList73.toString();
        boolean boolean78 = charSequenceList66.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue79 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList73);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream80 = charSequenceQueue79.stream();
        boolean boolean81 = charSequenceQueue42.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        java.lang.CharSequence charSequence82 = charSequenceQueue79.element();
        java.lang.CharSequence charSequence83 = charSequenceQueue79.peek();
        java.lang.String str84 = charSequenceQueue79.toString();
        boolean boolean85 = charSequenceList33.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        java.lang.CharSequence charSequence86 = charSequenceQueue79.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object> objQueue87 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.Object>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        java.lang.CharSequence charSequence88 = charSequenceQueue79.peek();
        boolean boolean89 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue90 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue79);
        java.lang.CharSequence charSequence91 = charSequenceQueue90.remove();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertNotNull(charSequenceStream29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!]" + "'", str37, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertNotNull(charSequenceArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(charSequenceArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(charSequenceArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[hi!]" + "'", str70, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "[hi!]" + "'", str77, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(charSequenceStream80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + charSequence82 + "' != '" + "hi!" + "'", charSequence82, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence83 + "' != '" + "hi!" + "'", charSequence83, "hi!");
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "[hi!]" + "'", str84, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertEquals("'" + charSequence86 + "' != '" + "hi!" + "'", charSequence86, "hi!");
        org.junit.Assert.assertEquals("'" + charSequence88 + "' != '" + "hi!" + "'", charSequence88, "hi!");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + charSequence91 + "' != '" + "hi!" + "'", charSequence91, "hi!");
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        int int14 = charSequenceQueue8.size();
        boolean boolean16 = charSequenceQueue8.offer((java.lang.CharSequence) "[, ]");
        java.lang.String str17 = charSequenceQueue8.toString();
        boolean boolean18 = charSequenceQueue8.isAtFullCapacity();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream19 = charSequenceQueue8.stream();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2 + "'", int14 == 2);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[, , [, ]]" + "'", str17, "[, , [, ]]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceStream19);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceStream9);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.peek();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.Object obj9 = null;
        boolean boolean10 = charSequenceList7.contains(obj9);
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceList13.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue19);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList30 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList30, charSequenceArray29);
        java.lang.Object obj32 = null;
        boolean boolean33 = charSequenceList30.contains(obj32);
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean43 = charSequenceList36.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean44 = charSequenceList30.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        boolean boolean45 = charSequenceQueue24.remove((java.lang.Object) charSequenceQueue42);
        boolean boolean46 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.lang.CharSequence charSequence50 = charSequenceQueue48.peek();
        boolean boolean51 = charSequenceQueue48.isFull();
        boolean boolean52 = charSequenceQueue42.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator55 = charSequenceQueue54.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator56 = charSequenceQueue54.spliterator();
        boolean boolean58 = charSequenceQueue54.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence59 = charSequenceQueue54.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream60 = charSequenceQueue54.parallelStream();
        boolean boolean61 = charSequenceQueue42.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.util.Collection<java.lang.CharSequence> charSequenceCollection62 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean63 = charSequenceQueue42.containsAll(charSequenceCollection62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNull(charSequence50);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator55);
        org.junit.Assert.assertNotNull(charSequenceSpliterator56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertEquals("'" + charSequence59 + "' != '" + "" + "'", charSequence59, "");
        org.junit.Assert.assertNotNull(charSequenceStream60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        boolean boolean4 = charSequenceQueue1.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream5 = charSequenceQueue1.stream();
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream7 = charSequenceQueue1.parallelStream();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue1.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(charSequenceStream5);
        org.junit.Assert.assertNull(charSequence6);
        org.junit.Assert.assertNotNull(charSequenceStream7);
        org.junit.Assert.assertNotNull(charSequenceStream8);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator27 = charSequenceQueue26.spliterator();
        java.lang.CharSequence charSequence28 = charSequenceQueue26.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        boolean boolean33 = charSequenceQueue26.contains((java.lang.Object) charSequenceQueue30);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor34 = charSequenceQueue26.iterator();
        boolean boolean35 = charSequenceQueue20.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean39 = charSequenceQueue37.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43, charSequenceArray42);
        boolean boolean45 = charSequenceQueue43.isAtFullCapacity();
        boolean boolean46 = charSequenceQueue37.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator49 = charSequenceQueue48.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue48.spliterator();
        boolean boolean52 = charSequenceQueue48.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence53 = charSequenceQueue48.poll();
        boolean boolean54 = charSequenceQueue43.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue48);
        boolean boolean55 = charSequenceQueue26.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence56 = charSequenceQueue43.poll();
        java.lang.CharSequence charSequence58 = charSequenceQueue43.get((int) (short) 0);
        boolean boolean59 = charSequenceQueue15.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.CharSequence charSequence60 = charSequenceQueue43.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue62 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean64 = charSequenceQueue62.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence65 = charSequenceQueue62.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream66 = charSequenceQueue62.parallelStream();
        java.lang.CharSequence[] charSequenceArray69 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList70 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList70, charSequenceArray69);
        java.lang.CharSequence[] charSequenceArray74 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue75 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75, charSequenceArray74);
        boolean boolean77 = charSequenceQueue75.isAtFullCapacity();
        boolean boolean78 = charSequenceList70.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean79 = charSequenceQueue75.isAtFullCapacity();
        int int80 = charSequenceQueue75.maxSize();
        boolean boolean81 = charSequenceQueue62.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue75);
        boolean boolean83 = charSequenceQueue62.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence84 = charSequenceQueue62.peek();
        java.lang.CharSequence charSequence85 = charSequenceQueue62.remove();
        boolean boolean87 = charSequenceQueue62.add((java.lang.CharSequence) "[, , , hi!]");
        boolean boolean88 = charSequenceQueue43.contains((java.lang.Object) boolean87);
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator27);
        org.junit.Assert.assertNull(charSequence28);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceItor34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator49);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertEquals("'" + charSequence53 + "' != '" + "" + "'", charSequence53, "");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + charSequence56 + "' != '" + "" + "'", charSequence56, "");
        org.junit.Assert.assertEquals("'" + charSequence58 + "' != '" + "" + "'", charSequence58, "");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertEquals("'" + charSequence60 + "' != '" + "" + "'", charSequence60, "");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertEquals("'" + charSequence65 + "' != '" + "" + "'", charSequence65, "");
        org.junit.Assert.assertNotNull(charSequenceStream66);
        org.junit.Assert.assertNotNull(charSequenceArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 32 + "'", int80 == 32);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertEquals("'" + charSequence84 + "' != '" + "" + "'", charSequence84, "");
        org.junit.Assert.assertEquals("'" + charSequence85 + "' != '" + "" + "'", charSequence85, "");
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence6 = charSequenceQueue1.poll();
        boolean boolean7 = charSequenceQueue1.isFull();
        charSequenceQueue1.clear();
        int int9 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceQueue11.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        int int21 = charSequenceQueue17.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream22 = charSequenceQueue17.stream();
        int int23 = charSequenceQueue17.maxSize();
        boolean boolean24 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean26 = charSequenceQueue1.add((java.lang.CharSequence) "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertEquals("'" + charSequence6 + "' != '" + "" + "'", charSequence6, "");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 32 + "'", int21 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 32 + "'", int23 == 32);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean19 = charSequenceQueue17.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean23 = charSequenceQueue21.offer((java.lang.CharSequence) "");
        boolean boolean25 = charSequenceQueue21.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue21.stream();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        boolean boolean41 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        boolean boolean47 = charSequenceQueue43.add((java.lang.CharSequence) "hi!");
        int int48 = charSequenceQueue43.maxSize();
        boolean boolean49 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue51 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean53 = charSequenceQueue51.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence54 = charSequenceQueue51.peek();
        boolean boolean56 = charSequenceQueue51.add((java.lang.CharSequence) "");
        boolean boolean57 = charSequenceList29.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue51);
        boolean boolean58 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue51);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream59 = charSequenceQueue21.stream();
        boolean boolean60 = charSequenceQueue17.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.Object[] objArray61 = charSequenceQueue21.toArray();
        boolean boolean62 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence63 = charSequenceQueue21.poll();
        java.lang.CharSequence charSequence64 = charSequenceQueue21.element();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 52 + "'", int48 == 52);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertEquals("'" + charSequence54 + "' != '" + "" + "'", charSequence54, "");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceStream59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[, hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + charSequence63 + "' != '" + "" + "'", charSequence63, "");
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "hi!" + "'", charSequence64, "hi!");
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        charSequenceQueue1.clear();
        boolean boolean6 = charSequenceQueue1.remove((java.lang.Object) (-1.0d));
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.peek();
        boolean boolean13 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.parallelStream();
        boolean boolean18 = charSequenceQueue15.contains((java.lang.Object) 1.0d);
        boolean boolean19 = charSequenceQueue15.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator22 = charSequenceQueue21.spliterator();
        java.lang.CharSequence charSequence23 = charSequenceQueue21.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        boolean boolean28 = charSequenceQueue21.contains((java.lang.Object) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue30.parallelStream();
        boolean boolean36 = charSequenceQueue30.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue30.spliterator();
        boolean boolean38 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        java.lang.CharSequence charSequence39 = charSequenceQueue30.poll();
        java.lang.CharSequence[] charSequenceArray41 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue42, charSequenceArray41);
        int int44 = charSequenceQueue42.maxSize();
        boolean boolean45 = charSequenceQueue42.isFull();
        java.lang.String str46 = charSequenceQueue42.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.util.Queue[] queueArray67 = new java.util.Queue[2];
        @SuppressWarnings("unchecked")
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray68 = (java.util.Queue<java.lang.CharSequence>[]) queueArray67;
        charSequenceQueueArray68[0] = charSequenceQueue42;
        charSequenceQueueArray68[1] = charSequenceQueue59;
        java.util.Queue<java.lang.CharSequence>[] charSequenceQueueArray73 = charSequenceQueue30.toArray(charSequenceQueueArray68);
        java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray74 = charSequenceQueue15.toArray((java.lang.Iterable<java.lang.CharSequence>[]) charSequenceQueueArray73);
        java.lang.Iterable<java.lang.CharSequence>[] charSequenceIterableArray75 = charSequenceQueue1.toArray(charSequenceIterableArray74);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream76 = charSequenceQueue1.parallelStream();
        boolean boolean77 = charSequenceQueue1.isAtFullCapacity();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator22);
        org.junit.Assert.assertNull(charSequence23);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertEquals("'" + charSequence39 + "' != '" + "" + "'", charSequence39, "");
        org.junit.Assert.assertNotNull(charSequenceArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 32 + "'", int44 == 32);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "[]" + "'", str46, "[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(queueArray67);
        org.junit.Assert.assertNotNull(charSequenceQueueArray68);
        org.junit.Assert.assertNotNull(charSequenceQueueArray73);
        org.junit.Assert.assertNotNull(charSequenceIterableArray74);
        org.junit.Assert.assertNotNull(charSequenceIterableArray75);
        org.junit.Assert.assertNotNull(charSequenceStream76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "", "[hi!]", "", "hi!" };
        java.lang.Comparable<java.lang.String>[] strComparableArray34 = charSequenceList25.toArray((java.lang.Comparable<java.lang.String>[]) strArray33);
        java.lang.String[] strArray35 = charSequenceQueue1.toArray(strArray33);
        java.lang.CharSequence charSequence36 = charSequenceQueue1.peek();
        boolean boolean38 = charSequenceQueue1.add((java.lang.CharSequence) "[, ]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator39 = charSequenceQueue1.spliterator();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strComparableArray34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator39);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.lang.CharSequence charSequence3 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        boolean boolean8 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue5);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence13 = charSequenceQueue10.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue10.parallelStream();
        boolean boolean16 = charSequenceQueue10.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue10.spliterator();
        boolean boolean18 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        java.lang.CharSequence charSequence19 = charSequenceQueue10.poll();
        int int20 = charSequenceQueue10.size();
        boolean boolean21 = charSequenceQueue10.isFull();
        boolean boolean23 = charSequenceQueue10.offer((java.lang.CharSequence) "[, [hi!]]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNull(charSequence3);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + charSequence13 + "' != '" + "" + "'", charSequence13, "");
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        boolean boolean7 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue1.spliterator();
        boolean boolean10 = charSequenceQueue1.offer((java.lang.CharSequence) "[hi!, hi!]");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>(5);
        int int13 = charSequenceQueue12.maxSize();
        java.lang.Comparable[][][][][] comparableArray15 = new java.lang.Comparable[0][][][][];
        @SuppressWarnings("unchecked")
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray16 = (java.lang.Comparable<java.lang.String>[][][][][]) comparableArray15;
        java.lang.Comparable<java.lang.String>[][][][][] strComparableArray17 = charSequenceQueue12.toArray(strComparableArray16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceQueue19.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isFull();
        java.lang.CharSequence charSequence31 = charSequenceQueue25.get(0);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        boolean boolean33 = charSequenceQueue25.isEmpty();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue25.parallelStream();
        boolean boolean35 = charSequenceQueue25.isAtFullCapacity();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue25.spliterator();
        boolean boolean37 = charSequenceQueue12.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.lang.reflect.GenericDeclaration[][][] genericDeclarationArray38 = new java.lang.reflect.GenericDeclaration[][][] {};
        java.lang.reflect.GenericDeclaration[][][] genericDeclarationArray39 = charSequenceQueue12.toArray(genericDeclarationArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Cloneable[][] cloneableArray40 = charSequenceQueue1.toArray((java.lang.Cloneable[][]) genericDeclarationArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayStoreException; message: null");
        } catch (java.lang.ArrayStoreException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 5 + "'", int13 == 5);
        org.junit.Assert.assertNotNull(comparableArray15);
        org.junit.Assert.assertNotNull(strComparableArray16);
        org.junit.Assert.assertNotNull(strComparableArray17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "" + "'", charSequence31, "");
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(genericDeclarationArray38);
        org.junit.Assert.assertNotNull(genericDeclarationArray39);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        java.lang.CharSequence charSequence17 = charSequenceQueue7.poll();
        boolean boolean18 = charSequenceQueue7.isEmpty();
        java.lang.CharSequence charSequence19 = charSequenceQueue7.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(charSequence19);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12, charSequenceArray11);
        boolean boolean14 = charSequenceQueue12.isAtFullCapacity();
        boolean boolean15 = charSequenceList7.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        boolean boolean16 = charSequenceList2.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceQueue25.isAtFullCapacity();
        int int30 = charSequenceQueue25.maxSize();
        boolean boolean31 = charSequenceList7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor32 = charSequenceQueue25.iterator();
        java.lang.Object[] objArray33 = charSequenceQueue25.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream34 = charSequenceQueue25.stream();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor35 = charSequenceQueue25.iterator();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 32 + "'", int30 == 32);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(charSequenceItor32);
        org.junit.Assert.assertNotNull(objArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray33), "[, ]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray33), "[, ]");
        org.junit.Assert.assertNotNull(charSequenceStream34);
        org.junit.Assert.assertNotNull(charSequenceItor35);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList8 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8, charSequenceArray7);
        java.lang.Object obj10 = null;
        boolean boolean11 = charSequenceList8.contains(obj10);
        java.lang.String str12 = charSequenceList8.toString();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.Object obj17 = null;
        boolean boolean18 = charSequenceList15.contains(obj17);
        java.lang.String str19 = charSequenceList15.toString();
        boolean boolean20 = charSequenceList8.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15);
        boolean boolean21 = charSequenceQueue3.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList8);
        boolean boolean22 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue3);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray29 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30, charSequenceArray29);
        boolean boolean32 = charSequenceQueue30.isAtFullCapacity();
        boolean boolean33 = charSequenceQueue24.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue30);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator36 = charSequenceQueue35.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue35.spliterator();
        boolean boolean39 = charSequenceQueue35.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence40 = charSequenceQueue35.poll();
        boolean boolean41 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        int int55 = charSequenceQueue50.maxSize();
        boolean boolean56 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        charSequenceQueue1.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor59 = charSequenceQueue1.iterator();
        boolean boolean60 = charSequenceQueue1.isFull();
        int int61 = charSequenceQueue1.size();
        boolean boolean62 = charSequenceQueue1.isEmpty();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[hi!]" + "'", str12, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[hi!]" + "'", str19, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(charSequenceArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator36);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertEquals("'" + charSequence40 + "' != '" + "" + "'", charSequence40, "");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 32 + "'", int55 == 32);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceItor59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator8 = charSequenceQueue7.spliterator();
        java.lang.CharSequence charSequence9 = charSequenceQueue7.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue11 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean13 = charSequenceQueue11.offer((java.lang.CharSequence) "");
        boolean boolean14 = charSequenceQueue7.contains((java.lang.Object) charSequenceQueue11);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor15 = charSequenceQueue7.iterator();
        boolean boolean16 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean20 = charSequenceQueue18.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray23 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24, charSequenceArray23);
        boolean boolean26 = charSequenceQueue24.isAtFullCapacity();
        boolean boolean27 = charSequenceQueue18.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator30 = charSequenceQueue29.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue29.spliterator();
        boolean boolean33 = charSequenceQueue29.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue29.poll();
        boolean boolean35 = charSequenceQueue24.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue29);
        boolean boolean36 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator37 = charSequenceQueue7.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream38 = charSequenceQueue7.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean42 = charSequenceQueue40.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean47 = charSequenceQueue40.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream48 = charSequenceQueue40.parallelStream();
        java.lang.CharSequence charSequence49 = charSequenceQueue40.peek();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue40.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue40.remove();
        boolean boolean53 = charSequenceQueue40.add((java.lang.CharSequence) "[]");
        boolean boolean54 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.CharSequence charSequence55 = charSequenceQueue40.remove();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator8);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceItor15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(charSequenceArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator30);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator37);
        org.junit.Assert.assertNotNull(charSequenceStream38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(charSequenceStream48);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "" + "'", charSequence49, "");
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + charSequence55 + "' != '" + "hi!" + "'", charSequence55, "hi!");
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        int int7 = charSequenceQueue1.maxSize();
        int int8 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean12 = charSequenceQueue10.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16, charSequenceArray15);
        boolean boolean18 = charSequenceQueue16.isAtFullCapacity();
        boolean boolean19 = charSequenceQueue10.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream20 = charSequenceQueue10.stream();
        boolean boolean21 = charSequenceQueue1.contains((java.lang.Object) charSequenceStream20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue23 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream24 = charSequenceQueue23.parallelStream();
        int int25 = charSequenceQueue23.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean29 = charSequenceQueue27.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray30 = charSequenceQueue27.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor31 = charSequenceQueue27.iterator();
        boolean boolean32 = charSequenceQueue23.remove((java.lang.Object) charSequenceQueue27);
        boolean boolean33 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue23);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceQueue23.remove(obj34);
        java.lang.CharSequence charSequence36 = charSequenceQueue23.poll();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.parallelStream();
        boolean boolean41 = charSequenceQueue38.contains((java.lang.Object) 1.0d);
        boolean boolean42 = charSequenceQueue38.isFull();
        boolean boolean43 = charSequenceQueue38.isFull();
        int int44 = charSequenceQueue38.maxSize();
        int int45 = charSequenceQueue38.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue47 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean49 = charSequenceQueue47.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray52 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue53 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53, charSequenceArray52);
        boolean boolean55 = charSequenceQueue53.isAtFullCapacity();
        boolean boolean56 = charSequenceQueue47.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue53);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream57 = charSequenceQueue47.stream();
        boolean boolean58 = charSequenceQueue38.contains((java.lang.Object) charSequenceStream57);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator59 = charSequenceQueue38.spliterator();
        int int60 = charSequenceQueue38.maxSize();
        boolean boolean61 = charSequenceQueue23.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        boolean boolean63 = charSequenceQueue23.offer((java.lang.CharSequence) "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 52 + "'", int7 == 52);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 52 + "'", int8 == 52);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceStream20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(charSequenceStream24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(objArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray30), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray30), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 52 + "'", int44 == 52);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 52 + "'", int45 == 52);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(charSequenceArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(charSequenceStream57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 52 + "'", int60 == 52);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        boolean boolean7 = charSequenceQueue2.add((java.lang.CharSequence) "[hi!]");
        boolean boolean8 = charSequenceQueue2.isFull();
        int int9 = charSequenceQueue2.maxSize();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue2.parallelStream();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 32 + "'", int9 == 32);
        org.junit.Assert.assertNotNull(charSequenceStream10);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        charSequenceQueue1.clear();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        charSequenceQueue1.clear();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(charSequence7);
        org.junit.Assert.assertNull(charSequence9);
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean14 = charSequenceQueue8.offer((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence15 = charSequenceQueue8.element();
        java.lang.Class<?> wildcardClass16 = charSequence15.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        boolean boolean12 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        java.lang.CharSequence charSequence13 = charSequenceQueue1.poll();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.Object obj18 = null;
        boolean boolean19 = charSequenceList16.contains(obj18);
        java.lang.String str20 = charSequenceList16.toString();
        java.lang.CharSequence[] charSequenceArray22 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList23 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23, charSequenceArray22);
        java.lang.Object obj25 = null;
        boolean boolean26 = charSequenceList23.contains(obj25);
        java.lang.String str27 = charSequenceList23.toString();
        boolean boolean28 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        boolean boolean30 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList23);
        java.lang.CharSequence charSequence31 = charSequenceQueue1.element();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(charSequence13);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[hi!]" + "'", str20, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[hi!]" + "'", str27, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + charSequence31 + "' != '" + "hi!" + "'", charSequence31, "hi!");
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        int int7 = charSequenceQueue1.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        boolean boolean13 = charSequenceQueue9.add((java.lang.CharSequence) "hi!");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue9.stream();
        boolean boolean15 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        java.lang.CharSequence charSequence16 = charSequenceQueue1.peek();
        java.lang.CharSequence charSequence17 = charSequenceQueue1.element();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream18 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue20 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream21 = charSequenceQueue20.parallelStream();
        boolean boolean23 = charSequenceQueue20.contains((java.lang.Object) 1.0d);
        boolean boolean24 = charSequenceQueue20.isFull();
        boolean boolean25 = charSequenceQueue20.isFull();
        int int26 = charSequenceQueue20.maxSize();
        int int27 = charSequenceQueue20.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue29.stream();
        boolean boolean40 = charSequenceQueue20.contains((java.lang.Object) charSequenceStream39);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue20.spliterator();
        int int42 = charSequenceQueue20.maxSize();
        boolean boolean43 = charSequenceQueue20.isEmpty();
        boolean boolean44 = charSequenceQueue20.isEmpty();
        boolean boolean45 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue20);
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + charSequence16 + "' != '" + "" + "'", charSequence16, "");
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertNotNull(charSequenceStream18);
        org.junit.Assert.assertNotNull(charSequenceStream21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 52 + "'", int26 == 52);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 52 + "'", int27 == 52);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 52 + "'", int42 == 52);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        java.lang.CharSequence[] charSequenceArray2 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList3 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList3, charSequenceArray2);
        java.lang.CharSequence[] charSequenceArray7 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8, charSequenceArray7);
        boolean boolean10 = charSequenceQueue8.isAtFullCapacity();
        boolean boolean11 = charSequenceList3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue8);
        boolean boolean12 = charSequenceQueue8.isAtFullCapacity();
        int int13 = charSequenceQueue8.maxSize();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.lang.CharSequence charSequence17 = charSequenceQueue15.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue19 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean21 = charSequenceQueue19.offer((java.lang.CharSequence) "");
        boolean boolean22 = charSequenceQueue15.contains((java.lang.Object) charSequenceQueue19);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        boolean boolean32 = charSequenceQueue15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean33 = charSequenceQueue24.isFull();
        java.lang.CharSequence charSequence34 = charSequenceQueue24.peek();
        int int35 = charSequenceQueue24.maxSize();
        boolean boolean36 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceQueue24);
        boolean boolean39 = charSequenceQueue24.offer((java.lang.CharSequence) "[]");
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator40 = charSequenceQueue24.spliterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream41 = charSequenceQueue24.stream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue42 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor43 = charSequenceQueue42.iterator();
        boolean boolean44 = charSequenceQueue24.contains((java.lang.Object) charSequenceItor43);
        org.junit.Assert.assertNotNull(charSequenceArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(charSequenceArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 32 + "'", int13 == 32);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNull(charSequence17);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 52 + "'", int35 == 52);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(charSequenceSpliterator40);
        org.junit.Assert.assertNotNull(charSequenceStream41);
        org.junit.Assert.assertNotNull(charSequenceItor43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        boolean boolean4 = charSequenceQueue1.contains((java.lang.Object) 1.0d);
        boolean boolean5 = charSequenceQueue1.isFull();
        boolean boolean6 = charSequenceQueue1.isFull();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator7 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean11 = charSequenceQueue9.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence12 = charSequenceQueue9.element();
        java.lang.CharSequence[] charSequenceArray14 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList15 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList15, charSequenceArray14);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25, charSequenceArray24);
        boolean boolean27 = charSequenceQueue25.isAtFullCapacity();
        boolean boolean28 = charSequenceList20.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean29 = charSequenceList15.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        boolean boolean30 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.lang.CharSequence[] charSequenceArray32 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList33 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList33, charSequenceArray32);
        java.lang.Object obj35 = null;
        boolean boolean36 = charSequenceList33.contains(obj35);
        java.lang.String str37 = charSequenceList33.toString();
        java.lang.CharSequence[] charSequenceArray39 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList40 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40, charSequenceArray39);
        java.lang.Object obj42 = null;
        boolean boolean43 = charSequenceList40.contains(obj42);
        java.lang.String str44 = charSequenceList40.toString();
        boolean boolean45 = charSequenceList33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList40);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue46.stream();
        boolean boolean48 = charSequenceQueue9.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        java.lang.CharSequence charSequence49 = charSequenceQueue46.element();
        charSequenceQueue46.clear();
        charSequenceQueue46.clear();
        boolean boolean52 = charSequenceQueue46.isEmpty();
        boolean boolean53 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        int int54 = charSequenceQueue1.size();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
        org.junit.Assert.assertNotNull(charSequenceArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[hi!]" + "'", str37, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[hi!]" + "'", str44, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + charSequence49 + "' != '" + "hi!" + "'", charSequence49, "hi!");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue4 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean6 = charSequenceQueue4.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray9 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue10 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10, charSequenceArray9);
        boolean boolean12 = charSequenceQueue10.isAtFullCapacity();
        boolean boolean13 = charSequenceQueue4.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue15.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator17 = charSequenceQueue15.spliterator();
        boolean boolean19 = charSequenceQueue15.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence20 = charSequenceQueue15.poll();
        boolean boolean21 = charSequenceQueue10.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue15);
        java.lang.CharSequence charSequence22 = charSequenceQueue10.remove();
        boolean boolean23 = charSequenceQueue10.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream26 = charSequenceQueue25.parallelStream();
        boolean boolean27 = charSequenceQueue10.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor28 = charSequenceQueue25.iterator();
        boolean boolean29 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        boolean boolean30 = charSequenceQueue1.isEmpty();
        boolean boolean31 = charSequenceQueue1.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        boolean boolean37 = charSequenceQueue33.add((java.lang.CharSequence) "hi!");
        java.lang.CharSequence charSequence38 = charSequenceQueue33.element();
        boolean boolean39 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue33);
        java.lang.String str40 = charSequenceQueue33.toString();
        charSequenceQueue33.clear();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(charSequenceArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertNotNull(charSequenceSpliterator17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertEquals("'" + charSequence20 + "' != '" + "" + "'", charSequence20, "");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + charSequence22 + "' != '" + "" + "'", charSequence22, "");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(charSequenceStream26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(charSequenceItor28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertEquals("'" + charSequence38 + "' != '" + "" + "'", charSequence38, "");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[, hi!]" + "'", str40, "[, hi!]");
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream2 = charSequenceQueue1.parallelStream();
        int int3 = charSequenceQueue1.size();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean7 = charSequenceQueue5.offer((java.lang.CharSequence) "");
        java.lang.Object[] objArray8 = charSequenceQueue5.toArray();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor9 = charSequenceQueue5.iterator();
        boolean boolean10 = charSequenceQueue1.remove((java.lang.Object) charSequenceQueue5);
        int int11 = charSequenceQueue5.size();
        java.lang.CharSequence charSequence12 = charSequenceQueue5.peek();
        org.junit.Assert.assertNotNull(charSequenceStream2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(objArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray8), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray8), "[]");
        org.junit.Assert.assertNotNull(charSequenceItor9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertEquals("'" + charSequence12 + "' != '" + "" + "'", charSequence12, "");
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue15 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream16 = charSequenceQueue15.stream();
        java.lang.String str17 = charSequenceQueue15.toString();
        java.lang.CharSequence charSequence18 = charSequenceQueue15.element();
        int int19 = charSequenceQueue15.maxSize();
        java.lang.Class<?> wildcardClass20 = charSequenceQueue15.getClass();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceStream16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence18 + "' != '" + "hi!" + "'", charSequence18, "hi!");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.element();
        int int8 = charSequenceQueue1.size();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream9 = charSequenceQueue1.stream();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator10 = charSequenceQueue1.spliterator();
        boolean boolean11 = charSequenceQueue1.isFull();
        boolean boolean12 = charSequenceQueue1.isEmpty();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor13 = charSequenceQueue1.iterator();
        java.lang.CharSequence charSequence14 = charSequenceQueue1.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue22 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22, charSequenceArray21);
        boolean boolean24 = charSequenceQueue22.isAtFullCapacity();
        boolean boolean25 = charSequenceQueue16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue22);
        boolean boolean27 = charSequenceQueue22.offer((java.lang.CharSequence) "[hi!]");
        java.lang.CharSequence charSequence28 = charSequenceQueue22.remove();
        boolean boolean30 = charSequenceQueue22.offer((java.lang.CharSequence) "");
        charSequenceQueue22.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue33 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean35 = charSequenceQueue33.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence36 = charSequenceQueue33.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean40 = charSequenceQueue38.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        java.lang.CharSequence[] charSequenceArray43 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList44 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList44, charSequenceArray43);
        java.lang.CharSequence[] charSequenceArray48 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList49 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49, charSequenceArray48);
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceList49.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        boolean boolean58 = charSequenceList44.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean59 = charSequenceQueue38.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        boolean boolean60 = charSequenceQueue33.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList49);
        java.lang.Object[] objArray61 = charSequenceQueue33.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue63 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator64 = charSequenceQueue63.spliterator();
        java.lang.CharSequence charSequence65 = charSequenceQueue63.peek();
        boolean boolean66 = charSequenceQueue63.isFull();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream67 = charSequenceQueue63.stream();
        boolean boolean68 = charSequenceQueue33.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.lang.Object[] objArray69 = charSequenceQueue63.toArray();
        boolean boolean70 = charSequenceQueue22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        boolean boolean71 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue63);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor72 = charSequenceQueue1.iterator();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNotNull(charSequenceStream9);
        org.junit.Assert.assertNotNull(charSequenceSpliterator10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceItor13);
        org.junit.Assert.assertEquals("'" + charSequence14 + "' != '" + "" + "'", charSequence14, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertEquals("'" + charSequence36 + "' != '" + "" + "'", charSequence36, "");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "" + "'", charSequence41, "");
        org.junit.Assert.assertNotNull(charSequenceArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(charSequenceArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(objArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray61), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray61), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator64);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(charSequenceStream67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(objArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray69), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray69), "[]");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(charSequenceItor72);
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue3 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean5 = charSequenceQueue3.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue9 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9, charSequenceArray8);
        boolean boolean11 = charSequenceQueue9.isAtFullCapacity();
        boolean boolean12 = charSequenceQueue3.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue14 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue14.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator16 = charSequenceQueue14.spliterator();
        boolean boolean18 = charSequenceQueue14.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence19 = charSequenceQueue14.poll();
        boolean boolean20 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue14);
        java.lang.CharSequence charSequence21 = charSequenceQueue9.remove();
        boolean boolean22 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue9);
        boolean boolean23 = charSequenceQueue9.isAtFullCapacity();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue25 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean27 = charSequenceQueue25.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence28 = charSequenceQueue25.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue30 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean32 = charSequenceQueue30.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence33 = charSequenceQueue30.element();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.CharSequence[] charSequenceArray40 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList41 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41, charSequenceArray40);
        java.lang.CharSequence[] charSequenceArray45 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue46 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46, charSequenceArray45);
        boolean boolean48 = charSequenceQueue46.isAtFullCapacity();
        boolean boolean49 = charSequenceList41.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue46);
        boolean boolean50 = charSequenceList36.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean51 = charSequenceQueue30.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        boolean boolean52 = charSequenceQueue25.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList41);
        java.lang.Object[] objArray53 = charSequenceQueue25.toArray();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream54 = charSequenceQueue25.parallelStream();
        charSequenceQueue25.clear();
        java.lang.String str56 = charSequenceQueue25.toString();
        boolean boolean57 = charSequenceQueue9.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue25);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        boolean boolean64 = charSequenceQueue59.isAtFullCapacity();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor65 = charSequenceQueue59.iterator();
        java.lang.Object[] objArray66 = charSequenceQueue59.toArray();
        boolean boolean67 = charSequenceQueue59.isAtFullCapacity();
        java.lang.CharSequence charSequence69 = charSequenceQueue59.get((int) (byte) 0);
        boolean boolean70 = charSequenceQueue25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        java.lang.Object[] objArray71 = charSequenceQueue59.toArray();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertNotNull(charSequenceSpliterator16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertEquals("'" + charSequence19 + "' != '" + "" + "'", charSequence19, "");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + charSequence21 + "' != '" + "" + "'", charSequence21, "");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + charSequence33 + "' != '" + "" + "'", charSequence33, "");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(charSequenceArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(charSequenceArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[]");
        org.junit.Assert.assertNotNull(charSequenceStream54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "[]" + "'", str56, "[]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(charSequenceItor65);
        org.junit.Assert.assertNotNull(objArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray66), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray66), "[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(objArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray71), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray71), "[]");
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.GenericDeclaration[][]> genericDeclarationArrayQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.reflect.GenericDeclaration[][]>((int) (byte) 10);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue12 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator13 = charSequenceQueue12.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator14 = charSequenceQueue12.spliterator();
        boolean boolean16 = charSequenceQueue12.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence17 = charSequenceQueue12.poll();
        boolean boolean18 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue12);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.CharSequence[] charSequenceArray26 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue27 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27, charSequenceArray26);
        boolean boolean29 = charSequenceQueue27.isAtFullCapacity();
        boolean boolean30 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        boolean boolean31 = charSequenceQueue27.isAtFullCapacity();
        int int32 = charSequenceQueue27.maxSize();
        boolean boolean33 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue27);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence36 = charSequenceQueue35.peek();
        boolean boolean37 = charSequenceQueue7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue7.spliterator();
        boolean boolean39 = charSequenceQueue7.isEmpty();
        java.lang.CharSequence charSequence40 = charSequenceQueue7.peek();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator13);
        org.junit.Assert.assertNotNull(charSequenceSpliterator14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertEquals("'" + charSequence17 + "' != '" + "" + "'", charSequence17, "");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(charSequenceArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 32 + "'", int32 == 32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNull(charSequence36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNull(charSequence40);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "hi!");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean8 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        boolean boolean9 = charSequenceQueue1.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        boolean boolean25 = charSequenceList13.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList20);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream27 = charSequenceQueue26.stream();
        java.lang.String str28 = charSequenceQueue26.toString();
        java.lang.CharSequence charSequence29 = charSequenceQueue26.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream32 = charSequenceQueue31.parallelStream();
        boolean boolean34 = charSequenceQueue31.contains((java.lang.Object) 1.0d);
        boolean boolean35 = charSequenceQueue31.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue37 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator38 = charSequenceQueue37.spliterator();
        java.lang.CharSequence charSequence39 = charSequenceQueue37.peek();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue41 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean43 = charSequenceQueue41.offer((java.lang.CharSequence) "");
        boolean boolean44 = charSequenceQueue37.contains((java.lang.Object) charSequenceQueue41);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor45 = charSequenceQueue37.iterator();
        boolean boolean46 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue37);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue48 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceQueue48.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray53 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue54 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54, charSequenceArray53);
        boolean boolean56 = charSequenceQueue54.isAtFullCapacity();
        boolean boolean57 = charSequenceQueue48.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue59 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator60 = charSequenceQueue59.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator61 = charSequenceQueue59.spliterator();
        boolean boolean63 = charSequenceQueue59.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence64 = charSequenceQueue59.poll();
        boolean boolean65 = charSequenceQueue54.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue59);
        boolean boolean66 = charSequenceQueue37.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.CharSequence charSequence67 = charSequenceQueue54.poll();
        java.lang.CharSequence charSequence69 = charSequenceQueue54.get((int) (short) 0);
        boolean boolean70 = charSequenceQueue26.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue54);
        java.lang.CharSequence charSequence71 = charSequenceQueue26.poll();
        boolean boolean72 = charSequenceQueue1.contains((java.lang.Object) charSequenceQueue26);
        java.lang.Object[] objArray73 = charSequenceQueue1.toArray();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(charSequenceStream27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[hi!]" + "'", str28, "[hi!]");
        org.junit.Assert.assertEquals("'" + charSequence29 + "' != '" + "hi!" + "'", charSequence29, "hi!");
        org.junit.Assert.assertNotNull(charSequenceStream32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator38);
        org.junit.Assert.assertNull(charSequence39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(charSequenceItor45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(charSequenceArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator60);
        org.junit.Assert.assertNotNull(charSequenceSpliterator61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertEquals("'" + charSequence64 + "' != '" + "" + "'", charSequence64, "");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + charSequence67 + "' != '" + "" + "'", charSequence67, "");
        org.junit.Assert.assertEquals("'" + charSequence69 + "' != '" + "" + "'", charSequence69, "");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(charSequence71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(objArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray73), "[, hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray73), "[, hi!]");
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue5 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean9 = charSequenceQueue7.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.Object obj14 = null;
        boolean boolean15 = charSequenceList12.contains(obj14);
        java.lang.String str16 = charSequenceList12.toString();
        java.lang.CharSequence[] charSequenceArray18 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList19 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19, charSequenceArray18);
        java.lang.Object obj21 = null;
        boolean boolean22 = charSequenceList19.contains(obj21);
        java.lang.String str23 = charSequenceList19.toString();
        boolean boolean24 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList19);
        boolean boolean25 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean26 = charSequenceQueue5.remove((java.lang.Object) charSequenceQueue7);
        boolean boolean27 = charSequenceQueue1.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.lang.CharSequence charSequence28 = charSequenceQueue7.remove();
        java.lang.String str29 = charSequenceQueue7.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor30 = charSequenceQueue7.iterator();
        int int31 = charSequenceQueue7.maxSize();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[hi!]" + "'", str16, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[hi!]" + "'", str23, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertEquals("'" + charSequence28 + "' != '" + "" + "'", charSequence28, "");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[]" + "'", str29, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10 + "'", int31 == 10);
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator12 = charSequenceQueue7.spliterator();
        java.lang.CharSequence[] charSequenceArray15 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList16 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList16, charSequenceArray15);
        java.lang.CharSequence[] charSequenceArray20 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue21 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21, charSequenceArray20);
        boolean boolean23 = charSequenceQueue21.isAtFullCapacity();
        boolean boolean24 = charSequenceList16.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        java.lang.CharSequence charSequence25 = charSequenceQueue21.poll();
        boolean boolean26 = charSequenceQueue21.isAtFullCapacity();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        java.lang.CharSequence[] charSequenceArray35 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList36 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36, charSequenceArray35);
        java.lang.Object obj38 = null;
        boolean boolean39 = charSequenceList36.contains(obj38);
        java.lang.String str40 = charSequenceList36.toString();
        boolean boolean41 = charSequenceList29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.CharSequence[] charSequenceArray44 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList45 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList45, charSequenceArray44);
        java.lang.CharSequence[] charSequenceArray49 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50, charSequenceArray49);
        boolean boolean52 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean53 = charSequenceList45.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean54 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean55 = charSequenceQueue50.isAtFullCapacity();
        boolean boolean56 = charSequenceList36.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean57 = charSequenceQueue21.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList36);
        java.lang.Object[] objArray58 = charSequenceQueue21.toArray();
        boolean boolean59 = charSequenceQueue7.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue21);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean63 = charSequenceQueue61.offer((java.lang.CharSequence) "");
        charSequenceQueue61.clear();
        java.lang.CharSequence charSequence65 = charSequenceQueue61.poll();
        boolean boolean66 = charSequenceQueue61.isAtFullCapacity();
        java.lang.CharSequence charSequence67 = charSequenceQueue61.poll();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor68 = charSequenceQueue61.iterator();
        charSequenceQueue61.clear();
        boolean boolean70 = charSequenceQueue21.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue72 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator73 = charSequenceQueue72.spliterator();
        java.lang.CharSequence charSequence74 = charSequenceQueue72.peek();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor75 = charSequenceQueue72.iterator();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue77 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean79 = charSequenceQueue77.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence80 = charSequenceQueue77.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream81 = charSequenceQueue77.parallelStream();
        java.lang.CharSequence[] charSequenceArray84 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList85 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList85, charSequenceArray84);
        java.lang.CharSequence[] charSequenceArray89 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue90 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90, charSequenceArray89);
        boolean boolean92 = charSequenceQueue90.isAtFullCapacity();
        boolean boolean93 = charSequenceList85.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        boolean boolean94 = charSequenceQueue90.isAtFullCapacity();
        int int95 = charSequenceQueue90.maxSize();
        boolean boolean96 = charSequenceQueue77.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        boolean boolean97 = charSequenceQueue72.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream98 = charSequenceQueue90.parallelStream();
        boolean boolean99 = charSequenceQueue21.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue90);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertNotNull(charSequenceSpliterator12);
        org.junit.Assert.assertNotNull(charSequenceArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(charSequenceArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertEquals("'" + charSequence25 + "' != '" + "" + "'", charSequence25, "");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[hi!]" + "'", str40, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(charSequenceArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(charSequenceArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(objArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray58), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray58), "[]");
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(charSequence65);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(charSequence67);
        org.junit.Assert.assertNotNull(charSequenceItor68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator73);
        org.junit.Assert.assertNull(charSequence74);
        org.junit.Assert.assertNotNull(charSequenceItor75);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + charSequence80 + "' != '" + "" + "'", charSequence80, "");
        org.junit.Assert.assertNotNull(charSequenceStream81);
        org.junit.Assert.assertNotNull(charSequenceArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(charSequenceArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 32 + "'", int95 == 32);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertNotNull(charSequenceStream98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + true + "'", boolean99 == true);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList2 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList2, charSequenceArray1);
        java.lang.Object obj4 = null;
        boolean boolean5 = charSequenceList2.contains(obj4);
        java.lang.String str6 = charSequenceList2.toString();
        java.lang.CharSequence[] charSequenceArray8 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList9 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9, charSequenceArray8);
        java.lang.Object obj11 = null;
        boolean boolean12 = charSequenceList9.contains(obj11);
        java.lang.String str13 = charSequenceList9.toString();
        boolean boolean14 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList9);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue16 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean18 = charSequenceQueue16.offer((java.lang.CharSequence) "");
        boolean boolean20 = charSequenceQueue16.add((java.lang.CharSequence) "hi!");
        int int21 = charSequenceQueue16.maxSize();
        boolean boolean22 = charSequenceList2.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue16);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue24 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean26 = charSequenceQueue24.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence27 = charSequenceQueue24.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream28 = charSequenceQueue24.parallelStream();
        boolean boolean30 = charSequenceQueue24.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator31 = charSequenceQueue24.spliterator();
        java.lang.CharSequence charSequence32 = charSequenceQueue24.element();
        boolean boolean33 = charSequenceList2.remove((java.lang.Object) charSequenceQueue24);
        boolean boolean34 = charSequenceQueue24.isFull();
        int int35 = charSequenceQueue24.size();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.CharSequence charSequence37 = charSequenceQueue24.get((int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.util.NoSuchElementException; message: The specified index (10) is outside the available range [0, 1)");
        } catch (java.util.NoSuchElementException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[hi!]" + "'", str6, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[hi!]" + "'", str13, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 52 + "'", int21 == 52);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertEquals("'" + charSequence27 + "' != '" + "" + "'", charSequence27, "");
        org.junit.Assert.assertNotNull(charSequenceStream28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator31);
        org.junit.Assert.assertEquals("'" + charSequence32 + "' != '" + "" + "'", charSequence32, "");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 1 + "'", int35 == 1);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.String str4 = charSequenceQueue1.toString();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor5 = charSequenceQueue1.iterator();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream6 = charSequenceQueue1.parallelStream();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue8 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean10 = charSequenceQueue8.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence11 = charSequenceQueue8.peek();
        java.lang.CharSequence[] charSequenceArray13 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList14 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList14, charSequenceArray13);
        java.lang.Object obj16 = null;
        boolean boolean17 = charSequenceList14.contains(obj16);
        java.lang.CharSequence[] charSequenceArray19 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList20 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList20, charSequenceArray19);
        java.lang.Object obj22 = null;
        boolean boolean23 = charSequenceList20.contains(obj22);
        java.lang.String str24 = charSequenceList20.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue26 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean27 = charSequenceList20.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean28 = charSequenceList14.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue26);
        boolean boolean29 = charSequenceQueue8.remove((java.lang.Object) charSequenceQueue26);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue31 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean33 = charSequenceQueue31.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence34 = charSequenceQueue31.peek();
        java.lang.CharSequence[] charSequenceArray36 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList37 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList37, charSequenceArray36);
        java.lang.Object obj39 = null;
        boolean boolean40 = charSequenceList37.contains(obj39);
        java.lang.CharSequence[] charSequenceArray42 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList43 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList43, charSequenceArray42);
        java.lang.Object obj45 = null;
        boolean boolean46 = charSequenceList43.contains(obj45);
        java.lang.String str47 = charSequenceList43.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue49 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean50 = charSequenceList43.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean51 = charSequenceList37.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean52 = charSequenceQueue31.remove((java.lang.Object) charSequenceQueue49);
        boolean boolean53 = charSequenceQueue8.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue49);
        boolean boolean54 = charSequenceQueue1.remove((java.lang.Object) boolean53);
        charSequenceQueue1.clear();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "[]" + "'", str4, "[]");
        org.junit.Assert.assertNotNull(charSequenceItor5);
        org.junit.Assert.assertNotNull(charSequenceStream6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertEquals("'" + charSequence11 + "' != '" + "" + "'", charSequence11, "");
        org.junit.Assert.assertNotNull(charSequenceArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(charSequenceArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[hi!]" + "'", str24, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertEquals("'" + charSequence34 + "' != '" + "" + "'", charSequence34, "");
        org.junit.Assert.assertNotNull(charSequenceArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(charSequenceArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!]" + "'", str47, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray5 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList6 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6, charSequenceArray5);
        java.lang.Object obj8 = null;
        boolean boolean9 = charSequenceList6.contains(obj8);
        java.lang.String str10 = charSequenceList6.toString();
        java.lang.CharSequence[] charSequenceArray12 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList13 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13, charSequenceArray12);
        java.lang.Object obj15 = null;
        boolean boolean16 = charSequenceList13.contains(obj15);
        java.lang.String str17 = charSequenceList13.toString();
        boolean boolean18 = charSequenceList6.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList13);
        boolean boolean19 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList6);
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        boolean boolean27 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue29 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean31 = charSequenceQueue29.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray34 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue35 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35, charSequenceArray34);
        boolean boolean37 = charSequenceQueue35.isAtFullCapacity();
        boolean boolean38 = charSequenceQueue29.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue35);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue40 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator41 = charSequenceQueue40.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator42 = charSequenceQueue40.spliterator();
        boolean boolean44 = charSequenceQueue40.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence45 = charSequenceQueue40.poll();
        boolean boolean46 = charSequenceQueue35.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue40);
        java.lang.CharSequence charSequence47 = charSequenceQueue35.remove();
        boolean boolean48 = charSequenceQueue35.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue50 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream51 = charSequenceQueue50.parallelStream();
        boolean boolean52 = charSequenceQueue35.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        boolean boolean53 = charSequenceList22.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue50);
        java.lang.String str54 = charSequenceQueue50.toString();
        boolean boolean55 = charSequenceQueue50.isEmpty();
        charSequenceQueue50.clear();
        java.util.Iterator<java.lang.CharSequence> charSequenceItor57 = charSequenceQueue50.iterator();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[hi!]" + "'", str10, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[hi!]" + "'", str17, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(charSequenceArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator41);
        org.junit.Assert.assertNotNull(charSequenceSpliterator42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertEquals("'" + charSequence45 + "' != '" + "" + "'", charSequence45, "");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(charSequenceStream51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[]" + "'", str54, "[]");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(charSequenceItor57);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7, charSequenceArray6);
        boolean boolean9 = charSequenceQueue7.isAtFullCapacity();
        boolean boolean10 = charSequenceQueue1.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue7);
        java.util.Iterator<java.lang.CharSequence> charSequenceItor11 = charSequenceQueue7.iterator();
        boolean boolean13 = charSequenceQueue7.add((java.lang.CharSequence) "");
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream14 = charSequenceQueue7.stream();
        java.lang.CharSequence charSequence15 = charSequenceQueue7.remove();
        charSequenceQueue7.clear();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue18 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.lang.CharSequence charSequence19 = charSequenceQueue18.peek();
        java.lang.CharSequence[] charSequenceArray21 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList22 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList22, charSequenceArray21);
        java.lang.Object obj24 = null;
        boolean boolean25 = charSequenceList22.contains(obj24);
        java.lang.String str26 = charSequenceList22.toString();
        java.lang.CharSequence[] charSequenceArray28 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList29 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29, charSequenceArray28);
        java.lang.Object obj31 = null;
        boolean boolean32 = charSequenceList29.contains(obj31);
        java.lang.String str33 = charSequenceList29.toString();
        boolean boolean34 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList29);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue36 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean38 = charSequenceQueue36.offer((java.lang.CharSequence) "");
        boolean boolean40 = charSequenceQueue36.add((java.lang.CharSequence) "hi!");
        int int41 = charSequenceQueue36.maxSize();
        boolean boolean42 = charSequenceList22.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue36);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue44 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean46 = charSequenceQueue44.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence47 = charSequenceQueue44.peek();
        boolean boolean49 = charSequenceQueue44.add((java.lang.CharSequence) "");
        boolean boolean50 = charSequenceList22.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue44);
        java.lang.CharSequence charSequence51 = charSequenceQueue44.peek();
        boolean boolean52 = charSequenceQueue18.contains((java.lang.Object) charSequenceQueue44);
        java.lang.CharSequence[] charSequenceArray54 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList55 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList55, charSequenceArray54);
        java.lang.Object obj57 = null;
        boolean boolean58 = charSequenceList55.contains(obj57);
        java.lang.String str59 = charSequenceList55.toString();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue61 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        boolean boolean62 = charSequenceList55.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue61);
        java.lang.Object[] objArray63 = charSequenceQueue61.toArray();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue65 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator66 = charSequenceQueue65.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator67 = charSequenceQueue65.spliterator();
        boolean boolean69 = charSequenceQueue65.add((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence70 = charSequenceQueue65.poll();
        boolean boolean72 = charSequenceQueue65.add((java.lang.CharSequence) "");
        charSequenceQueue65.clear();
        boolean boolean74 = charSequenceQueue61.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue65);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue76 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) ' ');
        java.lang.CharSequence charSequence77 = charSequenceQueue76.peek();
        java.lang.Object[] objArray78 = charSequenceQueue76.toArray();
        boolean boolean79 = charSequenceQueue65.remove((java.lang.Object) charSequenceQueue76);
        boolean boolean80 = charSequenceQueue44.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        boolean boolean81 = charSequenceQueue7.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue76);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(charSequenceItor11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceStream14);
        org.junit.Assert.assertEquals("'" + charSequence15 + "' != '" + "" + "'", charSequence15, "");
        org.junit.Assert.assertNull(charSequence19);
        org.junit.Assert.assertNotNull(charSequenceArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[hi!]" + "'", str26, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[hi!]" + "'", str33, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 52 + "'", int41 == 52);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + charSequence47 + "' != '" + "" + "'", charSequence47, "");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(charSequenceArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[hi!]" + "'", str59, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(objArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray63), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray63), "[]");
        org.junit.Assert.assertNotNull(charSequenceSpliterator66);
        org.junit.Assert.assertNotNull(charSequenceSpliterator67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertEquals("'" + charSequence70 + "' != '" + "" + "'", charSequence70, "");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(charSequence77);
        org.junit.Assert.assertNotNull(objArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray78), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray78), "[]");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) (short) 10);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator2 = charSequenceQueue1.spliterator();
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator3 = charSequenceQueue1.spliterator();
        boolean boolean5 = charSequenceQueue1.add((java.lang.CharSequence) "");
        boolean boolean6 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence7 = charSequenceQueue1.poll();
        boolean boolean8 = charSequenceQueue1.isAtFullCapacity();
        java.lang.CharSequence charSequence9 = charSequenceQueue1.poll();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream10 = charSequenceQueue1.stream();
        java.lang.Object[] objArray11 = charSequenceQueue1.toArray();
        org.junit.Assert.assertNotNull(charSequenceSpliterator2);
        org.junit.Assert.assertNotNull(charSequenceSpliterator3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + true + "'", boolean5 == true);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + charSequence7 + "' != '" + "" + "'", charSequence7, "");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(charSequence9);
        org.junit.Assert.assertNotNull(charSequenceStream10);
        org.junit.Assert.assertNotNull(objArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray11), "[]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray11), "[]");
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        java.lang.CharSequence[] charSequenceArray1 = new java.lang.CharSequence[] { "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue2 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean3 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue2, charSequenceArray1);
        int int4 = charSequenceQueue2.maxSize();
        boolean boolean5 = charSequenceQueue2.isFull();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue7 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream8 = charSequenceQueue7.parallelStream();
        boolean boolean10 = charSequenceQueue7.contains((java.lang.Object) 1.0d);
        boolean boolean12 = charSequenceQueue7.offer((java.lang.CharSequence) "[hi!]");
        java.lang.Class<?> wildcardClass13 = charSequenceQueue7.getClass();
        boolean boolean14 = charSequenceQueue2.remove((java.lang.Object) charSequenceQueue7);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator15 = charSequenceQueue2.spliterator();
        int int16 = charSequenceQueue2.size();
        org.junit.Assert.assertNotNull(charSequenceArray1);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 32 + "'", int4 == 32);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(charSequenceStream8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue1 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean3 = charSequenceQueue1.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence4 = charSequenceQueue1.element();
        java.lang.CharSequence[] charSequenceArray6 = new java.lang.CharSequence[] { "" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList7 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList7, charSequenceArray6);
        java.lang.CharSequence[] charSequenceArray11 = new java.lang.CharSequence[] { "hi!", "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList12 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12, charSequenceArray11);
        java.lang.CharSequence[] charSequenceArray16 = new java.lang.CharSequence[] { "", "" };
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue17 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17, charSequenceArray16);
        boolean boolean19 = charSequenceQueue17.isAtFullCapacity();
        boolean boolean20 = charSequenceList12.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue17);
        boolean boolean21 = charSequenceList7.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        boolean boolean22 = charSequenceQueue1.removeAll((java.util.Collection<java.lang.CharSequence>) charSequenceList12);
        java.lang.CharSequence[] charSequenceArray24 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList25 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList25, charSequenceArray24);
        java.lang.Object obj27 = null;
        boolean boolean28 = charSequenceList25.contains(obj27);
        java.lang.String str29 = charSequenceList25.toString();
        java.lang.CharSequence[] charSequenceArray31 = new java.lang.CharSequence[] { "hi!" };
        java.util.ArrayList<java.lang.CharSequence> charSequenceList32 = new java.util.ArrayList<java.lang.CharSequence>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32, charSequenceArray31);
        java.lang.Object obj34 = null;
        boolean boolean35 = charSequenceList32.contains(obj34);
        java.lang.String str36 = charSequenceList32.toString();
        boolean boolean37 = charSequenceList25.retainAll((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue38 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((java.util.Collection<java.lang.CharSequence>) charSequenceList32);
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream39 = charSequenceQueue38.stream();
        boolean boolean40 = charSequenceQueue1.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue38);
        java.lang.CharSequence charSequence41 = charSequenceQueue38.element();
        org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence> charSequenceQueue43 = new org.apache.commons.collections4.queue.CircularFifoQueue<java.lang.CharSequence>((int) '4');
        boolean boolean45 = charSequenceQueue43.offer((java.lang.CharSequence) "");
        java.lang.CharSequence charSequence46 = charSequenceQueue43.peek();
        java.util.stream.Stream<java.lang.CharSequence> charSequenceStream47 = charSequenceQueue43.parallelStream();
        boolean boolean49 = charSequenceQueue43.contains((java.lang.Object) (short) 100);
        java.util.Spliterator<java.lang.CharSequence> charSequenceSpliterator50 = charSequenceQueue43.spliterator();
        java.lang.CharSequence charSequence51 = charSequenceQueue43.element();
        boolean boolean52 = charSequenceQueue38.containsAll((java.util.Collection<java.lang.CharSequence>) charSequenceQueue43);
        java.lang.Object[] objArray53 = charSequenceQueue38.toArray();
        boolean boolean54 = charSequenceQueue38.isAtFullCapacity();
        java.lang.String str55 = charSequenceQueue38.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        org.junit.Assert.assertEquals("'" + charSequence4 + "' != '" + "" + "'", charSequence4, "");
        org.junit.Assert.assertNotNull(charSequenceArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(charSequenceArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(charSequenceArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(charSequenceArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[hi!]" + "'", str29, "[hi!]");
        org.junit.Assert.assertNotNull(charSequenceArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[hi!]" + "'", str36, "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(charSequenceStream39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + charSequence41 + "' != '" + "hi!" + "'", charSequence41, "hi!");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertEquals("'" + charSequence46 + "' != '" + "" + "'", charSequence46, "");
        org.junit.Assert.assertNotNull(charSequenceStream47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(charSequenceSpliterator50);
        org.junit.Assert.assertEquals("'" + charSequence51 + "' != '" + "" + "'", charSequence51, "");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(objArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.deepToString(objArray53), "[hi!]");
        org.junit.Assert.assertEquals(java.util.Arrays.toString(objArray53), "[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[hi!]" + "'", str55, "[hi!]");
    }
}

